[{"categories":["workshop"],"content":" ","date":"2021-12-19","objectID":"/workshopold/","tags":["workshop"],"title":"Workshop/Talk","uri":"/workshopold/"},{"categories":["workshop"],"content":"\r\r","date":"2021-12-19","objectID":"/workshopold/:0:0","tags":["workshop"],"title":"Workshop/Talk","uri":"/workshopold/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/book/book/","tags":["",""],"title":"book","uri":"/book/book/"},{"categories":[""],"content":" The Fellowship of the Ring J.R.R. Tolkien Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join 1984 George Orwell Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join To Kill a Mockingbird Harper Lee Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join Great Gatsby F Scott Fitzgerald Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join ","date":"2020-12-19","objectID":"/book/book/:0:0","tags":["",""],"title":"book","uri":"/book/book/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/videos/book/","tags":["",""],"title":"book","uri":"/videos/book/"},{"categories":[""],"content":" Recent Advances in Computational Optimization by Stefka Fidanova 1.987 voters Many real-world problems arising in engineering, economics, medicine and other domains can be formulated as optimization tasks. Every day we solve optimization problems. Optimization occurs in minimizing time and cost or the maximization of the profit, quality and efficiency. Such problems are frequently characterized by non-convex, non-differentiable, discontinuous, noisy or dynamic objective functions and constraints which ask for adequate computational methods. See The Book Ten Thousand Skies Above You by Claudia Gray 1.987 voters The hunt for each splinter of Paul's soul sends Marguerite racing through a war-torn San Francisco. See The Book A Tale For The Time Being by Ruth Ozeki 1.987 voters In Tokyo, sixteen-year-old Nao has decided there’s only one escape from her aching loneliness and her classmates’ bullying. See The Book The Great Gatsby by F.Scott Fitzgerald 1.987 voters The Great Gatsby, F. Scott Fitzgerald’s third book, stands as the supreme achievement of his career. See The Book The Great Gatsby by F.Scott Fitzgerald 1.987 voters The Great Gatsby, F. Scott Fitzgerald’s third book, stands as the supreme achievement of his career. See The Book After You by Jojo Moyes 1.987 voters Louisa Clark is no longer just an ordinary girl living an ordinary life. After the transformative six months spent. See The Book Life Sciences Computational Biology Bioinformatics Biostatistics Mathematics Computer Science Web Graphics \u0026 Design Changes Are by Richard Russo 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Dominicana by Angie Cruz 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Kimberly Jones like this The Travellers by Regina Porter 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Adam and Kimberly like this Afternoon Of A Faun by James Lasdun 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Flash Count Diary by Darcey Steinke 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Angelina Stone and 2 other friends like this Picnic Comma Lightning by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. George and Mike like this Very Nica by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Stay And Fight by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and Jonathan like this ","date":"2020-12-19","objectID":"/videos/book/:0:0","tags":["",""],"title":"book","uri":"/videos/book/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/videos/book1/","tags":["",""],"title":"book","uri":"/videos/book1/"},{"categories":[""],"content":" BIG MAGIC by Elizabeth Gilbert 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. See The Book Ten Thousand Skies Above You by Claudia Gray 1.987 voters The hunt for each splinter of Paul's soul sends Marguerite racing through a war-torn San Francisco. See The Book A Tale For The Time Being by Ruth Ozeki 1.987 voters In Tokyo, sixteen-year-old Nao has decided there’s only one escape from her aching loneliness and her classmates’ bullying. See The Book The Great Gatsby by F.Scott Fitzgerald 1.987 voters The Great Gatsby, F. Scott Fitzgerald’s third book, stands as the supreme achievement of his career. See The Book After You by Jojo Moyes 1.987 voters Louisa Clark is no longer just an ordinary girl living an ordinary life. After the transformative six months spent. See The Book Life Sciences Computational Biology Bioinformatics Biostatistics Mathematics Computer Science Changes Are You by Richard Russo 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Dominicana by Angie Cruz 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Kimberly Jones like this The Travellers by Regina Porter 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Adam and Kimberly like this Afternoon Of A Faun by James Lasdun 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Flash Count Diary by Darcey Steinke 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Angelina Stone and 2 other friends like this Picnic Comma Lightning by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. George and Mike like this Very Nica by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Stay And Fight by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and Jonathan like this ","date":"2020-12-19","objectID":"/videos/book1/:0:0","tags":["",""],"title":"book","uri":"/videos/book1/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/videos/book1/book/","tags":["",""],"title":"book","uri":"/videos/book1/book/"},{"categories":[""],"content":" The Fellowship of the Ring J.R.R. Tolkien Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join 1984 George Orwell Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join To Kill a Mockingbird Harper Lee Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join Great Gatsby F Scott Fitzgerald Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join ","date":"2020-12-19","objectID":"/videos/book1/book/:0:0","tags":["",""],"title":"book","uri":"/videos/book1/book/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/videos/book1/book1/","tags":["",""],"title":"book","uri":"/videos/book1/book1/"},{"categories":[""],"content":" BIG MAGIC by Elizabeth Gilbert 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. See The Book Ten Thousand Skies Above You by Claudia Gray 1.987 voters The hunt for each splinter of Paul's soul sends Marguerite racing through a war-torn San Francisco. See The Book A Tale For The Time Being by Ruth Ozeki 1.987 voters In Tokyo, sixteen-year-old Nao has decided there’s only one escape from her aching loneliness and her classmates’ bullying. See The Book The Great Gatsby by F.Scott Fitzgerald 1.987 voters The Great Gatsby, F. Scott Fitzgerald’s third book, stands as the supreme achievement of his career. See The Book After You by Jojo Moyes 1.987 voters Louisa Clark is no longer just an ordinary girl living an ordinary life. After the transformative six months spent. See The Book Popular by Genre All Genres Business Science Fiction Philosophy Biography Changes Are by Richard Russo 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Dominicana by Angie Cruz 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Kimberly Jones like this The Travellers by Regina Porter 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Adam and Kimberly like this Afternoon Of A Faun by James Lasdun 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Flash Count Diary by Darcey Steinke 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Angelina Stone and 2 other friends like this Picnic Comma Lightning by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. George and Mike like this Very Nica by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Stay And Fight by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and Jonathan like this ","date":"2020-12-19","objectID":"/videos/book1/book1/:0:0","tags":["",""],"title":"book","uri":"/videos/book1/book1/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/videos/book/book/","tags":["",""],"title":"book","uri":"/videos/book/book/"},{"categories":[""],"content":" The Fellowship of the Ring J.R.R. Tolkien Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join 1984 George Orwell Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join To Kill a Mockingbird Harper Lee Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join Great Gatsby F Scott Fitzgerald Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quod ratione impedit temporibus maiores autem aperiam assumenda exercitationem, quisquam nobis esse. 14 / 30 Join ","date":"2020-12-19","objectID":"/videos/book/book/:0:0","tags":["",""],"title":"book","uri":"/videos/book/book/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/videos/book/book1/","tags":["",""],"title":"book","uri":"/videos/book/book1/"},{"categories":[""],"content":" BIG MAGIC by Elizabeth Gilbert 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. See The Book Ten Thousand Skies Above You by Claudia Gray 1.987 voters The hunt for each splinter of Paul's soul sends Marguerite racing through a war-torn San Francisco. See The Book A Tale For The Time Being by Ruth Ozeki 1.987 voters In Tokyo, sixteen-year-old Nao has decided there’s only one escape from her aching loneliness and her classmates’ bullying. See The Book The Great Gatsby by F.Scott Fitzgerald 1.987 voters The Great Gatsby, F. Scott Fitzgerald’s third book, stands as the supreme achievement of his career. See The Book After You by Jojo Moyes 1.987 voters Louisa Clark is no longer just an ordinary girl living an ordinary life. After the transformative six months spent. See The Book Popular by Genre All Genres type Business Science Fiction Philosophy Biography Changes Are by Richard Russo 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Dominicana by Angie Cruz 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Kimberly Jones like this The Travellers by Regina Porter 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Adam and Kimberly like this Afternoon Of A Faun by James Lasdun 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Flash Count Diary by Darcey Steinke 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Angelina Stone and 2 other friends like this Picnic Comma Lightning by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. George and Mike like this Very Nica by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and 2 other friends like this Stay And Fight by Lucy Parker 1.987 voters Readers of all ages and walks of life have drawn inspiration and empowerment from Elizabeth Gilbert’s books for years. Samantha William and Jonathan like this ","date":"2020-12-19","objectID":"/videos/book/book1/:0:0","tags":["",""],"title":"book","uri":"/videos/book/book1/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/videos/cbw/","tags":["",""],"title":"CBW","uri":"/videos/cbw/"},{"categories":[""],"content":" CBW's Machine LEarning workshop The course schedule can be found here. Pre-work including programs to install can be found here. CBW's Machine LEarning workshop - 01 Introduction to Machine Learning CBW’s Machine LEarning workshop - 02 Lecture \u0026 Lab_ Decision Trees CBW's Machine LEarning workshop - 03 Lecture - Neural Networks CBW's Machine LEarning workshop - 04 Lab Neural Networks for secondary structure CBW's Machine LEarning workshop - 05 Lecture Hidden Markov Models CBW's Machine LEarning workshop - 06 Lab Gene Finding with NNs and HMMs CBW's Machine LEarning workshop - 08 Lab Machine Learning with Keras \u0026 Scikit-Learn $(document).ready(function () { $(\".item\").click(function () { let youtube_id = $(this).children(\"img\").attr(\"data-id\"); $(this).children(\".youtube_icon\") .addClass(\"active\").parent() .siblings() .children(\".youtube_icon\") .removeClass(\"active\") let newUrl = `//player.bilibili.com/player.html?aid=${youtube_id}`; $(\"#video_id\").attr(\"src\", newUrl); }) //due to slow connection video is playing slow // you can call your playlist using youtube api }) ","date":"2020-12-19","objectID":"/videos/cbw/:0:0","tags":["",""],"title":"CBW","uri":"/videos/cbw/"},{"categories":[""],"content":"logo","date":"2020-12-19","objectID":"/logo/","tags":["",""],"title":"logo","uri":"/logo/"},{"categories":[""],"content":" DNA ","date":"2020-12-19","objectID":"/logo/:0:0","tags":["",""],"title":"logo","uri":"/logo/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/videos/nfcore/","tags":["",""],"title":"nf-core","uri":"/videos/nfcore/"},{"categories":[""],"content":" nf-core online courses nf-core is a community effort to collect a curated set of analysis pipelines built using Nextflow. Find out more at here. Where do I start writing my own DSL2 pipeline (nf-core_bytesize) Development Environments and Workflows nf-corebytesize nf-core tools guidelines - Phil Ewels nf-corecoproid nf-corebytesize #1 nf-coresarek nf-corebytesize #2 $(document).ready(function () { $(\".item\").click(function () { let youtube_id = $(this).children(\"img\").attr(\"data-id\"); $(this).children(\".youtube_icon\") .addClass(\"active\").parent() .siblings() .children(\".youtube_icon\") .removeClass(\"active\") let newUrl = `//player.bilibili.com/player.html?aid=${youtube_id}`; $(\"#video_id\").attr(\"src\", newUrl); }) //due to slow connection video is playing slow // you can call your playlist using youtube api }) ","date":"2020-12-19","objectID":"/videos/nfcore/:0:0","tags":["",""],"title":"nf-core","uri":"/videos/nfcore/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/videos/videos/","tags":["",""],"title":"nf-core","uri":"/videos/videos/"},{"categories":[""],"content":" nf-core online courses nf-core is a community effort to collect a curated set of analysis pipelines built using Nextflow. Find out more at here. Where do I start writing my own DSL2 pipeline (nf-core_bytesize) Development Environments and Workflows nf-corebytesize nf-core tools guidelines - Phil Ewels nf-corecoproid nf-corebytesize #1 nf-coresarek nf-corebytesize #2 $(document).ready(function () { $(\".item\").click(function () { let youtube_id = $(this).children(\"img\").attr(\"data-id\"); $(this).children(\".youtube_icon\") .addClass(\"active\").parent() .siblings() .children(\".youtube_icon\") .removeClass(\"active\") let newUrl = `//player.bilibili.com/player.html?aid=${youtube_id}`; $(\"#video_id\").attr(\"src\", newUrl); }) //due to slow connection video is playing slow // you can call your playlist using youtube api }) ","date":"2020-12-19","objectID":"/videos/videos/:0:0","tags":["",""],"title":"nf-core","uri":"/videos/videos/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/clip/","tags":["",""],"title":"Resource","uri":"/clip/"},{"categories":[""],"content":" Arc Institute @font-face{font-family:'IBM Plex Mono';font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexmono/v7/-F6qfjptAgt5VM-kVkqdyU8n3twJ8lQ.woff) format('woff')}@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexsans/v9/zYXgKVElMYYaJe8bpLHnCwDKtdU.woff) format('woff')}@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexsans/v9/zYX9KVElMYYaJe8bpLHnCwDKjSL9MIU.woff) format('woff')}@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexsans/v9/zYX9KVElMYYaJe8bpLHnCwDKjQ76MIU.woff) format('woff')}@font-face{font-family:'IBM Plex Mono';font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexmono/v7/-F6qfjptAgt5VM-kVkqdyU8n3twJwl1FgsAXHNlYzg.woff2) format('woff2');unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'IBM Plex Mono';font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexmono/v7/-F6qfjptAgt5VM-kVkqdyU8n3twJwlRFgsAXHNlYzg.woff2) format('woff2');unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'IBM Plex Mono';font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexmono/v7/-F6qfjptAgt5VM-kVkqdyU8n3twJwl9FgsAXHNlYzg.woff2) format('woff2');unicode-range:U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EF9,U+20AB}@font-face{font-family:'IBM Plex Mono';font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexmono/v7/-F6qfjptAgt5VM-kVkqdyU8n3twJwl5FgsAXHNlYzg.woff2) format('woff2');unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'IBM Plex Mono';font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexmono/v7/-F6qfjptAgt5VM-kVkqdyU8n3twJwlBFgsAXHNk.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexsans/v9/zYXgKVElMYYaJe8bpLHnCwDKhdzeFaxOedfTDw.woff2) format('woff2');unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexsans/v9/zYXgKVElMYYaJe8bpLHnCwDKhdXeFaxOedfTDw.woff2) format('woff2');unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexsans/v9/zYXgKVElMYYaJe8bpLHnCwDKhdLeFaxOedfTDw.woff2) format('woff2');unicode-range:U+0370-03FF}@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexsans/v9/zYXgKVElMYYaJe8bpLHnCwDKhd7eFaxOedfTDw.woff2) format('woff2');unicode-range:U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EF9,U+20AB}@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexsans/v9/zYXgKVElMYYaJe8bpLHnCwDKhd_eFaxOedfTDw.woff2) format('woff2');unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'IBM Plex Sans';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/ibmplexsans/v9/zYXgKVElMYYaJe8bpLHnCwDKhdHeFaxOedc.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U","date":"2020-12-19","objectID":"/clip/:0:0","tags":["",""],"title":"Resource","uri":"/clip/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/resource/","tags":["",""],"title":"Resource","uri":"/resource/"},{"categories":[""],"content":" Nextflow Training Workshop This guide complements the full Nextflow documentation - if you ever have any doubts, head over to the docs located here. By the end of this course you should: Be proficient in writing Nextflow pipelines Know the basic Nextflow concepts of Channels, Processes and Operators Have an understanding of containerised workflows Understand the different execution platforms supported by Nextflow Be introducted to the Nextflow community and ecosystem Nextflow Training Workshop - July 2020 - Day 1 Nextflow Training Workshop - July 2020 - Day 2 Nextflow Training Workshop - July 2020 - Day 3 Nextflow Training Workshop - July 2020 - Day 4 Nextflow Training Workshop - July 2020 - Day 5 nf-core online courses CBW's Machine LEarning workshop $(document).ready(function () { $(\".item\").click(function () { let youtube_id = $(this).children(\"img\").attr(\"data-id\"); $(this).children(\".youtube_icon\") .addClass(\"active\").parent() .siblings() .children(\".youtube_icon\") .removeClass(\"active\") let newUrl = `//player.bilibili.com/player.html?aid=${youtube_id}`; $(\"#video_id\").attr(\"src\", newUrl); }) //due to slow connection video is playing slow // you can call your playlist using youtube api }) ","date":"2020-12-19","objectID":"/resource/:0:0","tags":["",""],"title":"Resource","uri":"/resource/"},{"categories":null,"content":"Software","date":"2020-12-19","objectID":"/software/","tags":null,"title":"Software","uri":"/software/"},{"categories":null,"content":" Hexagon Sticker for Developed R/Python Packages 2021 Computational Biology Workflows 2021 ONT Workflow Jan18 Machine Learning for Single Cell Analysis nf-core/ontworkflow is a bioinformatics analysis pipeline for Nanopore DNA/RNA sequencing data that can be used to perform basecalling, demultiplexing, QC, mapping and downstream analysis.(Developed in MajorBio, Privated and Unpublished). Learn More Github Nov29 circRNA Workflow nf-core/circrnaworkflow is a best-practice analysis pipeline for the quantification, miRNA target prediction and differential expression analysis of circular RNAs in paired-end RNA sequencing data (Developed in MajorBio, Privated and Unpublished). Github Oct23 New Seminar on Newest Food Recipe from World’s Best Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More Oct23 Learn from small things to create something bigger. Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More 2020 Nov29 circRNA Workflow circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data (Developed in MajorBio, Privated and Unpublished). Github DYCA Jan18 Machine Learning for Single Cell Analysis DYCA: an new non-hierarchical clustering methods for single-cell RNA-seq data integration and evaluation (in review). Learn More Github sc/nRNAseq Workflow Jan18 Machine Learning for Single Cell Analysis nf-core/scnRNAseq Workflow is a bioinformatics pipeline for scalable, reproducible, best-practice analyses of single-cell/nuclei RNA-sequencing data and can be used to perform QC, mapping and downstream analysis (cluster, annotaion, infer CNV, trajectory analysis and RNA velocity). Designed By Meng Luo (Developed in MajorBio, Privated and Unpublished). Learn More Github Oct23 New Seminar on Newest Food Recipe from World’s Best Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More Oct23 Learn from small things to create something bigger. Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More ","date":"2020-12-19","objectID":"/software/:0:0","tags":null,"title":"Software","uri":"/software/"},{"categories":[""],"content":"Workshop/Talk","date":"2020-12-19","objectID":"/workshop/","tags":["",""],"title":"Workshop/Talk","uri":"/workshop/"},{"categories":[""],"content":" BOOKDOWN Write HTML, PDF, ePub, and Kindle books with R Markdown SEMINARS This is an embedded Microsoft Office presentation, powered by Office. nf-core tools guidelines - Phil Ewels $(document).ready(function () { $(\".item\").click(function () { let youtube_id = $(this).children(\"img\").attr(\"data-id\"); $(this).children(\".youtube_icon\") .addClass(\"active\").parent() .siblings() .children(\".youtube_icon\") .removeClass(\"active\") let newUrl = `//www.slideshare.net/slideshow/embed_code/key/${youtube_id}`; $(\"#video_id\").attr(\"src\", newUrl); }) //due to slow connection video is playing slow // you can call your playlist using youtube api }) ","date":"2020-12-19","objectID":"/workshop/:0:0","tags":["",""],"title":"Workshop/Talk","uri":"/workshop/"},{"categories":[""],"content":" ","date":"2020-12-19","objectID":"/joinus/","tags":[""],"title":"加入我们 ","uri":"/joinus/"},{"categories":[""],"content":" JOIN US The MajorBio is always on the look out for talented undergraduate, graduate students, and PhD candidates who possess outstanding computational skills or have a strong interest in developing such skills. If this describes you, please click the button below to access the Team Member Interest Form. For Bioinformatics Engineer Apply Please send enquiries to Meng Luo (骆孟), providing your academic CV or Resume (and proof of your English proficiency (the score of CET-4 or CET-6 or TOEFL or IELTS, if you are not a English speaker)), and a summary of your research interests. Suitable candidates will be contact by phone in a discussion concerning the possibility of undertaking your career in the MajorBio. After you have received confirmation from HR, the next step is to set up a time for a Zoom teleconference. Successful applicants will have: Master’s degree or Ph.D. in Bioinformatics, Computational Science, Statistic or Genetics, Machine learning, Computational Biology, overseas education background is preferred Experience with at least one of the following programming languages: R (required) and at least one of Python or Perl required (C++/Javascript) and Linux operating system Some level of single cell (scRNAseq) research experience is preferred Proficiency in the primary data structure and algorithm, and statistical methods Proficiency in the use of bioinformatics tools, workflow and database resources Relevant work experience in high-throughput biochip data analysis, second-generation or third-generation (Full-length transcriptome) high-throughput sequencing data analysis, and bioinformatics analysis is preferred First-authored English papers (or three if co-first authors) with submitted, PREPRINT or accepted or published status in journals is perferred With good spoken and written communication skills in English is perferred Duties/Responsibilities/Accountabilities: Processing and analysis of DNA and RNA sequencing data Large-scale genome-wide association studies Analyze biological data using various bioinformatics software and statistical methods Design, develop and maintain various processes of bioinformatics analysis Analyze project situation and deal with after-sales problems by high-throughput sequencing Evaluate customer intentions, analyze details and provide solutions Write technical documents and conduct training If you’re interested in applying for this position, please send your resume or CV to: meng.luo@majorbio.com Why Shanghai? Shanghai, the Oriental Paris, is China's biggest and most prosperous city. It is one of China's greatest economic and cultural centers, therefore it is popularly seen as the birthplace of everything considered modern in China. The city rivals New York or Paris in terms of modernity, and boasts a blended culture of the East and the West. Shanghai is a tourist destination famous for historical landmarks as well as modern, ever-expanding skylines. Top 7 Reasons to Visit Shanghai The Top 20 Things to Do in Shanghai Books online courses ","date":"2020-12-19","objectID":"/joinus/:0:0","tags":[""],"title":"加入我们 ","uri":"/joinus/"},{"categories":[""],"content":" ","date":"2020-12-19","objectID":"/team/","tags":[""],"title":"动植物组学生物信息团队","uri":"/team/"},{"categories":[""],"content":" Meet the Team In MCBRL Meng Luo Meng Luo Lab Manager meng.luo@majorbio.com Meng Luo Lab Ma Wanyun Yang Wanyun Yang Bioinformatics Engineer wanyun.yang@majorbio.com Jiawen Ma Jiawen Ma Bioinformatics Engineer jiawen.ma@majorbio.com Wanyun Yang Yunhe Liang Bioinformatics Engineer yunhe.liang@majorbio.com Chaonan Liu Chaonan Liu Bioinformatics Engineer chaonan.liu@majorbio.com Wanyun Yang Shang Wei Bioinformatics Engineer wanyun.yang@majorbio.com Jiawen Ma Zhenghong Chang Bioinformatics Engineer jiawen.ma@majorbio.com Wanyun Yang Yunhe Liang Bioinformatics Engineer yunhe.liang@majorbio.com Visiting Coworkers Daokuan Zhang Daokuan Zhang Bioinformatics Engineer Xiaolong He Xiaolong He Bioinformatics Engineer Jiameng Li Jiameng Li Bioinformatics Engineer Chunxiang Xue Chunxiang Xue Bioinformatics Engineer Dongmei Fu Dongmei Fu Bioinformatics Engineer dongmei.fu@majorbio.com Github Contributions Chart Visiting Coworkers Visiting Coworkers function myFunction() { var x = document.getElementById(\"myDIV\"); if (x.style.display === \"block\") { x.style.display = \"none\"; } else { x.style.display = \"block\"; } } function myFunction() { var x = document.getElementById(\"myDIV\"); if (x.style.display === \"none\") { x.style.display = \"block\"; } else { x.style.display = \"none\"; } } $('#GFG_UP').text( \"Click on button to toggle the DIV Box using Bootstrap.\"); function show(divId) { $(\"#\" + divId).show(); } function GFG_Fun() { show('div'); $('#GFG_DOWN').text(\"DIV Box is visible.\"); } ","date":"2020-12-19","objectID":"/team/:0:0","tags":[""],"title":"动植物组学生物信息团队","uri":"/team/"},{"categories":[""],"content":"2020年美吉生物发表的高分文章","date":"2020-12-19","objectID":"/publication/","tags":[""],"title":"文章发表","uri":"/publication/"},{"categories":[""],"content":" Our Team Completed Projects In MajorBio \u0026 Selected Publications (IF 7, 2020-present) LECT2,a Ligand for Tie1,Plays a Crucial Role in Liver Fibrogenesis Here, we show that leukocyte cell-derived chemotaxin 2 (LECT2) is a functional ligand of Tie1, a poorly characterized endothelial cell (EC)-specific orphan receptor. Upon binding to Tie1, LECT2 interrupts Tie1/Tie2 heterodimerization, facilitates Tie2/Tie2 homodimerization, activates PPAR signaling, and inhibits the migration and tube formations of EC. In vivo studies showed that LECT2 overexpression inhibits portal angiogenesis, promotes sinusoid capillarization, and worsens fibrosis, whereas these changes were reversed in Lect2-KO mice. Adeno-associated viral vector serotype 9 (AAV9)-LECT2 small hairpin RNA (shRNA) treatment significantly attenuates fibrosis. Upregulation of LECT2 is associated with advanced human liver fibrosis staging. We concluded that targeting LECT2/Tie1 signaling may represent a potential therapeutic target for liver fibrosis, and serum LECT2 level may be a potential biomarker for the screening and diagnosis of liver fibrosis. Paper Selective Inhibition of STRN3-Containing PP2A Phosphatase Restores Hippo Tumor-Suppressor Activity in Gastric Cancer Loss of Hippo tumor-suppressor activity and hyperactivation of YAP are commonly observed in cancers. Inactivating mutations of Hippo kinases MST1/2 are uncommon, and it remains unclear how their activity is turned off during tumorigenesis. We identified STRN3 as an essential regulatory subunit of protein phosphatase 2A (PP2A) that recruits MST1/2 and promotes its dephosphorylation, which results in YAP activation. We also identified STRN3 upregulation in gastric cancer correlated with YAP activation and poor prognosis. Based on this mechanistic understanding and aided by structure-guided medicinal chemistry, we developed a highly selective peptide inhibitor, STRN3-derived Hippo-activating peptide, or SHAP, which disrupts the STRN3-PP2Aa interaction and reactivates the Hippo tumor suppressor, inhibits YAP activation, and has antitumor effects in vivo. Paper Phage-guided modulation of the gut microbiota of mouse models of colorectal cancer augments their responses to chemotherapy The microbiota in the human gut is strongly correlated with the progression of colorectal cancer (CRC) and with therapeutic responses to CRC. Here, by leveraging the higher concentration of the pro-tumoural Fusobacterium nucleatum and the absence of antineoplastic butyrate-producing bacteria in the faecal microbiota of patients with CRC, we show that—in mice with orthotopic colorectal tumours or with spontaneously formed colorectal tumours—oral or intravenous administration of irinotecan-loaded dextran nanoparticles covalently linked to azide-modified phages that inhibit the growth of F. nucleatum significantly augments the efficiency of first-line chemotherapy treatments of CRC. We also show that oral administration of the phage-guided irinotecan-loaded nanoparticles in piglets led to negligible changes in haemocyte counts, immunoglobulin and histamine levels, and liver and renal functions. Phage-guided nanotechnology for the modulation of the gut microbiota might inspire new approaches for the treatment of CRC. Paper Photoelectric Responsive Extracellular Matrix for Bone Engineering Using noninvasive stimulation of cells to control cell fate and improve bone regeneration by optical stimulation can achieve the aim of precisely orchestrating biological activities. In this study, we create a fast and repeatable photoelectric-responsive microenvironment around an implant using a bismuth sulfide/hydroxyapatite (BS/HAp) film. The unexpected increase of photocurrent on the BS/HAp film under near-infrared (NIR) light is mainly due to the depletion of holes through PO43– from HAp and interfacial charge transfer by HAp compared with BS. The electrons activate the Na+ channel of mesenchymal stem cells (MSCs) and change the cell adhesion in the ","date":"2020-12-19","objectID":"/publication/:0:0","tags":[""],"title":"文章发表","uri":"/publication/"},{"categories":[""],"content":" ","date":"2020-12-19","objectID":"/contact/","tags":[""],"title":"联系我们 ","uri":"/contact/"},{"categories":[""],"content":" Name * Current University Affiliation * Current Academic Standing * Undergraduate Undergraduate Graduate PhD Post-Doctoral Candidate Other Email Address * Phone Number * Brief Biography * Submit var x, i, j, l, ll, selElmnt, a, b, c; /*look for any elements with the class \"custom-select\":*/ x = document.getElementsByClassName(\"custom-select\"); l = x.length; for (i = 0; i ","date":"2020-12-19","objectID":"/contact/:0:0","tags":[""],"title":"联系我们 ","uri":"/contact/"},{"categories":["scRNAseq","Pipeline","workflow"],"content":"The workflow of hdWGCNA analysis for Single-cell Spatial Transcriptomics data","date":"2023-06-19","objectID":"/posts/sthdwgcna-pipeline/","tags":["SC","ST","workflow","SCRNAseq"],"title":"The workflow of hdWGCNA analysis for Single-cell Spatial Transcriptomics data","uri":"/posts/sthdwgcna-pipeline/"},{"categories":["scRNAseq","Pipeline","workflow"],"content":"The workflow of hdWGCNA analysis for Single-cell Spatial Transcriptomics data RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic 空间转录共表达网络分析流程 分析思路：针对数据的不同，分两种情况，当前流程不能进行多个样本分析，如果要分析需要针对过个样本的重新修改脚本（可以直接合并或者单独分析），目前的思路是分析单个样本的同单细胞分析一样的做法，多个样本需要（merge rds），再进行分析： 1，如果从原始count开始处理（针对spaceranger获得的结果），则只能按照cluster进行WGCNA分析，我们前期数据的过滤及分析目前写的脚本只能分析人和鼠的物种； 2，提供rds分析的结果及细胞注释结果，如果提供合并后的结果，同时有细胞注释的结果则也可以按照细胞注释的结果进行分析。 分析内容：数据预处理；模块识别；模块表型相关；hub基因可视化；差异模块分析 *基于以上做好的数据准备：* *1，包含多个样本（样本得必须单独分开分析，只不过需要吧几个样本都放在一个object里面），数据已经进行常规的分析，但是没有细胞注释。* 2，*包含多个样本，数据已经进行常规的分析，同时有注释信息的结果。* 3，*分析则可以按照样本来进行分析，不依赖细胞类型及聚类分析来进行分析，这个根据给的分组情况来选择（分组中也有不同的细胞类型，虽然是一起分析的，但是可以按照样本来划分从而进行分析）。* 4，*先过滤样本，然后再使用metaspot（同metacell）的方法来构建所有的关系，但是这里如果构建得基于你的数据，比如聚类的结果，或者不同样本间的关系，然后再往下构建WGCNA的分析。* 5，*如果是空间转录的常规分析推荐使用SCT的方法做标准化处理前期的数据**，和后面不同标准化的方法不同，根据空间的分析，最好使用SCT的处理来进行分析。Metaspot（可以按照每个细胞类型或者聚类的分类结果来进行分析） 之后，总的原本spot会减少很多，后续的获得的spot也会变得更少或许就几十个（小于50则会剔除）。* 6，*空间转录用SCT的数据没有问题，seurat官方推荐使用，做WGCNA没有像单细胞那种做power遇到问题，就是power值，很难能到达0.8。**（kME计算时间很长和单细胞的不同，多个循环harmony计算的时间很长（最多10个），难于收敛（超过一天的计算都有可能）**）* 7，*作图说明：如果分的模块很多的情况下，有些可视化的图需要修改输出的size，加大* 一、运行流程 Rscript4.2 /mnt/ilustre/users/meng.luo/project/RNA/scRNA/hdWGCNA/spatial/hdWGCNA_ST_pipeline.R 参考分析路径：/mnt/ilustre/users/meng.luo/project/RNA/scRNA/hdWGCNA/spatial 根据不同的分析模块，给出对应不同的灵活分析参数，正常情况按照默认的运行没有问题。 具体参数（运行需要加载相应的代码（网络图做了更改）bin路径下，所以运行脚本时需要给脚本的绝对路径）： Rscript4.2 /mnt/ilustre/users/meng.luo/project/RNA/scRNA/hdWGCNA/spatial/hdWGCNA_ST_pipeline.R --rds mouse_brain_ST_anterior.rds --cellfile cells.csv 详细参数： Options: -P PREDATA, --predata=PREDATA PROCESSED spatial data -H OUTSPATH, --outsPath=OUTSPATH Input spaceRanger outs pathway -j SLICE, --slice=SLICE spatial image name -J SPECIES, --species=SPECIES species name (human or mouse) -Z SCTRANSFORM, --SCTransform=SCTRANSFORM SCTransform on single-cell data -r RDS, --rds=RDS Input rds file -g GENESELECT, --geneselect=GENESELECT the gene selection approach variable( VariableFeatures) fraction (default) all or custom(gene_list) -f FRACTION, --fraction=FRACTION fraction of cells that a gene needs to be expressed in order to be included -l LIST, --list=LIST gene selection approach custom and give the custom gene list -c CELLFILE, --cellfile=CELLFILE cell annotation file -e CELL, --cell=CELL cell name -t SEURATCLUSTER, --seuratcluster=SEURATCLUSTER use the default seurat clusters -u CLUSTER, --cluster=CLUSTER seurat clusters number -o OUTDIR, --outdir=OUTDIR output folder name -d REDUCTION, --reduction=REDUCTION reduction A dimensionality reduction stored in the Seurat object. Default umap -m MODE, --mode=MODE determines how to make gene expression profiles for metaspots from their constituent single cells. Options are \"average\" or \"sum\". -i MIN_SPOTS, --min_spots=MIN_SPOTS the minimum number of spots in a particular grouping to construct metaspots -y METACELLS, --metacells=METACELLS use metacell or not -v SOFT, --soft=SOFT softpower VALUE -x MAXBLOCKSIZE, --maxBlockSize=MAXBLOCKSIZE integer giving maximum block size for module detection -T CORTYPE, --corType=CORTYPE pearson and bicor corresponding to Pearson and bidweight midcorrelation respectively -N NETWORKTYPE, --networkType=NETWORKTYPE network type Allowed values are (unique abbreviations of) unsigned signed signed hybrid -M TOMTYPE, --TOMType=TOMTYPE Allowed values are (unique abbreviations of) unsigned signed signed hybrid -U MINMODULESIZE, --minModuleSize=MINMODULESIZE minimum module size for module detection -I MERGECUTHEIGHT, --mergeCutHeight=MERGECUTHEIGHT dendrogram cut height for module merging -L DETECTCUTHEIGHT, --detectCutHeight=DETECTCUTHEIGHT dendrogram cut height for module detection -V GBV, --gbv=GBV chose the hME(default) or ME -S SCALE.MODEL.USE, --scale.model.use=SCALE.MODEL.USE linear poisson or negbinom -F CORFNC, --corFnc=CORFNC character string specifying the function to be used to calculate co-expression similarity Defaults to Pearson correlation -C COROPTIONS, --corOptions=COROPTIONS Use use = p me","date":"2023-06-19","objectID":"/posts/sthdwgcna-pipeline/:1:0","tags":["SC","ST","workflow","SCRNAseq"],"title":"The workflow of hdWGCNA analysis for Single-cell Spatial Transcriptomics data","uri":"/posts/sthdwgcna-pipeline/"},{"categories":["RNAseq","Pipeline","workflow"],"content":"Integrative approaches for large-scale transcriptome-wide association studies","date":"2023-05-20","objectID":"/posts/twas-pipeline/","tags":["GWAS","TWAS","workflow","RNAseq"],"title":"Integrative approaches for large-scale transcriptome-wide association studies","uri":"/posts/twas-pipeline/"},{"categories":["RNAseq","Pipeline","workflow"],"content":"The workflow of TWAS analysis RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic G/TWAS简介 全基因组关联分析(Genome-wide association study, GWAS) 的目的是将复杂性状的研究从候选基因转向全基因组水平，以期用更大规模的检测得到与表型变异相关的每一个基因。将基因组关联分析（Genome-Wide Association Studies，GWAS）与基因表达数据集整合，研究基因-性状的关联性，找出与性状变异最为相关的基因。用表达数量性状基因座（expression QuantitativeTrait Loci，eQTL）的mRNA/蛋白质(protein)的表达水平与数量性状的比例关系来研究遗传突变与基因表达的相关性；并将eQTL分析作为一种过渡，即遗传突变-\u003e基因表达变化-\u003e表型，来阐释突变导致表型变异的原理。 目前该方法只基于GWAS汇总统计的结果和基于基因预测的结果来进行关联分析（目前分析软件是用FUSION（http://gusevlab.org/projects/fusion/）来进行分析）。 TWAS分析方法（图1）： RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic \\1. 直接估计基因表达效应大小(eQTL)，建模所有snp (BLUP)，或建模snp和效应大小(BSLMM)或（TOP1/LASSO/Elastic-net）。(小群体) \\2. 基于个体基因型使用评估的效应大小直接预测其基因型样本的表达，并测量预测表达与性状之间的关联（大群体）。或间接估计预测表达与性状之间的相关性，作为snp -性状标准化效应量的加权线性组合，同时考虑snp之间的LD（连锁）。 计算例子： Psychiatric Genomics Consortium (PGC)（Schizophrenia 例子1）数据来源精神病相关（ssGWAS 36,989 cases and 113,075 controls）和GTEx v8 (全血的数据1,264 X 4,701) PGC Schizophrenia summary statistics to perform a TWAS with the GTEx whole-blood data RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic Psychiatric Genomics Consortium (PGC)（例子1）一个基因座中识别多个相关基因(或来自多个组织的相同基因)，我们希望识别哪些是条件独立的（Joint/conditional tests and plots）或 （Fine-mapping multiple TWAS associations at a locus） RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic 一个基因座中识别多个相关基因(或来自多个组织的相同基因)，我们希望识别哪些是条件独立的（Joint/conditional tests and plots）或 （Fine-mapping multiple TWAS associations at a locus） RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic learning Video \rReferences Gusev, A., Ko, A., Shi, H. et al. Integrative approaches for large-scale transcriptome-wide association studies. Nat Genet 48, 245–252 (2016). https://doi.org/10.1038/ng.3506 ","date":"2023-05-20","objectID":"/posts/twas-pipeline/:1:0","tags":["GWAS","TWAS","workflow","RNAseq"],"title":"Integrative approaches for large-scale transcriptome-wide association studies","uri":"/posts/twas-pipeline/"},{"categories":["scRNAseq","Pipeline","workflow"],"content":"The workflow of hdWGCNA analysis for scRNAseq data","date":"2023-05-20","objectID":"/posts/schdwgcna-pipeline/","tags":["SC","ST","workflow","SCRNAseq"],"title":"The workflow of hdWGCNA analysis for scRNAseq data","uri":"/posts/schdwgcna-pipeline/"},{"categories":["scRNAseq","Pipeline","workflow"],"content":"The workflow of hdWGCNA analysis for scRNAseq data RNA-seq Schematicsc/nRNA-seq Schematic \" RNA-seq Schematic 分析思路：有细胞注释，计算所有的细胞类型，或者提供只计算某个细胞；使用seurat的聚类结果，计算所有的聚类结果，或者只计算某个聚类结果。 分析内容：数据预处理；模块识别；模块表型相关；hub基因可视化；差异模块分析 问题联系：骆孟（meng.luo@majorbio.com） Constructing co-expression networks from high-dimensional transcriptomics data 一、运行流程 Rscript4.2 /mnt/ilustre/users/meng.luo/project/RNA/scRNA/hdWGCNA/hdWGCNA_SC_pipeline.R 参考分析路径：/mnt/ilustre/users/meng.luo/project/RNA/scRNA/hdWGCNA/test 根据不同的分析模块，给出对应不同的灵活分析参数，正常情况按照默认的运行没有问题。 具体参数（运行需要加载相应的代码，所以运行脚本时需要给脚本的绝对路径）： Rscript4.2 /mnt/ilustre/users/meng.luo/project/RNA/scRNA/hdWGCNA/hdWGCNA_SC_pipeline.R -r Merged_Seurat.rds -c all_cell_type.csv 详细参数： -Z SCTRANSFORM, --SCTransform=SCTRANSFORM SCTransform on single-cell data -r RDS, --rds=RDS Input rds file -g GENESELECT, --geneselect=GENESELECT ​ the gene selection approach variable( VariableFeatures) fraction (default) all or custom(gene_list) -f FRACTION, --fraction=FRACTION ​ fraction of cells that a gene needs to be expressed in order to be included -l LIST, --list=LIST ​ gene selection approach custom and give the custom gene list -c CELLFILE, --cellfile=CELLFILE ​ cell annotation file -e CELL, --cell=CELL ​ cell name -t SEURATCLUSTER, --seuratcluster=SEURATCLUSTER ​ use the default seurat clusters -u CLUSTER, --cluster=CLUSTER ​ seurat clusters number -o OUTDIR, --outdir=OUTDIR ​ output folder name -d REDUCTION, --reduction=REDUCTION ​ reduction A dimensionality reduction stored in the Seurat object. Default umap -k KVALUE, --kvalue=KVALUE ​ nearest-neighbors parameter -s MAX_SHARED, --max_shared=MAX_SHARED ​ maximum number of shared cells between two metacells -i MIN_CELLS, --min_cells=MIN_CELLS ​ min_cells the minimum number of cells in a particular grouping to construct metacells -n TARGET_METACELLS, --target_metacells=TARGET_METACELLS ​ target_metacells the maximum target number of metacells to construct -m MODE, --mode=MODE ​ determines how to make gene expression profiles for metacells from their constituent single cells. Options are \"average\" or \"sum\". -y METACELLS, --metacells=METACELLS ​ use metacell or not -v SOFT, --soft=SOFT ​ softpower VALUE -x MAXBLOCKSIZE, --maxBlockSize=MAXBLOCKSIZE ​ integer giving maximum block size for module detection -T CORTYPE, --corType=CORTYPE ​ pearson and bicor corresponding to Pearson and bidweight midcorrelation respectively -N NETWORKTYPE, --networkType=NETWORKTYPE ​ network type Allowed values are (unique abbreviations of) unsigned signed signed hybrid -M TOMTYPE, --TOMType=TOMTYPE ​ Allowed values are (unique abbreviations of) unsigned signed signed hybrid -U MINMODULESIZE, --minModuleSize=MINMODULESIZE ​ minimum module size for module detection -I MERGECUTHEIGHT, --mergeCutHeight=MERGECUTHEIGHT ​ dendrogram cut height for module merging -L DETECTCUTHEIGHT, --detectCutHeight=DETECTCUTHEIGHT ​ dendrogram cut height for module detection -V GBV, --gbv=GBV ​ chose the hME(default) or ME -S SCALE.MODEL.USE, --scale.model.use=SCALE.MODEL.USE ​ linear poisson or negbinom -F CORFNC, --corFnc=CORFNC ​ character string specifying the function to be used to calculate co-expression similarity Defaults to Pearson correlation -C COROPTIONS, --corOptions=COROPTIONS ​ Use use = p method = spearman to obtain Spearman correlation -E SCORES, --scores=SCORES ​ Compute hub gene signature scores -D METHOD, --method=METHOD ​ compute gene scores for a give number of genes for each module || using either the Seurat or UCell algorithm -W NETWORK, --network=NETWORK ​ Network Visualization OR NOT -w TRAIT, --trait=TRAIT ​ input trait.txt file -X TRT, --trt=TRT ​ Module Trait Correlation or not -G DME, --dme=DME ​ Differential module eigengene (DME) analysis -R CHARACTER, --group=CHARACTER ​ sample group information file name with header: sample\u003ctab\u003egroup -A CHARACTER, --compare=CHARACTER ​ group comparison information file name with header: control\u003ctab\u003ecase 二、分析模式 当前数据分析的选择（只有以下两种，无subcluster（这里也就是cell Type 的小","date":"2023-05-20","objectID":"/posts/schdwgcna-pipeline/:1:0","tags":["SC","ST","workflow","SCRNAseq"],"title":"The workflow of hdWGCNA analysis for scRNAseq data","uri":"/posts/schdwgcna-pipeline/"},{"categories":["scRNAseq","Pipeline","workflow"],"content":"Integrative analyses of single-cell transcriptome and regulome using sc/n-workflow","date":"2022-12-17","objectID":"/posts/scrnaseq-pipeline/","tags":["DEGs","UMI","workflow","scRNAseq"],"title":"Integrative analyses of single-cell transcriptome and regulome using sc/n-workflow","uri":"/posts/scrnaseq-pipeline/"},{"categories":["scRNAseq","Pipeline","workflow"],"content":"SingleCelldataVZ nRNA-seq Schematicsc/nRNA-seq Schematic \" nRNA-seq Schematic ","date":"2022-12-17","objectID":"/posts/scrnaseq-pipeline/:1:0","tags":["DEGs","UMI","workflow","scRNAseq"],"title":"Integrative analyses of single-cell transcriptome and regulome using sc/n-workflow","uri":"/posts/scrnaseq-pipeline/"},{"categories":["scRNAseq","Pipeline","workflow"],"content":"Summarizing single-cell RNA-sequencing data with unified molecular identifiers by scumi scumi As for –cell_barcode_whitelist, typically you don’t need to set this parameter as you don’t know which cell barcodes are from cells. Note, this parameter is different from the candidate cell barcodes for protocols such as 10x or inDrops, which are know and should be used as inputs. Let me know if it’s confusion. For the final results, you should use the depth_1_transcript, which is the UMI count matrix (PCR duplicates removed). The read_count matrix may or may not be useful for your down-stream analysis because this one is the read matrix (PCR duplicates included). As for poly-Ts, for standard sequencing people typically don’t sequence the poly-Ts, so you have to remove the polyT filter, otherwise you will get incorrect results. I may add some other filters, such as base-quality filter so it helps filter low-quality reads for the cases without polyT sequenced. ","date":"2022-12-17","objectID":"/posts/scrnaseq-pipeline/:1:1","tags":["DEGs","UMI","workflow","scRNAseq"],"title":"Integrative analyses of single-cell transcriptome and regulome using sc/n-workflow","uri":"/posts/scrnaseq-pipeline/"},{"categories":["scRNAseq","Pipeline","workflow"],"content":"Differential gene expression analysis in single-cell RNAseq Installation #SigEMD source all scripts in https://github.com/NabaviLab/SigEMD #DEsingle (https://github.com/miaozhun/DEsingle) if (!requireNamespace(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\") BiocManager::install(\"DEsingle\") scRNA pipeline $ perl ../scRNA.pipeline.pl Description: Version: 1.0.0 Contact: meng.luo@majorbio.com Framework by Meng Luo developed By cuili.li \u0026\u0026 Meng.Luo Usage: required: -fqlist \u003cfile\u003e Input file with sample name,the path of raw data and the path of R2 -ref \u003cdir\u003e the dir with reference Genome and other files -outdir \u003cdir\u003e output dir -dsh \u003cdir\u003e output work sh -queue \u003cstr\u003e DNA or RNA ,defult RNA -cellrefdir \u003cdir\u003e the dataset of singleR -sample \u003cstr\u003e \u003csingle\u003e sample or \u003cmultiple\u003e samples Optional: -cellref \u003cstr\u003e the Ref dateset of SingleR for celltype identification,default hpca -minRNA \u003cnum\u003e Default 200, the Min features filtered in Seurat -maxRNA \u003cnum\u003e Default 2500, the Max features filtered in Seurat -mito \u003cnum\u003e Default 5, the mito percent filtered in Seurat -marker \u003cstr\u003e Default \"wilcox\", the Parament for FindAllmarker in Seurat,optional \"wilcox\",\"bimod\",\"roc\",\"t\",\"negbinom\",\"poisson\",\"LR\",\"MAST\",\"DESeq2\" -logfc \u003cnum\u003e Default 0.25, limit testing to genes which show -mem \u003cnum\u003e Default 100, THE MEMORY -cpu \u003cnum\u003e Default 8, THE threads -species \u003cstr\u003e Default human ,currently only used to mouse and human data analysis -step \u003cnum\u003e pipeline control -stop \u003cnum\u003e stop step -protocols \u003cstr\u003e default cellranger, or scumi -polyT \u003cnone\u003e If there are poly-T sequences after the cell barcodes in read1. scumi will look at the poly-T sequences from base 19 to base 23 -RTbarcode \u003cnone\u003e If the set of cell barcode whitelists is known, scumi can only consider these cell barcodes by specifying --cell_barcode_whitelist -h Help DEG.single.R Pipeline $Rscript DEG.single.R Usage: DEG.single.R [-[-count|c] \u003ccharacter\u003e] [-[-rpkm|r] [\u003ccharacter\u003e]] [-[-group|g] \u003ccharacter\u003e] [-[-perm|p] [\u003ccharacter\u003e]] [-[-imput|i] [\u003ccharacter\u003e]] [-[-outdir|o] \u003ccharacter\u003e] [-[-help|h]] Contact: meng.luo@majorbio.com Usage example: Rscript DEG.single.R --count filename --rpkm filename --group filename Usage: --counts counts file name --rpkm rpkm file name --group group info --perm permutation test for SigEMD method,default is 100 --imput imputatiom expression data for SigEMD method or not,default is not --outdir result director --help usage Results VZ \r\rReferences T. Wang and S. Nabavi, “Differential gene expression analysis in single-cell RNA sequencing data,” 2017 IEEE International Conference on Bioinformatics and Biomedicine (BIBM), Kansas City, MO, 2017, pp. 202-207. Zhun Miao, Ke Deng, Xiaowo Wang, Xuegong Zhang, DEsingle for detecting three types of differential expression in single-cell RNA-seq data, Bioinformatics, Volume 34, Issue 18, 15 September 2018, Pages 3223–3224, https://doi.org/10.1093/bioinformatics/bty332 PHATE (Potential of Heat-diffusion for Affinity-based Transition Embedding) to analyze and DataVZ Installation #phateR (http://htmlpreview.github.io/?https://github.com/KrishnaswamyLab/phateR/blob/master/inst/examples/bonemarrow_tutorial.html) if (!require(viridis)) install.packages(\"viridis\") if (!require(ggplot2)) install.packages(\"ggplot2\") if (!require(readr)) install.packages(\"readr\") if (!require(Rmagic)) install.packages(\"Rmagic\") if (!require(ggsci)) install.packages(\"ggsci\") #phate(https://nbviewer.jupyter.org/github/KrishnaswamyLab/PHATE/blob/master/Python/tutorial/EmbryoidBody.ipynb) $pip install --user --upgrade phate scprep phateR.VZ.R Pipeline $Rscript phateR.VZ.R Usage: phateR.VZ.R [-[-count|c] \u003ccharacter\u003e] [-[-rpkm|r] [\u003ccharacter\u003e]] [-[-group|g] \u003ccharacter\u003e] [-[-dim|d] [\u003ccharacter\u003e]] [-[-outdir|o] \u003ccharacter\u003e] [-[-help|h]] Contact: meng.luo@majorbio.com Usage example: Rscript phateR.VZ.R --count filename --group filename Usage: --count count file name --rpkm rpkm file name --group group info --dim the dimension for phate results, defa","date":"2022-12-17","objectID":"/posts/scrnaseq-pipeline/:1:2","tags":["DEGs","UMI","workflow","scRNAseq"],"title":"Integrative analyses of single-cell transcriptome and regulome using sc/n-workflow","uri":"/posts/scrnaseq-pipeline/"},{"categories":["scRNAseq","tools"],"content":"根据单细胞表达量进行基因差异分析","date":"2022-12-14","objectID":"/posts/single-cell-differential-expression/","tags":["DEGs","RNAseq","表达量","SCDE"],"title":"Bayesian approach to single-cell differential expression analysis","uri":"/posts/single-cell-differential-expression/"},{"categories":["scRNAseq","tools"],"content":"SCDE SCDE官方帮助文档 ","date":"2022-12-14","objectID":"/posts/single-cell-differential-expression/:0:0","tags":["DEGs","RNAseq","表达量","SCDE"],"title":"Bayesian approach to single-cell differential expression analysis","uri":"/posts/single-cell-differential-expression/"},{"categories":["scRNAseq","tools"],"content":"一. 数据准备 单细胞表达矩阵:行为基因，列为细胞 分组文件（存在批次时，可添加批次信息进行批次处理） ","date":"2022-12-14","objectID":"/posts/single-cell-differential-expression/:1:0","tags":["DEGs","RNAseq","表达量","SCDE"],"title":"Bayesian approach to single-cell differential expression analysis","uri":"/posts/single-cell-differential-expression/"},{"categories":["scRNAseq","tools"],"content":"二. Pipeline 脚本位置： /mnt/ilustre/centos7users/xiaolong.he/develop/scRNA/scripts/SCDE.R 用法示例： Rscript SCDE.R -c matrix.xls -g group.xls -o test ","date":"2022-12-14","objectID":"/posts/single-cell-differential-expression/:2:0","tags":["DEGs","RNAseq","表达量","SCDE"],"title":"Bayesian approach to single-cell differential expression analysis","uri":"/posts/single-cell-differential-expression/"},{"categories":["scRNAseq","tools"],"content":"三. 代码 #!/usr/bin/env Rscript suppressMessages(library(\"getopt\")) options(bitmapType='cairo') spec = matrix(c( 'counts','c',1,'character', 'group','g',1,'character', 'batch','b',2,'character', 'pvalue','p',2,'character', 'flodchange','f',2,'character', 'out','o',1,'character', 'help','h',0,'logical' ), byrow=TRUE, ncol=4); opt = getopt(spec); print_usage \u003c- function(spec=NULL){ cat(getopt(spec, usage=TRUE)); cat(\"Usage example: \\n\"); cat(\"Usage example: Rscript indel_len.r --i --o Usage: --counts must matrix of counts --group must group file --out must prefix out file --batch selectable Y/N, default N --flodchange selectable default 1 --pvalue selectable default 0.05 --help usage\\n\" ); q(status=1); } if ( !is.null(opt$help)) {print_usage(spec)} if ( is.null(opt$counts)){print_usage(spec)} if ( is.null(opt$group)){print_usage(spec)} if ( is.null(opt$out)){print_usage(spec)} if ( is.null(opt$pvalue)){opt$pvalue= 0.05} if ( is.null(opt$flodchange)){opt$flodchange= 1} if ( is.null(opt$batch)){opt$batch= 'N'} .libPaths(\"/mnt/ilustre/centos7users/xiaolong.he/R/x86_64-pc-linux-gnu-library/3.5\") suppressMessages(library(\"scde\")) dat \u003c- read.table(opt$counts,sep='\\t',header=T,row.names=1,stringsAsFactor=F) group \u003c- read.table(opt$group,sep='\\t',header=T,row.names=1,stringsAsFactor=F) # group \u003c- read.table(opt$group,sep=',',header=T,row.names=1,stringsAsFactor=F) sg \u003c- factor(group[,1]) # error model o.ifm \u003c- scde.error.models(counts = dat, groups = sg, n.cores = 1, threshold.segmentation = TRUE, save.crossfit.plots = FALSE, save.model.plots = FALSE, verbose = 1) valid.cells \u003c- o.ifm$corr.a \u003e 0 o.ifm \u003c- o.ifm[valid.cells, ] o.prior \u003c- scde.expression.prior(models = o.ifm, counts = dat, length.out = 400, show.plot = FALSE) # save.image('scde1.RData') if(opt$batch == 'N'){ ediff \u003c- scde.expression.difference(o.ifm, dat, o.prior, groups = sg, n.randomizations = 100, n.cores = 1, verbose = 1) }else if(opt$batch == 'Y'){ batch \u003c- as.factor(group[,2]) ediff.batch \u003c- scde.expression.difference(o.ifm, dat, o.prior, groups = sg, batch = batch, n.randomizations = 100, n.cores = 1, return.posteriors = TRUE, verbose = 1) ediff \u003c- ediff.batch$batch.adjusted } ediff$Z \u003c- pnorm(ediff$Z,lower.tail=F) ediff[which(abs(ediff$mle) \u003c opt$flodchange | ediff$Z \u003e opt$pvalue),'regulate'] \u003c- \"NoSignif\" ediff[which(ediff$mle \u003c= -opt$flodchange \u0026 ediff$Z \u003c= opt$pvalue), 'regulate'] \u003c- \"down\" ediff[which(ediff$mle \u003e= opt$flodchange \u0026 ediff$Z \u003c= opt$pvalue),'regulate'] \u003c- \"up\" write.table(ediff,paste(opt$out,'.diff.xls',sep=''),col.names=T,row.names=T,quote=F) save.image('scde.RData') proc.time() ","date":"2022-12-14","objectID":"/posts/single-cell-differential-expression/:3:0","tags":["DEGs","RNAseq","表达量","SCDE"],"title":"Bayesian approach to single-cell differential expression analysis","uri":"/posts/single-cell-differential-expression/"},{"categories":["scRNAseq","tools"],"content":"结果说明 ","date":"2022-12-14","objectID":"/posts/single-cell-differential-expression/:4:0","tags":["DEGs","RNAseq","表达量","SCDE"],"title":"Bayesian approach to single-cell differential expression analysis","uri":"/posts/single-cell-differential-expression/"},{"categories":["scRNAseq","tools"],"content":"注意 scde依赖的flexmix包安装版本为2.3-13，新版本的flexmix会导致运行报错： 官方说明 参考文献 Kharchenko, P., Silberstein, L. \u0026 Scadden, D. Bayesian approach to single-cell differential expression analysis. Nat Methods 11, 740–742 (2014). ","date":"2022-12-14","objectID":"/posts/single-cell-differential-expression/:5:0","tags":["DEGs","RNAseq","表达量","SCDE"],"title":"Bayesian approach to single-cell differential expression analysis","uri":"/posts/single-cell-differential-expression/"},{"categories":["tools"],"content":"不同scRNAseq批次效应矫正方法","date":"2021-12-14","objectID":"/posts/scrnaseq-batch-correction/","tags":["批次效应","scRNAseq","RNAseq","单细胞"],"title":"不同scRNAseq批次效应矫正方法计算比较","uri":"/posts/scrnaseq-batch-correction/"},{"categories":["tools"],"content":"Batch methds 所用数据: /mnt/ilustre/centos7users/xiaolong.he/project/scRNA/new_pipe/04.Step4.combain/Merged.Seurat.rds ","date":"2021-12-14","objectID":"/posts/scrnaseq-batch-correction/:0:0","tags":["批次效应","scRNAseq","RNAseq","单细胞"],"title":"不同scRNAseq批次效应矫正方法计算比较","uri":"/posts/scrnaseq-batch-correction/"},{"categories":["tools"],"content":"limma #!/usr/bin/env Rscript3.6.1 suppressMessages(library(\"getopt\")) options(bitmapType='cairo') spec = matrix(c( 'rds','r',1,'character', 'outdir','o',1,'character', 'help','h',0,'logical' ), byrow=TRUE, ncol=4); opt = getopt(spec); print_usage \u003c- function(spec=NULL){ cat(getopt(spec, usage=TRUE)); cat(\"Usage example: \\n\"); cat(\"Usage example: Rscript limma.r --i --o Usage: --rds input file rds --outdir outdir --help usage\\n\" ); q(status=1); } if ( !is.null(opt$help)) {print_usage(spec)} if ( is.null(opt$rds)){print_usage(spec)} if ( is.null(opt$outdir)){print_usage(spec)} suppressMessages(library(\"Seurat\")) scRNA \u003c- readRDS(opt$rds) count \u003c- as.matrix(scRNA@assays$RNA@counts) count \u003c- log(count+1) batchs \u003c- c(rep('1',7205),rep('2',9104)) lim_batch \u003c- limma::removeBatchEffect(count,batch=batchs) write.table(lim_batch,file=paste(opt$outdir,\"limma.txt\",sep=\"\"),col.names=T,row.names=T,quote=F) save.image(paste(opt$outdir,\"limma.RData\",sep=\"\")) proc.time() limma去批次后矩阵含有大量负值，针对大量负值无法进行差异表达基因计算。 可通过对负值赋值为0后计算。 参考文献：Ritchie ME, Phipson B, Wu D, Hu Y, Law CW, Shi W and Smyth GK (2015). limma powers differential expression analyses for RNA-sequencing and microarray studies. Nucleic Acids Research, 43, pp. doi: 10.1093/nar/gkv007 ","date":"2021-12-14","objectID":"/posts/scrnaseq-batch-correction/:1:0","tags":["批次效应","scRNAseq","RNAseq","单细胞"],"title":"不同scRNAseq批次效应矫正方法计算比较","uri":"/posts/scrnaseq-batch-correction/"},{"categories":["tools"],"content":"harmony #!/usr/bin/env Rscript3.6.1 suppressMessages(library(\"getopt\")) options(bitmapType='cairo') spec = matrix(c( 'rds','r',1,'character', 'outdir','o',1,'character', 'help','h',0,'logical' ), byrow=TRUE, ncol=4); opt = getopt(spec); print_usage \u003c- function(spec=NULL){ cat(getopt(spec, usage=TRUE)); cat(\"Usage example: \\n\"); cat(\"Usage example: Rscript harmony.r --i --o Usage: --rds input file rds --outdir outdir --help usage\\n\" ); q(status=1); } if ( !is.null(opt$help)) {print_usage(spec)} if ( is.null(opt$rds)){print_usage(spec)} if ( is.null(opt$outdir)){print_usage(spec)} suppressMessages(c(library(\"harmony\"),library(\"magrittr\"),library(\"Seurat\"),library(\"dplyr\"))) scRNA \u003c- readRDS(opt$rds) # Normalize/find features scRNA \u003c- NormalizeData(scRNA) scRNA \u003c- FindVariableFeatures(scRNA, selection.method = \"vst\", nfeatures = 2000) scRNA \u003c- ScaleData(scRNA,vars.to.regress=c(\"nUMI\", \"percent.mito\",\"percent.ribo\",\"sample\")) scRNA \u003c- RunPCA(scRNA, features = VariableFeatures(object = scRNA),verbose = F) # batch scRNA \u003c- scRNA %\u003e% RunHarmony(\"orig.ident\", plot_convergence = TRUE) paste(opt$outdir,\"harmony.RData\",sep=\"\") 参考文献：Korsunsky I, Millard N, Fan J, et al. Fast, sensitive and accurate integration of single-cell data with Harmony. Nature methods, 2019: 1-8. ","date":"2021-12-14","objectID":"/posts/scrnaseq-batch-correction/:2:0","tags":["批次效应","scRNAseq","RNAseq","单细胞"],"title":"不同scRNAseq批次效应矫正方法计算比较","uri":"/posts/scrnaseq-batch-correction/"},{"categories":["tools"],"content":"LIGER #!/usr/bin/env Rscript3.6.1 suppressMessages(library(\"getopt\")) options(bitmapType='cairo') spec = matrix(c( 'rds','r',1,'character', 'outdir','o',1,'character', 'help','h',0,'logical' ), byrow=TRUE, ncol=4); opt = getopt(spec); print_usage \u003c- function(spec=NULL){ cat(getopt(spec, usage=TRUE)); cat(\"Usage example: \\n\"); cat(\"Usage example: Rscript liger.r --i --o Usage: --rds input file rds --outdir outdir --help usage\\n\" ); q(status=1); } if ( !is.null(opt$help)) {print_usage(spec)} if ( is.null(opt$rds)){print_usage(spec)} if ( is.null(opt$outdir)){print_usage(spec)} suppressMessages(c(library(\"liger\"),library(\"Seurat\"))) scRNA \u003c- readRDS(opt$rds) x2 \u003c- scRNA@assays$RNA@counts[,1:7205] x4 \u003c- scRNA@assays$RNA@counts[,7206:16309] ifnb_liger \u003c- createLiger(list(x2 = x2, x4 = x4)) ifnb_liger \u003c- normalize(ifnb_liger) ifnb_liger \u003c- selectGenes(ifnb_liger) ifnb_liger \u003c- scaleNotCenter(ifnb_liger) ifnb_liger \u003c- optimizeALS(ifnb_liger, k = 20) ifnb_liger \u003c- quantile_norm(ifnb_liger) save.image(paste(opt$outdir,\"LIGER_result.RData\",sep=\"\")) proc.time() 使用liger去批次后所得矩阵，计算差异表达基因。由于liger去批次后数据矩阵结果0值过多，会导致计算差异表达时数据被删除的问题。 参考文献：Welch J, Kozareva V, Ferreira A, et al. Integrative inference of brain cell similarities and differences from single-cell genomics[J]. bioRxiv, 2018: 459891. ","date":"2021-12-14","objectID":"/posts/scrnaseq-batch-correction/:3:0","tags":["批次效应","scRNAseq","RNAseq","单细胞"],"title":"不同scRNAseq批次效应矫正方法计算比较","uri":"/posts/scrnaseq-batch-correction/"},{"categories":["tools"],"content":"MNN Correct #!/usr/bin/env Rscript3.6.1 suppressMessages(library(\"getopt\")) options(bitmapType='cairo') spec = matrix(c( 'rds','r',1,'character', 'outdir','o',1,'character', 'help','h',0,'logical' ), byrow=TRUE, ncol=4); opt = getopt(spec); print_usage \u003c- function(spec=NULL){ cat(getopt(spec, usage=TRUE)); cat(\"Usage example: \\n\"); cat(\"Usage example: Rscript mnncorrect.r --i --o Usage: --rds input file rds --outdir outdir --help usage\\n\" ); q(status=1); } if ( !is.null(opt$help)) {print_usage(spec)} if ( is.null(opt$rds)){print_usage(spec)} if ( is.null(opt$outdir)){print_usage(spec)} suppressMessages(c(library(\"Seurat\"),library(\"batchelor\"))) scRNA \u003c- readRDS(opt$rds) test1 \u003c- scRNA@assays$RNA@counts[,1:7205] test2 \u003c- scRNA@assays$RNA@counts[,7206:16309] test1 \u003c- as.matrix(test1) test2 \u003c- as.matrix(test2) out \u003c- mnnCorrect(test1,test2) save.image(paste(opt$outdir,\"mnnCorrect.RData\",sep=\"\")) proc.time() 参考文献：Haghverdi L, Lun A T L, Morgan M D, et al. Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors[J]. Nature biotechnology, 2018, 36(5): 421-427. ","date":"2021-12-14","objectID":"/posts/scrnaseq-batch-correction/:4:0","tags":["批次效应","scRNAseq","RNAseq","单细胞"],"title":"不同scRNAseq批次效应矫正方法计算比较","uri":"/posts/scrnaseq-batch-correction/"},{"categories":["tools"],"content":"fastMNN #!/usr/bin/env Rscript3.6.1 suppressMessages(library(\"getopt\")) options(bitmapType='cairo') spec = matrix(c( 'rds','r',1,'character', 'outdir','o',1,'character', 'help','h',0,'logical' ), byrow=TRUE, ncol=4); opt = getopt(spec); print_usage \u003c- function(spec=NULL){ cat(getopt(spec, usage=TRUE)); cat(\"Usage example: \\n\"); cat(\"Usage example: Rscript fastmnn.r --i --o Usage: --rds input file rds --outdir outdir --help usage\\n\" ); q(status=1); } if ( !is.null(opt$help)) {print_usage(spec)} if ( is.null(opt$rds)){print_usage(spec)} if ( is.null(opt$outdir)){print_usage(spec)} suppressMessages(c(library(\"Seurat\"),library(\"batchelor\"))) scRNA \u003c- readRDS(opt$rds) test1 \u003c- scRNA@assays$RNA@counts[,1:7205] test2 \u003c- scRNA@assays$RNA@counts[,7206:16309] test1 \u003c- as.matrix(test1) test2 \u003c- as.matrix(test2) out \u003c- fastMNN(test1,test2) save.image(paste(opt$outdir,\"mnnCorrect.RData\",sep=\"\")) proc.time() 参考文献 Haghverdi L, Lun A T L, Morgan M D, et al. Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors. Nature biotechnology, 2018, 36(5): 421-427. Tran, H.T.N., Ang, K.S., Chevrier, M. et al. A benchmark of batch-effect correction methods for single-cell RNA sequencing data. Genome Biol 21, 12 (2020). ","date":"2021-12-14","objectID":"/posts/scrnaseq-batch-correction/:5:0","tags":["批次效应","scRNAseq","RNAseq","单细胞"],"title":"不同scRNAseq批次效应矫正方法计算比较","uri":"/posts/scrnaseq-batch-correction/"},{"categories":["Nanopore","Pipeline","workflow"],"content":"Introduction nfcore/ontworkflow is a bioinformatics analysis pipeline for Nanopore DNA/RNA sequencing data that can be used to perform basecalling, demultiplexing, QC, mapping and downstream analysis. The pipeline is built using Nextflow, a workflow tool to run tasks across multiple compute infrastructures in a very portable manner. It uses Docker/Singularity containers making installation trivial and results highly reproducible. The Nextflow DSL2 implementation of this pipeline uses one container per process which makes it much easier to maintain and update software dependencies. Where possible, these processes have been submitted to and installed from nf-core/modules in order to make them available to all nf-core pipelines, and to everyone within the Nextflow community! On release, automated continuous integration tests run the pipeline on a full-sized dataset on the AWS cloud infrastructure. This ensures that the pipeline runs on AWS, has sensible resource allocation defaults set to run on real-world datasets, and permits the persistent storage of results to benchmark between pipeline releases and other analysis sources. The results obtained from the full-sized test can be viewed on the nf-core website. ","date":"2021-12-12","objectID":"/posts/ont-workflow/:1:0","tags":["DNA","workflow","RNA"],"title":"Nanopore demultiplexing, QC, mapping and downstream analysi pipeline","uri":"/posts/ont-workflow/"},{"categories":["Nanopore","Pipeline","workflow"],"content":"Pipeline summary Read QC (FastQC) Present QC for raw reads (MultiQC) On release, automated continuous integration tests run the pipeline on a full-sized dataset obtained from the Singapore Nanopore Expression Consortium on the AWS cloud infrastructure. This ensures that the pipeline runs on AWS, has sensible resource allocation defaults set to run on real-world datasets, and permits the persistent storage of results to benchmark between pipeline releases and other analysis sources. The results obtained from the full-sized test can be viewed on the nf-core website. ","date":"2021-12-12","objectID":"/posts/ont-workflow/:2:0","tags":["DNA","workflow","RNA"],"title":"Nanopore demultiplexing, QC, mapping and downstream analysi pipeline","uri":"/posts/ont-workflow/"},{"categories":["Nanopore","Pipeline","workflow"],"content":"Pipeline Summary Basecalling and/or demultiplexing (Guppy or qcat; optional) Sequencing QC (pycoQC, NanoPlot) Raw read DNA cleaning (NanoLyse; optional) Raw read QC (NanoPlot, FastQC) Alignment (GraphMap2 or minimap2) Both aligners are capable of performing unspliced and spliced alignment. Sensible defaults will be applied automatically based on a combination of the input data and user-specified parameters Each sample can be mapped to its own reference genome if multiplexed in this way Convert SAM to co-ordinate sorted BAM and obtain mapping metrics (SAMtools) Create bigWig (BEDTools, bedGraphToBigWig) and bigBed (BEDTools, bedToBigBed) coverage tracks for visualisation RNA-specific downstream analysis: Transcript reconstruction and quantification (bambu or StringTie2) bambu performs both transcript reconstruction and quantification. When StringTie2 is chosen, each sample can be processed individually and combined. After which, featureCounts will be used for both gene and transcript quantification. Differential expression analysis (DESeq2 or DEXSeq) Present QC for raw read and alignment results (MultiQC) ","date":"2021-12-12","objectID":"/posts/ont-workflow/:3:0","tags":["DNA","workflow","RNA"],"title":"Nanopore demultiplexing, QC, mapping and downstream analysi pipeline","uri":"/posts/ont-workflow/"},{"categories":["Nanopore","Pipeline","workflow"],"content":"Quick Start Install Nextflow (\u003e=21.04.0) Install any of Docker, Singularity, Podman, Shifter or Charliecloud for full pipeline reproducibility (please only use Conda as a last resort; see docs) Download the pipeline and test it on a minimal dataset with a single command: nextflow run nf-core/nanoseq -profile test,\u003cdocker/singularity/podman/shifter/charliecloud/conda/institute\u003e Please check nf-core/configs to see if a custom config file to run nf-core pipelines already exists for your Institute. If so, you can simply use -profile \u003cinstitute\u003e in your command. This will enable either docker or singularity and set the appropriate execution settings for your local compute environment. If you are using singularity then the pipeline will auto-detect this and attempt to download the Singularity images directly as opposed to performing a conversion from Docker images. If you are persistently observing issues downloading Singularity images directly due to timeout or network issues then please use the --singularity_pull_docker_container parameter to pull and convert the Docker image instead. Alternatively, it is highly recommended to use the nf-core download command to pre-download all of the required containers before running the pipeline and to set the NXF_SINGULARITY_CACHEDIR or singularity.cacheDir Nextflow options to be able to store and re-use the images from a central location for future pipeline runs. If you are using conda, it is highly recommended to use the NXF_CONDA_CACHEDIR or conda.cacheDir settings to store the environments in a central location for future pipeline runs. Start running your own analysis! ","date":"2021-12-12","objectID":"/posts/ont-workflow/:4:0","tags":["DNA","workflow","RNA"],"title":"Nanopore demultiplexing, QC, mapping and downstream analysi pipeline","uri":"/posts/ont-workflow/"},{"categories":["Nanopore","Pipeline","workflow"],"content":"Documentation The nf-core/nanoseq pipeline comes with documentation about the pipeline usage, parameters and output. nextflow run nf-core/nanoseq \\ --input samplesheet.csv \\ --protocol DNA \\ --input_path ./fast5/ \\ --flowcell FLO-MIN106 \\ --kit SQK-LSK109 \\ --barcode_kit SQK-PBK004 \\ -profile \u003cdocker/singularity/podman/institute\u003e See usage docs for all of the available options when running the pipeline. An example input samplesheet for performing both basecalling and demultiplexing can be found here. ","date":"2021-12-12","objectID":"/posts/ont-workflow/:5:0","tags":["DNA","workflow","RNA"],"title":"Nanopore demultiplexing, QC, mapping and downstream analysi pipeline","uri":"/posts/ont-workflow/"},{"categories":["Nanopore","Pipeline","workflow"],"content":"Credits nf-core/nanoseq was originally written by Chelsea Sawyer and Harshil Patel from The Bioinformatics \u0026 Biostatistics Group for use at The Francis Crick Institute, London. Other primary contributors include Laura Wratten, Ying Chen, Yuk Kei Wan and Jonathan Goeke from the Genome Institute of Singapore, Johannes Alneberg and Franziska Bonath from SciLifeLab, Sweden. Many thanks to others who have helped out along the way too, including (but not limited to): @crickbabs, @AnnaSyme. ","date":"2021-12-12","objectID":"/posts/ont-workflow/:6:0","tags":["DNA","workflow","RNA"],"title":"Nanopore demultiplexing, QC, mapping and downstream analysi pipeline","uri":"/posts/ont-workflow/"},{"categories":["Nanopore","Pipeline","workflow"],"content":"Contributions and Support If you would like to contribute to this pipeline, please see the contributing guidelines. For further information or help, don’t hesitate to get in touch on Slack (you can join with this invite). ","date":"2021-12-12","objectID":"/posts/ont-workflow/:7:0","tags":["DNA","workflow","RNA"],"title":"Nanopore demultiplexing, QC, mapping and downstream analysi pipeline","uri":"/posts/ont-workflow/"},{"categories":["Nanopore","Pipeline","workflow"],"content":"Citations An extensive list of references for the tools used by the pipeline can be found in the CITATIONS.md file. You can cite the nf-core publication as follows: The nf-core framework for community-curated bioinformatics pipelines. Philip Ewels, Alexander Peltzer, Sven Fillinger, Harshil Patel, Johannes Alneberg, Andreas Wilm, Maxime Ulysse Garcia, Paolo Di Tommaso \u0026 Sven Nahnsen. Nat Biotechnol. 2020 Feb 13. doi: 10.1038/s41587-020-0439-x. ","date":"2021-12-12","objectID":"/posts/ont-workflow/:8:0","tags":["DNA","workflow","RNA"],"title":"Nanopore demultiplexing, QC, mapping and downstream analysi pipeline","uri":"/posts/ont-workflow/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"nf-core/circrnaworkflow: Usage It is recommended that first time users run nf-core/circrnaworkflow with the minimal test dataset either locally or on a HPC, referring to the output documentation before running a full analysis. nextflow run nf-core/circrnaworkflow -profile test Run the test dataset on a HPC: nextflow run nf-core/circrnaworkflow -profile test,\u003cdocker/singularity/podman/institute\u003e ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:0:0","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"Running the pipeline A typical command for running the pipeline is as follows: nextflow run nf-core/circrnaworkflow \\ -profile \u003cdocker/singularity/podman/institute\u003e \\ --genome 'GRCh37' \\ --input 'samples.csv' \\ --input_type 'fastq' By default, nf-core/circrnaworkflow runs the circrnaworkflow discovery analysis module using CIRCexplorer2. The above command will perform circrnaworkflow quantification using these tools on ENSEMBL GRCh37 reference annotation files as defined in the iGenomes config. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:1:0","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"Updating the pipeline To make sure that you’re running the latest version of the pipeline, make sure that you regularly update the cached version of the pipeline: nextflow pull nf-core/circrnaworkflow When you run the above command, Nextflow automatically pulls the pipeline code from GitHub and stores it as a cached version. When running the pipeline after this, it will always use the cached version if available - even if the pipeline has been updated since. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:1:1","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"Reproducibility It’s a good idea to specify a pipeline version when running the pipeline on your data. This ensures that a specific version of the pipeline code and software are used when you run your pipeline. If you keep using the same tag, you’ll be running the same version of the pipeline, even if there have been changes to the code since. First, go to the nf-core/circrnaworkflow releases page and find the latest version number - numeric only (eg. 1.3.1). Then specify this when running the pipeline with -r (one hyphen) - eg. -r 1.3.1. This version number will be logged in reports when you run the pipeline, so that you’ll know what you used when you look back in the future. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:1:2","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"Input specifications Input data can be passed to nf-core/circrnaworkflow in two possible ways using the --input parameter. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:2:0","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"--input \"\u003cpath\u003e\" The simplest way to pass input data to nf-core/circrnaworkflow is by providing the path to the input data with a suitable wildcard glob pattern: fastq --input \"/data/*_r{1,2}.fastq.gz\" bam --input \"/data/*.bam\" Beware that providing a path to input data will result in samples being named according to the common tuple key based on the glob pattern supplied. Take this into consideration when designing your phenotype file for differential expression analysis. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:2:1","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"--input samples.csv Alternatively, the user may wish to provide a CSV file containing the absolute paths to input fastq/bam files. The headers of the CSV file must be: Sample_ID,Read1,Read2,Bam. This approach is recommended for most real life situations, where in-house sequencing facilities file naming convention requires the user to manually match file names to metadata. The below input files use TCGA identifiers as proof of concept. Valid examples for fastq/bam input data in a CSV file is given below: Sample_ID Read1 Read2 Bam TCGA-EJ-7783-11A /data/f4c1b2b1-ba1f-4355-a1ac-3e952cf351a5_gdc_realn_rehead_R1.fastq.gz /data/f4c1b2b1-ba1f-4355-a1ac-3e952cf351a5_gdc_realn_rehead_R2.fastq.gz NA TCGA-G9-6365-11A /data/8a36555b-9e27-40ee-a8df-4b15d6580a02_gdc_realn_rehead_R1.fastq.gz /data/8a36555b-9e27-40ee-a8df-4b15d6580a02_gdc_realn_rehead_R2.fastq.gz NA TCGA-EJ-7782-11A /data/8b3d4a3d-2bfa-48f8-b31f-901f49a5bf6b_gdc_realn_rehead_R1.fastq.gz /data/8b3d4a3d-2bfa-48f8-b31f-901f49a5bf6b_gdc_realn_rehead_R2.fastq.gz NA TCGA-CH-5772-01A /data/b6546f66-3c13-4390-9643-d1fb3d660a2f_gdc_realn_rehead_R1.fastq.gz /data/b6546f66-3c13-4390-9643-d1fb3d660a2f_gdc_realn_rehead_R2.fastq.gz NA TCGA-EJ-5518-01A /data/afbbc370-5970-43d3-b9f8-f40f8e649bb6_gdc_realn_rehead_R1.fastq.gz /data/afbbc370-5970-43d3-b9f8-f40f8e649bb6_gdc_realn_rehead_R2.fastq.gz NA TCGA-KK-A8I4-01A /data/81254692-ee1e-4985-bd0a-4929eed4c620_gdc_realn_rehead_R1.fastq.gz /data/81254692-ee1e-4985-bd0a-4929eed4c620_gdc_realn_rehead_R2.fastq.gz NA Sample_ID Read1 Read2 Bam TCGA-EJ-7783-11A NA NA /data/f4c1b2b1-ba1f-4355-a1ac-3e952cf351a5_gdc_realn_rehead.bam TCGA-G9-6365-11A NA NA /data/8a36555b-9e27-40ee-a8df-4b15d6580a02_gdc_realn_rehead.bam TCGA-EJ-7782-11A NA NA /data/8b3d4a3d-2bfa-48f8-b31f-901f49a5bf6b_gdc_realn_rehead.bam TCGA-CH-5772-01A NA NA /data/b6546f66-3c13-4390-9643-d1fb3d660a2f_gdc_realn_rehead.bam TCGA-EJ-5518-01A NA NA /data/afbbc370-5970-43d3-b9f8-f40f8e649bb6_gdc_realn_rehead.bam TCGA-KK-A8I4-01A NA NA /data/81254692-ee1e-4985-bd0a-4929eed4c620_gdc_realn_rehead.bam Do not leave any cell empty in the CSV file. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:2:2","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"--phenotype When running the differential expression analysis module, an input phenotype.csv file is required to specify levels for DESeq2. At a minimum, the user must supply one column of levels for DESeq2 which must be called condition. This should be the primary contrast of interest in your experiment (e.g case vs. control). If additional columns are supplied to the phenotype file, they will be controlled for in the linear mixed model. A brief proof of concept is given below in R notation: colnames(phenotype) [1] 'Sample_ID' 'condition' print(dds$design) [1] ' ~ condition' colnames(phenotype) [1] 'Sample_ID' 'condition' 'replicates' 'location' print(dds$design) [1] ' ~ location + replicates + condition' It is recommended to use an input CSV file in conjunction with your phenotype file as the Sample_ID column must match the first column of the phenotype.csv file. A valid example of a phenotype.csv file (matching the TCGA example input CSV file above) is given below: Sample_ID condition TCGA-EJ-7783-11A control TCGA-G9-6365-11A control TCGA-EJ-7782-11A control TCGA-CH-5772-01A tumor TCGA-EJ-5518-01A tumor TCGA-KK-A8I4-01A tumor ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:2:3","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"Analysis modules nf-core/circrnaworkflow provides 3 analysis modules to the user: circrnaworkflow quantification \u0026 annotation. miRNA target prediction. Differential circrnaworkflow expression analysis. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:3:0","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"circrnaworkflow discovery The core module of nf-core/circrnaworkflow, the user can utilise the most popular circrnaworkflow quantification tools to fully characterise the circrnaworkflow profile in samples. Currently, supported tools include CIRCexplorer2, circrnaworkflow finder, CIRIquant, DCC, find circ , MapSplice \u0026 Segemehl however, the authors of nf-core/circrnaworkflow welcome contributions from authors of novel quantification tools to keep the workflow current. By default, nf-core/circrnaworkflow runs the circrnaworkflow discovery analysis module. nextflow run nf-core/circrnaworkflow \\ -profile \u003cdocker/singularity/podman/institute\u003e \\ --genome 'GRCh37' \\ --input 'samples.csv' \\ --input_type 'fastq' \\ --module 'circrnaworkflow_discovery' To view the outputs of the module, please see the output documentation. Please note that this module must be included for every run of the workflow Tool selection The user may use one, all or any combination of circrnaworkflow quantification tools listed above in the analysis. To select which tools to use for the analysis, specify the --tool parameter in the configuration profile or pass it via the command line when running the workflow: nextflow run nf-core/circrnaworkflow \\ -profile \u003cdocker/singularity/podman/institute\u003e \\ --genome 'GRCh37' \\ --input 'samples.csv' \\ --input_type 'fastq' \\ --module 'circrnaworkflow_discovery' \\ --tool 'ciriquant, dcc, find_circ' When providing multiple tools, separate each entry with a comma. circrnaworkflow filtering nf-core/circrnaworkflow offers robust filtering of each called circrnaworkflow to reduce the number of spurious calls within the dataset. BSJ reads The user can specify the minimum number of reads spanning the back-splice junction site required for a circrnaworkflow to be considered for further analysis. circrnaworkflows with counts below this value will be filtered to remove from the results. To apply this filtering method, specify the --bsj_reads parameter in the configuration profile or pass it via the command line when running the workflow: nextflow run nf-core/circrnaworkflow \\ -profile \u003cdocker/singularity/podman/institute\u003e \\ --genome 'GRCh37' \\ --input 'samples.csv' \\ --input_type 'fastq' \\ --phenotype 'phenotype.csv' \\ --module 'circrnaworkflow_discovery' \\ --tool 'ciriquant, dcc, find_circ' \\ --bsj_reads 2 Disable the filter by setting the value to 0. Multiple tool filtering When more than one tool has been provided using the --tool parameter, the user can specify the minimum number of tools circrnaworkflows must be called by using --tool_filter. Setting this parameter to 0 or 1 will result in the union being output, i.e no filtering is applied. Setting this parameter to 2 will output circrnaworkflows that have been called by at least 2 quantification tools and so on. The integer provided to the parameter must be less than or equal to the number of quantification tools provided to --tool. To apply this filtering method, specify the --tool_filter parameter in the configuration profile or pass it via the command line when running the workflow: nextflow run nf-core/circrnaworkflow \\ -profile \u003cdocker/singularity/podman/institute\u003e \\ --genome 'GRCh37' \\ --input 'samples.csv' \\ --input_type 'fastq' \\ --module 'circrnaworkflow_discovery' \\ --tool 'ciriquant, dcc, find_circ' \\ --bsj_reads 2 \\ --tool_filter 2 This filtering method is reflected in the circrnaworkflow count matrix. Per tool circrnaworkflow annotations are subject to back-splice read filtering only. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:3:1","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"miRNA prediction The second module of nf-core/circrnaworkflow, mirna_prediction analyses the mature spliced sequences of circrnaworkflows to test for the presence of miRNA response elements using both miRanda and TargetScan. Results from both tools are consolidated and filtering methods are applied to produce robust miRNA target predictions of circrnaworkflows in the dataset. To invoke the module, specify the --module parameter via the configuration profile or pass it via the command line when running the workflow: nextflow run nf-core/circrnaworkflow \\ -profile \u003cdocker/singularity/podman/institute\u003e \\ --genome 'GRCh37' \\ --input 'samples.csv' \\ --input_type 'fastq' \\ --module 'circrnaworkflow_discovery, mirna_prediction' To view the outputs of the module, please see the output documentation. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:3:2","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"Differential circrnaworkflow analysis The third and final module of nf-core/circrnaworkflow performs differential expression analysis of circrnaworkflows, returning DESeq2 result outputs, plots and diagnostic plots for the user. In order to run this module, it is essential that your phenotype.csv file is in the correct format - please refer to the input specifications. To invoke the module, specify the --module parameter via the configuration profile or pass it via the command line when running the workflow: nextflow run nf-core/circrnaworkflow \\ -profile \u003cdocker/singularity/podman/institute\u003e \\ --genome 'GRCh37' \\ --input 'samples.csv' \\ --input_type 'fastq' \\ --phenotype 'phenotype.csv' \\ --module 'circrnaworkflow_discovery, differential_expression' To view the outputs of the module, please see the output documentation. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:3:3","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"Core Nextflow arguments NB: These options are part of Nextflow and use a single hyphen (pipeline parameters use a double-hyphen). ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:4:0","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"-profile Use this parameter to choose a configuration profile. Profiles can give configuration presets for different compute environments. Several generic profiles are bundled with the pipeline which instruct the pipeline to use software packaged using different methods (Docker, Singularity, Podman, Shifter, Charliecloud, Conda) - see below. We highly recommend the use of Docker or Singularity containers for full pipeline reproducibility, however when this is not possible, Conda is also supported. The pipeline also dynamically loads configurations from https://github.com/nf-core/configs when it runs, making multiple config profiles for various institutional clusters available at run time. For more information and to see if your system is available in these configs please see the nf-core/configs documentation. Note that multiple profiles can be loaded, for example: -profile test,docker - the order of arguments is important! They are loaded in sequence, so later profiles can overwrite earlier profiles. If -profile is not specified, the pipeline will run locally and expect all software to be installed and available on the PATH. This is not recommended. docker A generic configuration profile to be used with Docker Pulls software from Docker Hub: nfcore/circrnaworkflow singularity A generic configuration profile to be used with Singularity Pulls software from Docker Hub: nfcore/circrnaworkflow podman A generic configuration profile to be used with Podman Pulls software from Docker Hub: nfcore/circrnaworkflow shifter A generic configuration profile to be used with Shifter Pulls software from Docker Hub: nfcore/circrnaworkflow charliecloud A generic configuration profile to be used with Charliecloud Pulls software from Docker Hub: nfcore/circrnaworkflow conda Please only use Conda as a last resort i.e. when it’s not possible to run the pipeline with Docker, Singularity, Podman, Shifter or Charliecloud. A generic configuration profile to be used with Conda Pulls most software from Bioconda test A profile with a complete configuration for automated testing Includes links to test data so needs no other parameters ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:4:1","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"-resume Specify this when restarting a pipeline. Nextflow will used cached results from any pipeline steps where the inputs are the same, continuing from where it got to previously. You can also supply a run name to resume a specific run: -resume [run-name]. Use the nextflow log command to show previous run names. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:4:2","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"-c Specify the path to a specific config file (this is a core Nextflow command). See the nf-core website documentation for more information. Custom resource requests Each step in the pipeline has a default set of requirements for number of CPUs, memory and time. For most of the steps in the pipeline, if the job exits with an error code of 143 (exceeded requested resources) it will automatically resubmit with higher requests (2 x original, then 3 x original). If it still fails after three times then the pipeline is stopped. Whilst these default requirements will hopefully work for most people with most data, you may find that you want to customise the compute resources that the pipeline requests. You can do this by creating a custom config file. For example, to give the workflow process star 32GB of memory, you could use the following config: process { withName: star { memory = 32.GB } } To find the exact name of a process you wish to modify the compute resources, check the live-status of a nextflow run displayed on your terminal or check the nextflow error for a line like so: Error executing process \u003e 'bwa'. In this case the name to specify in the custom config file is bwa. See the main Nextflow documentation for more information. If you are likely to be running nf-core pipelines regularly it may be a good idea to request that your custom config file is uploaded to the nf-core/configs git repository. Before you do this please can you test that the config file works with your pipeline of choice using the -c parameter (see definition above). You can then create a pull request to the nf-core/configs repository with the addition of your config file, associated documentation file (see examples in nf-core/configs/docs), and amending nfcore_custom.config to include your custom profile. If you have any questions or issues please send us a message on Slack on the #configs channel. ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:4:3","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["circrnaseq","Pipeline","workflow"],"content":"Running in the background Nextflow handles job submissions and supervises the running jobs. The Nextflow process must run until the pipeline is finished. The Nextflow -bg flag launches Nextflow in the background, detached from your terminal so that the workflow does not stop if you log out of your session. The logs are saved to a file. Alternatively, you can use screen / tmux or similar tool to create a detached session which you can log back into at a later time. Some HPC setups also allow you to run nextflow within a cluster job submitted your job scheduler (from where it submits more jobs). Nextflow memory requirements In some cases, the Nextflow Java virtual machines can start to request a large amount of memory. We recommend adding the following line to your environment to limit this (typically in ~/.bashrc or ~./bash_profile): NXF_OPTS='-Xms1g -Xmx4g' ","date":"2021-12-06","objectID":"/posts/circrna-pipeline/:4:4","tags":["DEGs","workflow","cricRNA"],"title":"circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data","uri":"/posts/circrna-pipeline/"},{"categories":["RNAseq","DataViz"],"content":"根据富集结果进行GO及KEGG可视化分析","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"富集和弦图 功能富集分析，是指借助各类数据库和分析工具进行统计分析。挖掘在数据库中与我们研究的生物学问题具有显著相关性的功能类别，**期望发现在生物学过程中起关键作用的生物通路,从而揭示和理解生物学过程的基本分子机制。**其中GO富集分析就是重要的一个内容。 R包GOplot基于ggplot2增强图形化展示。它利用任何通用富集分析的输出，并在不同细节层次上产生图像：从总览最富集的类别（条形图、气泡图），到在一套给定类别中展示不同类型分子信息的更详细视图（环形图、弦图、聚类图）。 参考文献： 1 . Walter, W., Sánchez-Cabo, F., \u0026 Ricote, M. (2015). GOplot: an R package for visually combining expression data with functional analysis: Fig. 1. Bioinformatics, 31(17), 2912–2914. doi:10.1093/bioinformatics/btv300 ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:0:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"导入包 library(GOplot) ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:1:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"参数传递 argv \u003c- arg_parser('') argv \u003c- add_argument(argv,\"--file1\", help=\"the enrichment list\") argv \u003c- add_argument(argv,\"--file2\", help=\"the genefc file\") argv \u003c- add_argument(argv,\"--type\", help=\"go or kegg\") argv \u003c- parse_args(argv) file1 \u003c- argv$file1 file2 \u003c- argv$file2 type \u003c- argv$type file1:导入云平台富集结果，例如：go_enrich_stat.xls 或者 kegg_enrich_stat.xls file2:导入差异分析结果中的“gene_name\"和\"log2fc\"两列，主要是画图需要用到log2fc值，如果没有该值则默认log2fc为0，file2可有可无 type:如果是go富集结果, type为go, 如果是kegg富集结果，type为kegg ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:2:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"R颜色导入 color \u003c- grDevices::colors()[grep(\"gr(a|e)y\", grDevices::colors(), invert = T)] ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:3:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"整理go和kegg信息 导入go或者kegg富集结果后，根据pajd和pvalue排序，然后选取必要的数据构建数据框 if (type == 'go'){ enrich_f \u003c- read.table(file1, sep = \"\\t\", header = T, check.names = F) ##导入数据 enrich_o \u003c- enrich_f[order(enrich_f$p_corrected, enrich_f$p_uncorrected), ] ##排序 enrich_r \u003c- data.frame(Category = enrich_o$go_type, ID = enrich_o$go_id, Term = enrich_o$discription, Genes = gsub(\";\", \", \", enrich_o$seq_list_name), adj_pval = enrich_o$p_uncorrected) ##构建数据框 } if (type == 'kegg'){ enrich_f \u003c- read.table(file1, sep = \"\\t\", header = T, comment.char = \"\") ##导入数据 enrich_o \u003c- enrich_f[order(enrich_f$Corrected.P.Value, enrich_f$P.Value), ] ##排序 enrich_r \u003c- data.frame(Category = enrich_o$typeI, ID = enrich_o$ID, Term = enrich_o$Term, Genes = gsub(\"\\\\|\", \", \", enrich_o$Genes_name), adj_pval = enrich_o$Corrected.P.Value) ##构建数据框 } ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:4:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"得到log2FC 如果有file2,gene和log2fc信息则从file2中获取，如果没有file2，gene信息从富集结果中提取，log2f默认为0 if (!is.na(file2)){ rt2 \u003c- read.table(file2, sep = \"\\t\", header = T, col.names = c(\"gene_name\",\"log2fc\")) genelist \u003c- data.frame(ID = rt2$gene_name, logFC = rt2$log2fc) row.names(genelist) \u003c- genelist[, 1] }else { genes \u003c- unique(unlist(strsplit(as.character(enrich_r$Genes), \", \"))) genelist \u003c- data.frame(ID = toupper(genes), logFC = 0 ) row.names(genelist) \u003c- genelist[, 1] } ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:5:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"得到最终绘制图片所需数据集 circ \u003c- circle_dat(enrich_r, genelist) termNum1 = 10 #限定GO数目（仅展示前10） termNum1=ifelse(nrow(enrich_r)\u003ctermNum1,nrow(enrich_r),termNum1) chord1 \u003c- chord_dat(circ, genelist, enrich_r$Term[1:termNum1]) termNum2 = 20 #限定GO数目（仅展示前20） termNum2=ifelse(nrow(enrich_r)\u003ctermNum2,nrow(enrich_r),termNum2) chord2 \u003c- chord_dat(circ, genelist, enrich_r$Term[1:termNum2]) 在后续画图中主要需要用到的两个数据集为circ 和 chord1 circ数据集是由GOplot包的circle_dat函数构建，circle_dat函数需要输入两个数据框，第一个是go富集相关数据，第二个是提取logfc值的数据框，其中的genes都采用了字母大写处理，函数参数主要部分如下： circle_dat function (terms, genes) colnames(terms) \u003c- tolower(colnames(terms)) terms$genes \u003c- toupper(terms$genes) genes$ID \u003c- toupper(genes$ID) tgenes \u003c- strsplit(as.vector(terms$genes), “, “) df \u003c- data.frame(category = rep(as.character(terms$category), count), ID = rep(as.character(terms$id), count), term = rep(as.character(terms$term), count), count = rep(count, count), genes = as.character(unlist(tgenes)), logFC = logFC, adj_pval = rep(terms$adj_pval, count), zscore = rep(zsc, count), stringsAsFactors = FALSE) circ数据框中，将所有的富集gene按行排序，具体格式如下： count：GO term包含的基因数 zscore: 每个GO term下上调(logFC\u003e0)基因数和下调基因数的差与注释到GO term基因数平方根的商，反映该功能所含蛋白的总体表达趋势，大于0为上调，小于0为下调，公式如下： chord1数据集是由GOplot包的chord_dat函数构建，chord_dat函数需要输入3个数据框，函数参数：function (data, genes, process) ，第一个数据框是circle_dat函数得到的circ数据框，第二个数据框是提取logfc的数据框，第三个数据框是筛选term的数据框，整理后的data具体的格式如下： 行名是genename,列名是筛选出来的term名称和logfc ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:6:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"GOChord画图画和弦图 p \u003c- GOChord(chord1, space = 0.001, #基因之间的间距 gene.order = 'logFC', #排序基因 gene.space = 0.25, #基因离圆圈距离 gene.size = 3, # border.size = 0.1, process.label = 7, #GO名称大小 lfc.col=c('firebrick3', 'white','royalblue3'),##上调下调颜色设置 # ribbon.col=brewer.pal(length(go$Term[1:termNum]), 'Set3'),#GO term 颜色设置 ) 左侧是基因（颜色代表上下调），右侧是不同GO term，连接的带表示某基因在某GO term中 ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:7:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"GOCluster画聚类圈图 chord \u003c- chord_dat(circ, genelist, enrich_r$Term[1:termNum1]) p \u003c- GOCluster(data=circ, process=as.character(enrich_r[1:termNum1,3]), #选择GO term metric='euclidean', #选择距离度量方法 clust='average', #选择聚类方法 clust.by = 'term', #指定是否应该对基因表达模式或功能类别进行聚类。term(default) or logFC term.width = 2, #GO term 宽度 # term.col= color[sample(1:length(color), length(color))][1:termNum1], #颜色设置 nlfc=FALSE, #是否包含多个logFC列 lfc.col=c('firebrick3', 'white','royalblue3') #颜色设置 ) 从内到外依次为：基因聚类，倍数变化，GO term ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:8:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"GOBubble画气泡图 GOBubble(circ, title=\"GOBubble plot\",##设置标题 labels = 3,##-log(adj p-value)\u003e5 ID = T,##TRUE显示符合标准的GO term ID，FALSE显示GO term name table.legend = TRUE, table.col = TRUE, ##右侧表格设置 bg.col = FALSE#背景颜色设置 ) GOBubble(circ, display = \"single\", labels = 3, table.legend = F) ##3个分类画一张图里 GOBubble(circ,title = 'Bubble plot', display = 'multiple', bg.col = T, labels = 3) ##3个分类分开画图 X轴是z-score，Y轴是adj p。3种颜色代表3大类（BP，CC，MF），一个气泡代表一个GO term，面积代表该GO term中的基因数 ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:9:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"GOHeat画热图 GOHeat(chord1, nlfc = 1, fill.col =c('red', 'yellow', 'green')) nlfc = 1：颜色对应logFC nlfc = 0：颜色对应每个基因注释了到了几个GO Term X轴是基因，Y轴是GO term，颜色表示基因的倍数变化（logFC） ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:10:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"GOVenn画韦恩图 term1 \u003c- as.character(enrich_r[1,3]) term2 \u003c- as.character(enrich_r[2,3]) term3 \u003c- as.character(enrich_r[3,3]) l1 \u003c- subset(circ, term == term1 , c(genes,logFC)) l2 \u003c- subset(circ, term == term2 , c(genes,logFC)) l3 \u003c- subset(circ, term == term3 , c(genes,logFC)) GOVenn(l1,l2,l3, label = c(term1, term2, term3)) 3个GO term相关基因的venn图。例如heart development和tissue morphogenesis共有4+13+1+4=22个基因，其中共同上调4+1=5个，共同下调13+4=17个 ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:11:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq","DataViz"],"content":"GOCircle画圈图图 GOCircle(circ, nsub = 10, label.size = 5, rad1 = 3, rad2 = 4, table.legend = F) 从外到内依次为：GO ID；基因上下调（上调红色，下调蓝色）；z-score ","date":"2021-12-03","objectID":"/posts/visually-combining-expression-data-with-functional-analysis/:12:0","tags":["GO","RNAseq","KEGG","可视化","Chordal Graph"],"title":"visually combining expression data with functional analysis","uri":"/posts/visually-combining-expression-data-with-functional-analysis/"},{"categories":["RNAseq"],"content":"RNAseq降维分析方法比较","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"不同的降维分析方法 ​ 数据降维就是通过特征选择或者特征变换操作将数据从原始的D维空间投影到新的K维空间，直白的说是把数据的维度降下来，用一个相对低维的向量来表示原始高维度的特征。从理解上讲降维要做的就是学习数据新的表示，这种数据新的表示在形式上更简洁，而且要求能够尽可能多地保存数据原有的信息（或者让其信息变得更好，更清晰更明确）。数据降维方法主要分为特征选择和特征抽取(特征降维)两类。 特征选择方法：是在所有的特征中通过子集搜索算法寻找和模型最相关的特征子集的过程，简单的说就是在所有特征中选择和目标最相关的一些特征，丢弃掉一些不太重要的特征。 特征抽取：也被称为特征降维，用的最广泛也最常见的一种特征抽取方法就是PCA。 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:0:0","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"1. ICA(独立成分分析) 独立成分分析（ICA），指在只知道混合信号，而不知道源信号、噪声以及混合机制的情况下，分离或近似地分离出源信号的一种分析过程；是盲信号分析领域的一个强有力方法，也是求非高斯分布数据隐含因子的方法 1.1 ICA与PCA区别： 相同点： 都不需要对源信号的分布做具体的假设； 如果观察到的信号为高斯，那么源信号也为高斯，此时PCA和ICA等价。 都可以实现数据得降维； PCA是寻找特征值矩阵，ICA是寻找解混矩阵；从线性代数的角度去理解，PCA和ICA都是要找到一组基，这组基张成一个特征空间，数据的处理就都需要映射到新空间中去。 不同点： 1）处理数据的类型不同： ICA处理非高斯数据，PCA、FA都是处理高斯数据。 2）处理目的不同： ICA提取相互独立的属性，而且降维；PCA只做数据的降维。ICA的数据预处理中会用到PCA 3）求解过程不同：ICA 认为观测信号是若干个统计独立的分量的线性组合，ICA要做的是一个解混过程；而PCA是一个信息提取的过程，4）将原始数据降维，现已成为ICA将数据标准化的预处理步骤； PCA和ICA的用途完全不同。 如果只在意数据的能量或方差、假设噪声或不感兴趣的信号都比较微弱，那么用PCA就能把主要信号留下来。在某种意义上，ICA更智能——它不在意信号的能量或方差，只看独立性。所以给定的待分析的混合信号经任意的线性变换都不会影响ICA的输出结果，但会严重影响PCA的结果。简而言之：PCA有助于压缩数据，而ICA有助于分离数据 1.2 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： Rscript ICA.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -a：算法选择；默认为\"par\" -f：负熵方法的选择；默认为\"logcosh\" -o：输出路径；默认为./ 1.3 结果展示 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:1:0","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"2. LDA 2.1 KDA与PCA区别： 相同点： 1）两者均可以对数据进行降维。 2）两者在降维时均使用了矩阵特征分解的思想。 3）两者都假设数据符合高斯分布。 不同点： 1）LDA是有监督的降维方法，而PCA是无监督的降维方法 2）LDA降维最多降到类别数k-1的维数，而PCA没有这个限制。 3）LDA除了可以用于降维，还可以用于分类。 4）LDA选择分类性能最好的投影方向，而PCA选择样本点投影具有最大方差的方向。 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:2:0","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"3. FA (因子分析) 3.1 FA与PCA区别： **因子分析（Factor analysis）旨在提出因子模型（Factor model）**来研究如何用几个公共因子，记作F_{1},…,F_{m}，通常m\u003cp，来刻画原始变量之间的相关性。 相同点： PCA与FA都是数据降维的重要方法，都对原始数据进行标准化处理，都消除了原始指标的相关性对综合评价所造成的信息重复的影响，都属于因素分析法，都基于统计分析方法； 二者均应用于高斯分布的数据，非高斯分布的数据采用ICA算法； 二者构造综合评价时所涉及的权数具有客观性，在原始信息损失不大的前提下，减少了后期数据挖掘和分析的工作量。 不同点： 原理不同：PCA仅仅是变量变换，找出原始变量的线性组合；FA是寻找变量内部相关性及潜在的共同因素。 功能、作用不同：PCA简化原有变量，强调解释数据变异的能力，适合做数据简化；FA解释原有变量之间关系，强调变量之间的相关性，适合检测数据结构。 有无误差：PCA模型无误差项、不需要旋转；FA模型有误差项，一般需要旋转才能对因子进行命名和解释。 3.2 R实战分析 ​ 与主成分分析相同的是，FA分析需要使用psych包中**fa.parallel()**函数绘制碎石图，确定组成分数与因子数。 fa.parallel(cor_data, n.obs=112, fa=\"both\", n.iter=100) #fa参数为输出组成分或因子的数。 Parallel analysis suggests that the number of factors = 4 and the number of components = 3 结合上图和函数给出的信息得到以下结论：如果使用PCA，我们需要选择三个主成分；如果使用EFA，我们需要选择4个因子。 使用fa()函数进行因子提取，调用公式如下： \u003e fa(r, nfactors=, n.obs=, rotate=, scores=, fm=) # r:相关系数矩阵或原始数据矩阵， # nfactors:设定主提取的因子数（默认为1） # n.obs:观测数（输入相关系数矩阵时需要填写） # rotate:设定旋转的方法（默认互变异数最小法） # scores:设定是否需要计算因子得分（默认不需要） # fm:设定因子化方法（默认极小残差法） 与主成分分析不同的是，在因子分析中我们需要指定提取公因子的方法（fm），方法包括： ml：最大似然法 pa：主轴迭代法 wls：加权最小二乘法 gls：广义加权最小二乘法 minres：最小残差法 3.3 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： Rscript FA.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -r：设定旋转的方法；默认为\"varimax\" -f：提取公因子的方法；默认为\"gls\" -o：输出路径；默认为./ 3.4 结果展示 gene_FA.pdf: 使用FA方法时，样本在二维坐标的分布图。 gene_fa_parallel.pdf: 碎石图。 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:3:0","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"4. t-SNE ​ t-SNE将数据点之间的相似度转化为条件概率，原始空间中数据点的相似度由正态分布表示，嵌入空间中数据点的相似度由t分布表示。通过原始空间和嵌入空间的联合概率分布的KL散度（用于评估两个分布的相似度的指标）来评估嵌入效果的好坏。 ​ t-SNE的主要优势在于通过t分布与正态分布的差异，解决了降维后的拥挤问题，使得相似的样本能够聚集在一起，而差异大的样本能够有效地分开，避免了其他降维方法样本分布拥挤、边界不明显的缺点。但它同时也有计算慢、对参数敏感、结果具有随机性等缺陷。在实践中具体采用哪种方法，可以根据情况决定。 4.3 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： **注意事项：**需要使用unique函数去除重复数据 Rscript Tsne.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -o：输出路径；默认为./ 4.4 结果展示 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:4:0","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"5. Diffusion Map(扩散映射) Diffusion Map又称为扩散映射，其原理是将空间距离转换为一种状态转移的概率，从而确定随机游走的方向，从而确定细胞发育轨迹 该算法分为确定细胞转移方向（Markov矩阵）和降维（Markov矩阵特征值分解降维）两块 其通过 整合数据的局部几何关系 揭示 数据集在不同尺度的几何结构。 与PCA (principal component analysis)、MDS (Multidimensional Scaling) 这些降维方法相比，扩散映射 非线性，聚焦于发现数据集潜在的流形结构。 优点：对噪声鲁棒，计算代价较低 5.1 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： Rscript DiffusionMap.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -o：输出路径；默认为./ 5.2 结果展示 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:5:0","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"6. glmpca 实现主成分分析（GLM-PCA）的广义版本，用于非正态分布数据（如计数或二进制矩阵）的降维。 6.1 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： Rscript Glmpca.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -f：对数据进行似然法，默认为：“poi”；其它参数可为：\"nb\", \"nb2\", \"binom\", \"mult\", \"bern\" -o：输出路径；默认为./ 6.2 结果展示 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:6:0","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"7. ISOMAP(等距特征映射) isomap算法是基于前面所讲的MDS算法，不同之处在于isomap用图中两点的最短路径距离替代了MDS中欧式空间的距离，这样能更好的拟合流行体数据。 当我们已知数据嵌在一个高维的流行体时候，使用isomap明显会有更好的效果。 7.1 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： Rscript Isomap.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -o：输出路径；默认为./ 7.2 结果展示 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:6:1","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"8. LLE( Locally linear embedding) 局部线性嵌入(Locally Linear Embedding，以下简称LLE)是非常重要的降维方法。和传统的PCA，LDA等关注样本方差的降维方法相比，LLE关注于降维时保持样本局部的线性特征（保持原有拓扑结构），由于LLE在降维时保持了样本的局部特征，它广泛的用于图像识别，高维数据可视化等领域。LLE是非线性降维技术，可以说是流形学习方法最经典的算法之一。 但是LLE在有些情况下也并不适用，如果数据分布在整个封闭的球面上，LLE则不能将它映射到二维空间，且不能保持原有的数据流形。那么我们在处理数据中，首先假设数据不是分布在闭合的球面或者椭球面上。 LLE算法认为每一个数据点都可以由其近邻点的线性加权组合构造得到。算法的主要步骤分为三步：(1)寻找每个样本点的k个近邻点；（2）由每个样本点的近邻点计算出该样本点的局部重建权值矩阵；（3）由该样本点的局部重建权值矩阵和其近邻点计算出该样本点的输出值。 8.1 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： Rscript LLE.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -o：输出路径；默认为./ 8.2 结果展示 找出使rho最小的K值 降维结果图 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:6:2","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"9. LTSA（Local Tangent Space Alignment） LTSA的基本思路是用样本点的近邻区域的切空间来表示局部几何结构，然后对局部切空间进行重新排列得到非线性流形的用自然参数刻画的低维表示，是经典的流形学习与降维算法。 9.1 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： **注意事项：**需要使用pca降维的特征值进行后续分析 Rscript Ltsa.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -o：输出路径；默认为./ 9.2 结果展示 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:6:3","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"10. NMF（非负矩阵分解）  NMF(Non-negative matrix factorization)，即对于任意给定的一个非负矩阵V，其能够寻找到一个非负矩阵W和一个非负矩阵H，满足条件V=W*H,从而将一个非负的矩阵分解为左右两个非负矩阵的乘积。其中，V矩阵中每一列代表一个观测(observation)，每一行代表一个特征(feature)；W矩阵称为基矩阵，H矩阵称为系数矩阵或权重矩阵。这时用系数矩阵H代替原始矩阵，就可以实现对原始矩阵进行降维，得到数据特征的降维矩阵。 10.1 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： Rscript NMF.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -o：输出路径；默认为./ 10.2 结果展示 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:6:4","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"11.ZINB-WaVE(Zero-Inflated Negative Binomial Model for RNA-Seq Data) Implements a general and flexible zero-inflated negative binomial model that can be used to provide a low-dimensional representations of single-cell RNA-seq data. The model accounts for zero inflation (dropouts), over-dispersion, and the count nature of the data. The model also accounts for the difference in library sizes and optionally for batch effects and/or other covariates, avoiding the need for pre-normalize the data. 11.1 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： Rscript ZINBWaVE.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -o：输出路径；默认为./ 11.2 结果展示 ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:6:5","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"12. pCMF The pCMF package contains mplementation of the probabilistic Count Matrix Factorization (pCMF) method based on the Gamma-Poisson hirerarchical factor model with potential sparisty-inducing priors on factor V. This method is specifically designed to analyze large count matrices with numerous potential drop-out events (also called zero-inflation) such as gene expression profiles from single cells data (scRNA-seq) obtained by high throughput sequencing. 12.1 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/DR 程序执行： Rscript ZINBWaVE.R -e gene.tpm.matrix.annot.xls -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -o：输出路径；默认为./ 12.2 结果展示 参考资料： Accuracy, robustness and scalability of dimensionality reduction methods for single-cell RNA-seq analysis [DRComparison](https://github.com/xzhoulab/DRComparison/tree/master/algorithms) How to Use t-SNE Effectively LLE zinbwave pCMF-github ","date":"2021-11-26","objectID":"/posts/dimensionality-reduction-for-dataviz/:6:6","tags":["RNAseq","MDS","scRNA"],"title":"比较不同降维分析方法在RNAseq数据的可视化结果","uri":"/posts/dimensionality-reduction-for-dataviz/"},{"categories":["RNAseq"],"content":"circRNA定量软件分析比较","date":"2021-11-24","objectID":"/posts/circran-quantification/","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"一、CIRI \u0026 CIRI2 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:0:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"1. CIRI鉴定circRNA的原理 在最初的环状RNA研究中，认为环状RNA都是由exon通过反向剪切构成的,称之为exonic circRNA，只有这样的环状RNA能够由PCR反应验证出来的。 CIRI是一款环状RNA检测软件，通过该软件的预测结果，学者第一次用实验验证出了intronic circRNA和intergenic circRNA。该软件操作简便，准确度高，是非常流行的一款环状RNA检测软件。 CIRI 相对于依赖基因注释的算法具有以下不可或缺的优势：能够从内含子或基因组间区鉴定到circRNA；对于基因注释不好甚至没有注释的真核生物也能对测序数据进行鉴定。 CIRI2是在CIRI基础上，改进了 maximum likelihood estimation（MLE）模型：判断潜在BSJ read中是否多个可能区域，有效控制由错误mapping或者基因组中重复序列所导致的假阳性；CIRI2在测试数据中F1得分平均值最高，且较其他识别程序消耗更少的内存及运算时间；CIRI2需求经RNase R处理的样本数据。 该软件至少需要两个输入文件，基因组的fasta序列和测序数据比对产生的sam文件，需要注意的是，输入的sam文件必须是由bwa-mem算法比对产生的 。分析的pipeline示意如下 对于输入的sam文件，需要经过两次扫描，在第一次扫描时，根据双端数据的比对情况筛选候选的环状RNA，这一步通过判断SAM文件中CIGAR那一列的值来实现，本质上是检测覆盖环状RNA连接点处的junction reads,根据测序读长和连接点处包含的基因组区域的特征，分成以下3种模型 图A：表示junction read只覆盖了起始外显子和终止外显子的部分序列，这两部分reads在基因组上的比对位置是相反的，绝大部分的环状RNA都符合这种模型。 图B：表示junction read除了覆盖了起始外显子和终止外显子的两部分序列外，还覆盖了中间的一个外显子的部分序列，这种情况下reads可以分成3个部分比对到基因组上。 图C：表示junction read除了覆盖了整个环状RNA外，还重复又读了一部分序列，这个只有当环状RNA的序列长度小于测序读长时才可能出现。 该软件将以上3种模型定义为paired chiastic clipping signals，简称PCC信号，如果一条reads比对情况符合以上任意一种，就认为该reads是一条环状RNA的junction reads。 为了提高准确性，识别到junciton reads之后，还会结合双端序列比对的质量paired end mapping即PEM和GT-AG保守的剪切位点进行过滤，示意图如下 只保留比对质量较高，且头尾符合AG-GT剪切信号的junciton reads进入下游分析，在第二次扫描SAM文件的过程中，通过动态规划算法给出最终的环状RNA预测结果，如果提供了GTF文件，还会对环状RNA进行注释。 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:1:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2. CIRI使用方法 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:2:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2.1. bwa比对参考基因组 首先需要使用bwa mem 将reads 与基因组比对 代码如下： bwa mem \\ -T 19 \\ -t 5 hg19_index \\ R1.fastq.gz R2.fastq.gz \\ \u003e align.sam ","date":"2021-11-24","objectID":"/posts/circran-quantification/:2:1","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2.2. 运行CIRI CIRI2.pl \\ -T 20 \\ -F hg19.fa \\ -A hg19.gtf \\ -I align.sam \\ -O circRNA.xls 输出结果如下所示 在后续验证时，可以挑选表达量较高的来验证，在软件对应的文章中，挑选了junction reads数大于5的环状RNA来进行验证。 参考资料： CIRI: an efficient and unbiased algorithm for de novo circular RNA identification CIRI-cookbook 二、CIRIquant CIRIquant 与其他同类算法相比，其在鉴定circRNA的过程中降低了假阳性率。在circRNA的定量和差异表达分析方面，CIRIquant也考虑到RNase R处理不均等因素对最终结果的影响，通过qPCR验证其结果相较于其他方法拥有更高的准确度。同时，CIRIquant还提供对circRNA与线性转录本比例的分析，为circRNA生物发生和调控的相关研究提供基础。 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:2:2","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"1. CIRIquant 鉴定circRNA的原理 首先将1. reads使用hisat2与参考基因组进行比对，使用CIRI2或者其他软件对circRNA进行鉴定获得潜在的circRNA； 为了对circRNA的表达水平进行精准的定量并筛选BSJs的假阳性，我们将BSJ区域的两个全长序列连接构建一个伪circRNA参考序列； 然后将潜在的circRNA重新比对到伪序列上，确定BSJ reads 是否可以与BSJ区域完全线性对齐。 结合与基因组和伪circRNA序列比对结果，可以通过计算BSJ上的环装剪切junction reads 的比列来确定每个circRNA的junction 率；然后使用RNA-seq分析流程获得转录本水平表达量信息。 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:3:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2. ciriquan使用方法 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:4:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2.1 circRNA的定量 参数使用： Usage: CIRIquant [options] --config \u003cconfig\u003e -1 \u003cm1\u003e -2 \u003cm2\u003e \u003cconfig\u003e Config file \u003cm1\u003e Input mate1 reads (for paired-end data) \u003cm2\u003e Input mate2 reads (for paired-end data) Options (defaults in parentheses): -v Run in verbose mode -o, --out Output directory (default: current directory) -e, --log Specific log file (default: sample_prefix.log) -p, --prefix Output sample prefix (default: input sample name) -t, --threads Number of CPU threads to use (defualt: 4) -a, --anchor Minimum anchor length for junction alignment (default: 5) -l, --library-type Library type, 0: unstranded, 1: read1 match the sense strand, 2: read1 match the antisense strand (default: 0) --bed User provided Back-Spliced Junction Site in BED format --circ circRNA prediction results from other tools --tool Tool name, required when --circ is specified ([CIRI2/CIRCexplorer2/DCC/KNIFE/MapSplice/UROBORUS/circRNA_finder/find_circ]) --RNaseR CIRIquant output file of RNase R data (required for RNase R correction) --bam Specific hisat2 alignment bam file against reference genome --no-gene Skip StringTie estimation of gene abundance 注意: 目前，–circ 和–tool 选项支持来自CIRI2/ CIRCexplorer2/ DCC/ KNIFE/ MapSplice/ UROBORUS/ circRNA_finder/ find_cir 的结果 对于DCC和circRNA_finder等工具，需手动删除连接位置相同但链相反的重复环状rna。 基因表达值需要进行归一化，如果之后需要运行DE分析，不要使用---no-gene。 CIRIquant需要输入一个配置文件 // Example of config file name: hg19 tools: bwa: path/bwa hisat2: path/hisat2 stringtie: path/stringtie samtools: path/samtools reference: fasta: path/hg19.fa gtf: path/gencode.v19.annotation.gtf bwa_index: path//hg19 hisat_index: path/hg19 参数设置 Key Description name the name of config file bwa the path of bwa hisat2 the path of hisat2 stringtie the path of stringite samtools the path of samtools, samtools version below 1.3.1 is not supported fasta reference genome fasta, a fai index by samtools faidx is also needed under the same directory gtf annotation file of reference genome in GTF/GFF3 format bwa_index prefix of BWA index for reference genome hisat_index prefix of HISAT2 index for reference genome 对于线下提供的circRNA定量表需要有junction位点的bed文件，第4列的格式必须为“chrom:start|end”。例如： chr1 10000 10099 chr1:10000|10099 . + chr1 31000 31200 chr1:31000|31200 . - Usage 推荐：使用CIRI2进行circRMA的预测 CIRIquant -t 4 \\ -1 ./test_1.fq.gz \\ -2 ./test_2.fq.gz \\ --config ./chr1.yml \\ -o ./test \\ -p test 使用提供的bed文件时： CIRIquant -t 4 \\ -1 ./test_1.fq.gz \\ -2 ./test_2.fq.gz \\ --config ./chr1.yml \\ -o ./test \\ -p test \\ --bed your_circRNAs.bed 使用其它鉴定工具时： 例如使用find_circ鉴定的circRNA结果 CIRIquant -t 4 \\ -1 ./test_1.fq.gz \\ -2 ./test_2.fq.gz \\ --config ./chr1.yml \\ -o ./test \\ -p test \\ --circ find_circ_results.txt \\ --tool find_circ 输出结果 The main output of CIRIquant is a GTF file, that contains detailed information of BSJ and FSJ reads of circRNAs and annotation of circRNA back-spliced regions in the attribute columns CIRIquant 输出的是一个GTF文件，其中包括circRNA的BSJ和FSJ reads 的详细信息，以及属性列中对circRNA反向拼接区域的注释。 每一列的信息 column name description 1 chrom chromosome / contig name 2 source CIRIquant 3 type circRNA 4 start 5' back-spliced junction site 5 end 3' back-spliced junction site 6 score CPM of circRNAs (#BSJ / #Mapped reads) 7 strand strand information 8 . . 9 attributes attributes seperated by semicolon attributes包含的key与value： key description circ_id name of circRNA circ_type circRNA types: exon / intron / intergenic bsj number of bsj reads fsj number of fsj reads junc_ratio circular to linear ratio: 2 * bsj / ( 2 * bsj + fsj) rnaser_bsj number of bsj reads in RNase R data (only when –RNaseR is specificed) rnaser_fsj number of fsj reads in RNase R data (only when –RNaseR is specificed) gene_id ensemble id of host gene gene_name HGNC symbol of host gene gene_type type of host gene in gtf file ","date":"2021-11-24","objectID":"/posts/circran-quantification/:4:1","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2.2 RNase R效应矫正 当拥有RNase R处理和未经处理的样本时，CIRIquant 可以评估RNase R数据中处理前的circrna的表达水平。 为了去除RNase R处理效果，需要两个步骤: 对RNase R处理过的样品运行CIRIquant。 对未经处理的总RNA样本运行CIRIquant，--RNaseR使用之前Step1中的输出gtf文件。 然后，CIRIquant将输出RNaseR数据中鉴定到的circrna的表达水平，标题行将包含额外的RNaseR处理效率信息。 Usage: # Step1. Run CIRIquant with RNase R treated data CIRIquant --config ./hg19.yml \\ -1 ./RNaseR_treated_1.fq.gz \\ -2 ./RNaseR_treated_2.fq.gz \\ --no-gene \\ -o ./RNaseR_treated \\ -p RNaseR_treated \\ -t 6 # Step2. Run CIRIquant with untreated total RNA CIRIquant --config ./hg19.yml \\ -1 ./TotalRNA_1.fq.gz \\ -2 ./TotalRNA_2.fq.gz \\ -o ./TotalRNA \\ -p TotalRNA \\ -t 6 \\ --RNaseR ./RNaseR_treated/RNaseR_treated.gtf ##2.3 差异表达分析 ####针对无生物学重复 对于没有重复的样品，差异表达和差异剪接分析使用 CIRI_DE Usage: CIRI_DE [options] -n \u003ccontrol\u003e -c \u003ccase\u003e -o \u003cout\u003e \u003ccontrol\u003e CIRIquant result of control sample \u003ccase\u003e CIRIquant result of treatment cases \u003cout\u003e Output file Options (defaults in parentheses): -p p value threshold for DE and DS score calculation (default: 0.05) -t numer of threads (default: 4) Example usage: CIRI_DE -n control.gtf -c case.gtf -o CIRI_DE.tsv 输出结果 column name description 1 circRNA_ID circRNA identifier 2 Case_BSJ number of BSJ reads in case 3 Case_FSJ number of FSJ reads in case 4 Case_Ratio junction ratio in case 5 Ctrl_BSJ number of BSJ reads in control 6 Ctrl_FSJ number of FSJ reads in control 7 Ctrl_Ratio junction ratio in control 8 DE_score differential expression score 9 DS_score differential splicing score ","date":"2021-11-24","objectID":"/posts/circran-quantification/:4:2","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2.3 差异表达分析 ####有生物学重复 对于生物学重复，推荐使用edgeR分析，使用prep_CIRIquant 去生成circRNA表达水平/junction比率的矩阵，使用CIRI_DE_replicate 用于DE分析。 Step1: 准备CIRIquant 的输出文件 需要提供一个文本文件，包含样本信息和CIRIquant输出的GTF文件的路径信息 CONTROL1 ./c1/c1.gtf C 1 CONTROL2 ./c2/c2.gtf C 2 CONTROL3 ./c3/c3.gtf C 3 CASE1 ./t1/t1.gtf T 1 CASE2 ./t2/t2.gtf T 2 CASE3 ./t3/t3.gtf T 3 默认情况下，前三列是必需的。对于paired 样本，还可以添加一个主题名称列。 column description 1 sample name 2 path to CIRIquant output gtf 3 group (“C” for control, “T” for treatment) 4 subject (optional, only for paired samples) **注意:**如果使用CIRI_DE进行差异表达分析，第3列group列必须是“C”或者“T” 然后，运行prep_CIRIquant汇总所以样本的circRNA的表达量 Usage: prep_CIRIquant [options] -i the file of sample list --lib where to output library information --circ where to output circRNA annotation information --bsj where to output the circRNA expression matrix --ratio where to output the circRNA junction ratio matrix Example: prep_CIRIquant -i sample.lst \\ --lib library_info.csv \\ --circ circRNA_info.csv \\ --bsj circRNA_bsj.csv \\ --ratio circRNA_ratio.csv 输出的结果可以使用DEseq2与edgeR进行分析。 Step2: 准备 StringTie 的输出 StringTie的输出应该位于output_dir/gene/prefix_out.gtf下。 需要使用stringTie中的prepDE.py来生成用于标准化的基因计数矩阵。 例如，可以提供一个sample_gene.lst 包含样本 ID 和 StringTie 输出路径的文本文件： CONTROL1 ./c1/gene/c1_out.gtf CONTROL2 ./c2/gene/c2_out.gtf CONTROL3 ./c3/gene/c3_out.gtf CASE1 ./t1/gene/t1_out.gtf CASE2 ./t2/gene/t2_out.gtf CASE3 ./t3/gene/t3_out.gtf 然后使用生成的gene_count_matrix.csv去运行prepDE.py -i sample_gene.lst。 Step3: 差异表达分析 使用CIRI_DE_replicate进行差异表达分析，需要安装edgeR包 Usage: CIRI_DE_replicate [options] --lib library information by CIRIquant --bsj circRNA expression matrix --gene gene expression matrix --out output differential expression result Example: CIRI_DE_replicate --lib library_info.csv \\ --bsj circRNA_bsj.csv \\ --gene gene_count_matrix.csv \\ --out circRNA_de.tsv 输出结果是未过滤的，可以设定阈值对结果进行过滤。 参考资料： Accurate quantification of circular RNAs identifies extensive circular isoform switching events CIRI-cookbook 三、CIRCexplorer2 环状RNA的识别包含了序列比对和环状RNA预测两步，该软件目前更新到了v2版本，相比v1版本，用法有较大变化。在v1版本中只支持tophat-fusion和STAR两款软件进行序列比对来识别junction reads,在v2版本中，扩展到了以下5种软件 TopHat2/TopHat-Fusion STAR BWA MapSplice segemehl ","date":"2021-11-24","objectID":"/posts/circran-quantification/:4:3","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"1. CIRCexplorer原理 Align用于将序列比对到参考基因组上; Parse用于从比对结果中挑选junction reads; Annotate用于预测环状RNA; Assemble用于组装环状RNA的转录本序列； Denovo根据序列组装结果，识别新的环状RNA和分析环状RNA上的可变剪切事件 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:5:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2. CIRCexplorer使用方法 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:6:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"安装 pip install circexplorer2 conda install circexplorer2 –channel bioconda ","date":"2021-11-24","objectID":"/posts/circran-quantification/:6:1","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2.1 Align 虽然支持多款序列比对软件，但是由于tophat的结果更方便后续的cufflinks软件进行分析，官方推荐使用tophat来进行比对。针对单端序列的比对，代码如下 CIRCexplorer2 align \\ -G hg19.gtf \\ -i bowtie1_index \\ -j bowtie2_index \\ -f RNA_seq.fastq \\ \u003e CIRCexplorer2_align.log 值得注意的是，align模块仅提供了针对单端序列使用tophat进行比对的功能，如果你是双端测序的结果或者想要使用其他软件，只能是自己手工进行比对，这里比较推荐STAR软件，速度较快，缺点就是内存消耗较大。 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:6:2","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2.2 parse parse用于解析序列比对的结果，支持多款软件，以常用的STAR为例，代码如下 CIRCexplorer2 parse \\ -t STAR \\ Chimeric.out.junction \\ \u003e CIRCexplorer2_parse.log 对于其他软件的用法，具体请参考官方文档，无论是什么比对软件，该命令最终都会生成以下文件 back_spliced_junction.bed ","date":"2021-11-24","objectID":"/posts/circran-quantification/:6:3","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2.3 annotation 这一步就是根据已知的线性转录本信息，识别环状RNA，所以需要提供参考基因组对应的注释文件，官方也提供了脚本来帮助我们下载，用法如下 fetch_ucsc.py hg19 ref hg19_ref.txt 预测环状RNA的代码如下 CIRCexplorer2 annotate \\ -r hg19_ref.txt \\ -g hg19.fa \\ -b back_spliced_junction.bed \\ -o circularRNA_known.txt \\ \u003e CIRCexplorer2_annotate.log -o参数为输出结果，内容示意如下 每列的含义如下所示 如果你只是想要使用这个软件来预测环状RNA,那么多款序列比对软件都可以选择，但是你想要使用完整功能，则必须使用tophat来进行比对。 参考资料： Genome-Wide Annotation of circRNAs and Their Alternative Back-Splicing/Splicing with CIRCexplorer Pipeline CIRCexplorer2使用手册 四、find_circ ","date":"2021-11-24","objectID":"/posts/circran-quantification/:6:4","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"1. find_circ鉴定circRNA的原理 find_circ 的基本原理: find_circ根据Bowtie2比对结果，从没有比对到参考序列的 reads 的两端各提取 20nt 的 anchor 序列，将每一对 anchor 序列再次与参考序列比对。如果 anchor 序列的 5' 端比对到参考序列（起始与终止位点分别记为 A3，A4），anchor 序列的 3' 端比对到此位点的上游（起始与终止位点分别记为 A1，A2），并且在参考序列的 A2 到 A3 之间存在剪接位点（GT-AG），则将此 read 作为候选 circRNA。最后将 read count 大于等于 2 的候选 circRNA 作为鉴定的 circRNA。 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:7:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2. find_circ的安装 find_circ需要运行在装有python 2.7的64位系统上，同时需要安装numpy和pysam这两个python模块。其运行需要借助bowtie2和samtools来完成基因组mapping的过程。 1 wget https://github.com/marvin-jens/find_circ/archive/v1.2.tar.gz 2 tar -xzvf v1.2.tar.gz ","date":"2021-11-24","objectID":"/posts/circran-quantification/:8:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"3. 参考基因组的下载 通过fetch_ucsc.py下载ucsc最新版本的参考基因组 1 fetch_ucsc.py hg19/hg38/mm9/mm10 ref/kg/ens/fa out ","date":"2021-11-24","objectID":"/posts/circran-quantification/:9:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"4. bowtie2建立参考基因组索引 1 bowtie2_build hg38.fa hg38 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:10:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"5. 基于RNA-Seq的基因组比对（pair-end模式） bowtie2参数介绍 -p 使用多线程 –very-sensitive 允许多重比对，报告出最好的一个 –score-min=C,-15,0 设置比对分数函数 –mm 设置I/O模式。 samtools view参数介绍 -h 文件包含header line -b 输出bam格式 -u 输出非压缩的bam格式 –S 忽略版本兼容 1 bowtie2 -p 16 --very-sensitive --score-min=C,-15,0 --mm -x /path/to/bowtie2_index -q -1 reads1.fq -2 reads2.fq | samtools view -hbuS - | samtools sort - -o output.bam ","date":"2021-11-24","objectID":"/posts/circran-quantification/:11:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"6. 挑出没有比对上的序列，各取两头20bp短序列（anchor) 1 samtools view -hf 4 output.bam | samtools view -Sb - \u003e unmapped.bam 2 /path/to/unmapped2anchors.py unmapped.bam | gzip \u003e anchors.fq.gz ","date":"2021-11-24","objectID":"/posts/circran-quantification/:12:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"7. 根据anchor比对基因组情况寻找潜在的circRNA find_circ.py参数介绍 –prefix参数指定的是spliced_sites.bed文件中第四列内容的前缀，建议指定为物种对应的三字母缩写，需要注意的是，在spliced_sites_bed中同时包含了环状RNA和线性RNA,环状RNA的名称用circ标识，线性RNA的名称用norm标识，这里设置为–prefix=hsa_ –name参数会在生成的spliced_sites.bed文件中指定tissues列的名字 –reads参数会生成包含spliced reads的fa文件 –stats参数会生成包含数值统计信息的txt文件 1 bowtie2 -p 16 --reorder --mm --score-min=C,-15,0 -q -x /path/to/bowtie2_index -U anchors.fq.gz | /path/to/find_circ.py --genome=/path/to/hg38.fa --prefix=hsa_ --name=my_test_sample --stats=\u003crun folder\u003e/stats.txt --reads=\u003crun folder\u003e/splice_reads.fa \u003e \u003crun folder\u003e/spliced_sites.bed 根据以下规则对结果进行筛选 1.根据关键词CIRCULAR筛选环状RNA 2.去除线粒体上的环状RNA 3.筛选unique junction reads数至少为2的环状RNA 4.去除断裂点不明确的环状RNA 5.过滤掉长度大于100kb的circRNA,这里的100kb为基因组长度，直接用环状RNA的头尾相减即可 1 grep CIRCULAR spliced_sites.bed | grep -v chrM | gawk '$5\u003e=2' | grep UNAMBIGUOUS_BP | grep ANCHOR_UNIQUE | /path/to/maxlength.py 100000 \u003e find_circ.candidates.bed ","date":"2021-11-24","objectID":"/posts/circran-quantification/:13:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"8. 分析多个样本 如果有多个样本，需要分别用find_circ.py运行，然后将各自的结果合并 1 /path/to/merge_bed.py sample1.bed sample2.bed [...] \u003ecombined.bed ","date":"2021-11-24","objectID":"/posts/circran-quantification/:14:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"9. 输出的spliced_sites_bed文件格式 输出的spliced_sites.bed文件前六列为标准的BED文件格式，剩余的12列关于junction的一些信息 column name description 1 chrom chromosome/contig name 2 start left splice site (zero-based) 3 end right splice site (zero-based).(Always: end \u003e start. 5' 3' depends on strand) 4 name (provisional) running number/name assigned to junction 5 n_reads number of reads supporting the junction (BED ‘score’) 6 strand genomic strand (+ or -) 7 n_uniq number of distinct read sequences supporting the junction 8 uniq_bridges number of reads with both anchors aligning uniquely 9 best_qual_left alignment score margin of the best anchor alignment supporting the left splice junction (max=2 * anchor_length) 10 best_qual_right same for the right splice site 11 tissues comma-separated, alphabetically sorted list of supporting the left splice junction (max=2 * anchor_length) 12 tiss_counts comma-separated list of corresponding read-counts 13 edits number of mismatches in the anchor extension process 14 anchor_overlap number of nucleotides the breakpoint resides within one anchor 15 breakpoints number of alternative ways to break the read with flanking GT/AG 16 signal flanking dinucleotide splice signal (normally GT/AG) 17 strandmatch ‘MATCH’, ‘MISMATCH’ or ‘NA’ for non-stranded analysis 18 category list of keywords describing the junction. Useful for quick grep filtering 参考资料 Circular RNAs are a large class of animal RNAs with regulatory potency 五、circRNA_finder circRNA_finder是一款环状RNA预测软件，在对果蝇的研究中采用该软件进行了环状RNA的预测，该软件的源代码托管在github上，网址如下 https://github.com/orzechoj/circRNA_finder 软件的安装比较简便，直接下载解压就可以了，需要注意的是，该软件依赖以下几个软件 perl awk STAR samtools 其中samtools的版本必须是低于1.0的版本，因为两个版本samtools sort的用法有变化。软件的使用包含如下两个步骤 虽然软件提供了一个名为runStar.pl的脚本(如下)，但是由于STAR的版本问题，使用起来并不方便。该脚本本质上是对STAR的封装，直接用STAR就好了，参数设置可以参考脚本中的设置。 ./runStar.pl --inFile1 [R1 fastq] --inFile2 [R2 fastq] --genomeDir [path to STAR genome] --maxMismatch [max mismatches realtive to read length, default 0.02] --outPrefix [output directory and prefix] ","date":"2021-11-24","objectID":"/posts/circran-quantification/:15:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"1. STAR构建index STAR --runMode genomeGenerate \\ --runThreadN \u003c# cpus\u003e \\ --genomeDir \u003cgenome output directory\u003e \\ --genomeFastaFiles \u003cinput Genome FASTA file\u003e –runThreadN是指你要用几个cpu来运行； –genomeDir构建索引输出文件的目录； –genomeFastaFiles你的基因组fasta文件所在的目录 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:16:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"2. STAR比对 首先要明确的是，STAR软件的参数实在是太多了，那么经常用的就那么几个。 下面的代码里，其中--twopassMode参数凭个人爱好是否使用，这个参数是非常非常耗时的，加上这个参数以后的运行时间是正常的两倍。而且非常消耗内存（star的twopassMode问题）。但是比对结果更为精准。 STAR \\ --runThreadN 40 \\ #线程数 --runMode alignReads \\#比对模式 --readFilesCommand zcat \\#说明你的fastq文件是压缩形式的，就是.gz结尾的，不加的话会报错 --quantMode TranscriptomeSAM GeneCounts \\ #将reads比对至转录本序列 --twopassMode Basic \\#先按索引进行第一次比对，而后把第一次比对发现的新剪切位点信息加入到索引中进行第二次比对。这个参数可以保证更精准的比对情况，但是费时也费内存。 --outSAMtype BAM Unsorted \\ #输出BAM文件，不进行排序。如果不加这一行，只输出SAM文件。 --outSAMunmapped None \\ --genomeDir /gpfs/home/fangy04/downloads/STAR_index/GRCh38/ \\ #索引文件目录 --readFilesIn /gpfs/home/fangy04/downloads/SRR8112732_1.fastq.gz /gpfs/home/fangy04/downloads/SRR8112732_2.fastq.gz \\ #两个fastq文件目录 --outFileNamePrefix DRB_TT_seq_SRR8112732 #输出文件前缀 因为后续运行ciriRNA_finder 除了正常比对结果还需要以下三个文件： 所以在STAR 比对中最少需要增加两个参数：--chimOutType Junctions SeparateSAMold --chimSegmentMin 10; --chimSegmentMin默认为0，如果为0着不会输出junction信息文件 ","date":"2021-11-24","objectID":"/posts/circran-quantification/:17:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq"],"content":"3. 运行circRNA_finder perl \\ postProcessStarAlignment.pl \\ --starDir star_out_dir \\ --minLen 100 --outDir output_dir 运行完成之后，会三个文件,对应的后缀如下所示 _filteredJunctions.bed _s_filteredJunctions.bed _s_filteredJunctions_fw.bed 第一个文件为所有环状RNA的结果文件；第二个文件为剪切位点符合GT-AG剪切信号的环状RNA；第三个文件和第二个文件的环状RNA相同，只不过新增了环状RNA连接点附近的线性RNA平均测序深度信息。通常情况下，我们选择第二个文件的结果作为最终的环状RNA预测结果，该文件内容示意如下 每一行代表一个环状RNA,第一列代表染色体编号，第二列和第三列分别代表起始和终止位置，第四列代表name,这里用数字编号加上字母s表示，第五列代表环状RNA的junction reads数目,也就是表达量，第六列代表正负链信息。 参考资料： circRNA_finder_github ","date":"2021-11-24","objectID":"/posts/circran-quantification/:18:0","tags":["RNAseq","circRNA","定量"],"title":"circRNA定量软件分析比较","uri":"/posts/circran-quantification/"},{"categories":["RNAseq","DataViz"],"content":"根据基因的表达量，进行相关分析及网络图构建","date":"2021-11-22","objectID":"/posts/network-analysis-with-r/","tags":["NETWORK","RNAseq","表达量","可视化","网络图构建"],"title":"Network Analysis with R","uri":"/posts/network-analysis-with-r/"},{"categories":["RNAseq","DataViz"],"content":"R网络画图 R中的画网络图的方法主要有 igraph/networkD3/sna（network）包主要用来做2基因之间的网络画图 ","date":"2021-11-22","objectID":"/posts/network-analysis-with-r/:0:0","tags":["NETWORK","RNAseq","表达量","可视化","网络图构建"],"title":"Network Analysis with R","uri":"/posts/network-analysis-with-r/"},{"categories":["RNAseq","DataViz"],"content":"导入计算画图的R包 #!/usr/bin/env Rscript suppressMessages({ library(tidyverse) library(igraph) library(graphlayouts) library(ggraph) library(extrafont) library(reshape2) library(plotly) library(networkD3) library(argparser) library(RColorBrewer) loadfonts()}) igraph 是一个开源免费网络分析工具集合，在效率和便捷性上表现较好。 igraph 为 R、Python、Mathematica 和 C/C++ 均有支持 参考: https://igraph.org/ igraph 官网 https://kateto.net/networks-r-igraph ggraph是建立在ggplot2一个扩展R包，它的目标是为网络、树和系统树等等表示关系与层次的数据结构进行可视化。ggraph继承了ggplot2的图形语法，建立了面向节点和边的新的图形对象（geom），并添加了布局的概念。这样就可以在ggplot2框架下进行更加灵活美观的网络可视化 tidygraph是对传统的igraph包的打包和扩展，目的是在R的tidyverse语法框架下进行网络数据分析，ggraph使用tidygraph提供的tbl_graph类对象作为图形表示的数据结构，因此它可以直接支持tidygraph支持的每个对象，包括data.tree、phylo和graph等等，还可以通过as_tbl_graph()支持其他网络可视化包提供的数据对象，如igraph（igraph包）、dendrogram(stats包)、hclust（stats包）和network（network包）。不仅如此，ggraph还可以直接调用tidygraph的网络布局和网络分析算法 参考： https://www.rdocumentation.org/packages/ggraph/versions/0.1.1 ggraph官网 networkD3 R包生成的结果将是一个html文件，即网页文件(当然你也可以把它保存成静态图片的格式)，可以向他人更清晰地呈现数据本身 参考： http://christophergandrud.github.io/networkD3/ github主页 https://kateto.net/network-visualization https://cran.r-project.org/web/packages/networkD3/networkD3.pdf sna是一个可以确定点的坐标，首先要生成plotcord这个坐标矩阵，然后调用网络图的R包画图，作者只是用sna包来得到数据，其实用的是ggplot来画网络图 参考： https://cran.r-project.org/web/packages/network/network.pdf https://cran.r-project.org/web/packages/sna/sna.pdf 官方说明 ","date":"2021-11-22","objectID":"/posts/network-analysis-with-r/:0:1","tags":["NETWORK","RNAseq","表达量","可视化","网络图构建"],"title":"Network Analysis with R","uri":"/posts/network-analysis-with-r/"},{"categories":["RNAseq","DataViz"],"content":"参数传递 argv \u003c- arg_parser('') argv \u003c- add_argument(argv,\"--file1\", help=\"the gene list\") argv \u003c- add_argument(argv,\"--file2\", help=\"the tpm file\") argv \u003c- add_argument(argv,\"--file3\", help=\"the input file\") argv \u003c- add_argument(argv,\"--file4\", help=\"the name file\") argv \u003c- parse_args(argv) file1 \u003c- argv$file1 file2 \u003c- argv$file2 file3 \u003c- argv$file3 file4 \u003c- argv$file4 使用方法： 脚本路径：/mnt/ilustre/users/meng.luo/Pipeline/Pipeline/script/network 方法1：Rscript network.R –file1 Significant_meta2d_gene_tpm2.xls –file2 gene_tpm1.txt 前期文件准备，如果基因ID需要转换name，则数据应该要自己添加name信息，也可以使用这个脚本进行处理names.py。 输入文件file1第一列是geneid是要画网络图的基因list,第二列是gene_name是图中要展示的genename ，第三列第四列等可以选择添加其他的属性，第一列必须有，第二列和其他列可以没有 输入文件file2是一个表达量文件，第一列是geneid,后面几列是不同样品的表达量的tpm或者fpkm值，用于计算基因之间的相关性系数，筛选相关性系数0.8至1 和-0.8至 -1 方法2：Rscript network.R –file3 ppi6.xls –file4 gene_info.txt 输入文件file3可以直接输入ppi的结果进行作图, 第一列和第二列是有相关性的两geneid,第三列是相关性系数值，第一列和第二列必须有，第三列可以没有 输入文件file4是file3里所有gene的描述信息，第一列是geneid,第二列是gene_name,第三列之后可以添加其他属性信息，file4里的geneid可以比file3里的多，但是不能少，file4可有可无 添加R随机颜色 color \u003c- grDevices::colors()[grep(\"gr(a|e)y\", grDevices::colors(), invert = T)] rcolor \u003c- color[sample(1:length(color), length(color))][1] ","date":"2021-11-22","objectID":"/posts/network-analysis-with-r/:0:2","tags":["NETWORK","RNAseq","表达量","可视化","网络图构建"],"title":"Network Analysis with R","uri":"/posts/network-analysis-with-r/"},{"categories":["RNAseq","DataViz"],"content":"网路图数据矩阵搭建 方法1，根据tpm值计算基因之间的相关性系数，根据筛gene间相关性系数搭建网路图矩阵 if (!is.na(file1)){ gene_list \u003c- read.delim(file1,header=TRUE,sep='\\t',row.names=1) tpm \u003c- read.delim(file2,header=TRUE,sep='\\t',row.names=1) data \u003c- subset(tpm)[rownames(gene_list),] data \u003c- data[rowSums(data)\u003e1,] data \u003c- na.omit(data) data \u003c- log2(data+1) correlation \u003c- cor(as.data.frame(t(data)),method='pearson',use='pairwise.complete.obs') correlations \u003c- melt(correlation) correlations_up \u003c- subset(correlations, value \u003c 1 \u0026 value \u003e= 0.8 ) correlations_down \u003c- subset(correlations, value \u003c= -0.8 \u0026 value \u003e-1 ) edges \u003c- rbind(correlations_up,correlations_down) colnames(edges) \u003c- c(\"source\",\"target\",\"value\") if (!is.na(gene_list$gene_name)) { nodes_f \u003c- cbind(id=rownames(gene_list),as.data.frame(gene_list)) got_graphs \u003c- graph_from_data_frame(edges,vertices = nodes_f,directed = FALSE) } else { nodes_f \u003c- cbind(id=rownames(gene_list),gene_name=rownames(gene_list)) got_graphs \u003c- graph_from_data_frame(edges,vertices = nodes_f,directed = FALSE) } } 相关性计算使用cor函数计算，筛选相关性0.8至1 和-0.8至 -1 的之间的gene关系搭建网络矩阵 采用igraph包中的graph_from_data_frame（）搭建网络矩阵 graph_from_data_frame function (d, directed = TRUE, vertices = NULL) d \u003c- as.data.frame(d) 必须大于等于2列的矩阵，用来指定边id，默认将数据框d的前两列作为边id，其他列作为边的属性 directed 节点的指向性，默认TRUE vertices 用于指定节点属性矩阵，默认NULL，如果指定第一列作为节点名称（name），那么剩余列作为节点的其他属性 参考: https://igraph.org/ 方法2，根据给出来的相关性gene搭建网络图矩阵 if (!is.na(file3)){ edges \u003c- read.delim(file3,header=TRUE,sep='\\t',col.names = c(\"source\",\"target\",\"value\")) if (!is.na(file4)){ nodes_f \u003c- read.delim(file4,header=TRUE,sep='\\t',col.names = c(\"id\",\"gene_name\")) } else { nodes_f \u003c- data.frame(gene_id=unique(c(edges$source,edges$target)),gene_name=unique(c(edges$source,edges$target))) } got_graphs \u003c- graph_from_data_frame(edges,vertices = nodes_f,directed = FALSE) } ","date":"2021-11-22","objectID":"/posts/network-analysis-with-r/:0:3","tags":["NETWORK","RNAseq","表达量","可视化","网络图构建"],"title":"Network Analysis with R","uri":"/posts/network-analysis-with-r/"},{"categories":["RNAseq","DataViz"],"content":"聚类分系和参数配置 平面网路图中的gene聚类和参数配置 clu \u003c- cluster_louvain(got_graphs) V(got_graphs)$clu \u003c- as.character(clu$membership) V(got_graphs)$size \u003c- graph.strength(got_graphs) size1 \u003c- V(got_graphs)$size[order(V(got_graphs)$size,decreasing=TRUE)[1]] name1 \u003c- V(got_graphs)$name[order(V(got_graphs)$size,decreasing=TRUE)[1]] 聚类方法采用igraph包的cluster_louvain函数 clu \u003c- cluster_louvain(got_graphs)//聚类分析 membership(clu) //成员所属社团 print(clu) //社团和社团成员 modularity(clu) length(clu) //社团个数 sizes(clu) //各社团成员数 algorithm(clu) //所用算法名 is_hierarchical(clu) //是否是层次算法 plot(clu,got_graphs ) //对网络中成员社团所属类绘图 #另一种聚类方法 wc \u003c- cluster_walktrap(got_graphs) modularity(wc) membership(wc) plot(wc, karate) 参考： http://igraph.org/r/doc/cluster_louvain.html louvain社团发现算法 http://igraph.org/r/doc/communities.html 从发现的社团中抽取信息 http://jfaganuk.github.io/2015/01/24/basic-network-analysis/ 关于在igraph中用SNA包的flow betweenness功能 3D网络图的数据配置 Nodes_f \u003c- cbind(name=V(got_graphs)$name,group=V(got_graphs)$clu,size=V(got_graphs)$size,gene_name=V(got_graphs)$gene_name) Nodes_f \u003c- data.frame(Nodes_f,stringsAsFactors = FALSE) linkData \u003c- data.frame(source = (match(edges$source, Nodes_f$name)-1), target = (match(edges$target, Nodes_f$name)-1), value = edges$value) 3D网络图的数据配置中需要两个矩阵，Nodes_f 矩阵包含网络图节点的属性信息，linkData 矩阵包含网络图边的属性信息 由于networkD3 是java语言开发，所以索引是从0开始，而R语言索引是从1开始，所以构建data.frame的时候需要减1 ","date":"2021-11-22","objectID":"/posts/network-analysis-with-r/:0:4","tags":["NETWORK","RNAseq","表达量","可视化","网络图构建"],"title":"Network Analysis with R","uri":"/posts/network-analysis-with-r/"},{"categories":["RNAseq","DataViz"],"content":"g’graph画网路图 layout： 定义图的布局，布局定义了节点在图形中的位置，它是将数据的关系结构转换为图形中每个节点的x值和y值的过程，不同的布局算法对图的展示差异很大，因此，为自己的数据找到一个合适的布局很重要。ggraph可以访问igraph中可用的所有布局功能，而且还提供了大量自己的选择，总共提供了20多种不同的布局可供选择。没有所谓的“最佳布局算法”，因为算法已经针对不同的场景进行了优化。常用的布局有蜂巢图hive plots、树图treemaps和圆堆图circle packing等，如下： c(\"layout_with_dh\", \"layout_with_drl\", \"layout_with_fr\", \"layout_with_gem\", \"layout_with_graphopt\", \"layout_with_kk\", \"layout_with_lgl\", \"layout_with_mds\", \"layout_with_sugiyama\", \"layout_as_bipartite\", \"layout_as_star\", \"layout_as_tree\") 参考： Ji, S., Pan, S., Cambria, E., Marttinen, P., \u0026 Yu, P. S. (2021). A Survey on Knowledge Graphs: Representation, Acquisition, and Applications. IEEE Transactions on Neural Networks and Learning Systems, 1–21. doi:10.1109/tnnls.2021.3070843 简写 算法名称 分类 备注 grid 网格布局算法 几何布局 circle 环形布局算法 几何布局 concentric 同心圆布局算法 几何布局 radial 辐射状布局算法 几何布局 avsdf 邻接点最小度优先算法（Adjacent Vertex with Smallest Degree First） 几何布局 dagre 有向无环图树布局算法（Directed Acyclic Graph and Trees） 层级布局 breadthfirst 广度优先布局算法 层级布局 elk Eclipse布局算法（Eclipse Layout Kernel） 层级布局 klay K层布局算法（K Lay） 层级布局 fcose 最快复合弹簧内置布局算法（Fast Compound Spring Embedder） 力导布局 cola 约束布局（Constraint-based Layout） 力导布局 cise 环形弹簧内置布局算法（Circular Spring Embedder） 力导布局 elk2 Eclipse布局算法（Eclipse Layout Kernel） 力导布局 euler 欧拉布局算法 力导布局 spread 扩展布局算法 力导布局 fruchterman Fruchterman-Reingold布局算法 力导布局 combo 混合布局算法 力导布局 mds 高维数据降维布局算法（Multi Dimensional Scaling） 其他布局算法 random 随机布局算法 其他布局 geom_edge_：边的格式 定义边的属性如geom_edge_link0直线，geom_edge_arc曲线，其他格式如下： c(\"geom_edge_arc\", \"geom_edge_arc0\", \"geom_edge_arc2\", \"geom_edge_density\", \"geom_edge_diagonal\", \"geom_edge_diagonal0\", \"geom_edge_diagonal2\", \"geom_edge_elbow\", \"geom_edge_elbow0\", \"geom_edge_elbow2\", \"geom_edge_fan\", \"geom_edge_fan0\", \"geom_edge_fan2\", \"geom_edge_hive\", \"geom_edge_hive0\", \"geom_edge_hive2\", \"geom_edge_link\", \"geom_edge_link0\", \"geom_edge_link2\", \"geom_edge_loop\", \"geom_edge_loop0\") Edges：边的样式 定义边的样式，如edge_colour颜色，edge_width粗细 edge_colour (colour of the edge) edge_width (width of the edge) edge_linetype (linetype of the edge, defaults to “solid”) edge_alpha (opacity; a value between 0 and 1) arrow = arrow(length = unit(2, 'mm')) 设置边的长度和箭头 end_cap = circle(3, 'mm')) strat_cap和end_cap参数可用于在与终端节点绝对距离处开始和停止边的绘制 circle(), square(), ellipsis()和rectangle()用于表示边在两端的封顶方式 geom_node_：节点 节点是关系结构中连接的实体，某些节点几何图形对某些布局更有意义。geom_node_point_()绘制节点，geom_node_text_()绘制节点的描述信息 c(\"geom_node_arc_bar\", \"geom_node_circle\", \"geom_node_label\", \"geom_node_point\", \"geom_node_text\", \"geom_node_tile\", \"geom_node_treemap\") shape 定义点的形状如下： geom_node_point() 常用格式设置： alpha (opacity; a value between 0 and 1) colour (colour of shapes 0-20 and border colour for 21-25) fill (fill colour for shape 21-25) shape (node shape; a value between 0 and 25) size (size of node) stroke (size of node border) geom_node_text() 常用格式设置 label (attribute to be displayed as node label) colour (text colour) family (font to be used) size (font size) Scales：尺度 The scale_* functions are used to control aesthetics that are mapped within aes(). You do not necessarily need to set them, since ggraph can take care of it automatically. scale_fill_manual(values = got_palette) + scale_edge_width_continuous(range = c(0.2,3)) + scale_size_continuous(range = c(1,6)) scale_fill_brewer(palette = \"Dark2\")+ themes：主题 theme_graph()+ theme(legend.position = \"none\") theme(legend.position = \"bottom\") 采用ggraph 的 stress 布局 画整体网络图 While “stress” is the key layout algorithm in graphlayouts MDS是Multidimensional Scaling的简称，即为高维数据降维算法，其是一种力导算法高维数据下的稳定下布局的优化，避免数据超载而导致的整体的布局不稳定 p \u003c- ggraph(got_graphs,layout = \"stress\",bbox = 15)+ ##bbox越大，不同图层的排布宽度越大 geom_edge_link0(edge_colour= \"Gainsboro\")+ ##直线边的颜色可以调试，简单快速画图，建议点多于100使用 # geom_edge_link0(aes(width=value),edge_colour= \"Gainsboro\")+ ##直线边的粗细可以按value值设置，建议点少于100使用 # geom_edge_link2(aes(edge_colour = corr),edge_width = 0.5)+ ##直线边的颜色和粗细可以按corr值设置，建议点少于100使用，边越多运行越慢 # geom_edge_arc(aes(edge_colour = corr),edge_width = 0.5)+ ##曲线边的颜色和粗细可以按corr和value值设置，建议点少于100使用 geom_node_point(aes(filter = size \u003e= 2,fill=clu,","date":"2021-11-22","objectID":"/posts/network-analysis-with-r/:0:5","tags":["NETWORK","RNAseq","表达量","可视化","网络图构建"],"title":"Network Analysis with R","uri":"/posts/network-analysis-with-r/"},{"categories":["RNAseq","DataViz"],"content":"使用igraph从顶点的子集中提取一个连通的子图 同一份数据里会可能会出现多个网络图并行分布，这时候需要单独对不同的子图画图分析，igraph package 其实提供了decompose.graph 函数，可以控制min.vertices，配合clusters和V函数得到的最大csize的vertex sequence，再用delete.vertices从igraph class 中剔除这些vertex clusters(got_graphs) ##计算图表的连接组件 clusters(got_graphs)$csize ##计算图表的连接组件的size decompose.graph(got_graphs) ##创建单独的组件 big \u003c- order(clusters(got_graphs)$csize,decreasing=TRUE)[1] ##挑选size最大的子图 dg \u003c- decompose.graph(got_graphs)[[big]] ## 挑选size最大的子图创建单独的图表 采用ggraph对的stress布局对网络图中size最大的网络画子图画图 p \u003c- ggraph(dg,layout = \"stress\")+ ##由于已经筛选了节点最多的图形，所以不需要bbox参数排布 geom_edge_link0(edge_colour= \"Gainsboro\")+ #geom_edge_link0(aes(width=value),edge_colour= \"Gainsboro\")+ ##直线边 #geom_edge_link2(aes(edge_colour = corr),edge_width = 0.5)+ #geom_edge_arc(aes(edge_colour = corr),edge_width = 0.5)+ ##曲线边 geom_node_point(aes(fill=clu,size=size),shape = 21)+ geom_node_text(aes(filter = size \u003e= size1,label = gene_name),repel=F)+ scale_size(range=c(2,5))+ theme_graph(title_size = 40)+ theme(legend.position = \"none\") 采用ggraph 的 focus 布局 画size最大的网络图的子图，该布局只能画成分单一的网络图 Circular layouts are generally not advisable. Concentric circles, on the other hand, help to emphasize the position of certain nodes in the network. The graphlayouts package has two function to create concentric layouts, layout_with_focus() and layout_with_centrality(). The first one allows to focus the network on a specific node and arrange all other nodes in concentric circles (depending on the geodesic distance) around it. Below we focus on the character Ned Stark. p \u003c- ggraph(dg,layout = \"focus\",focus = 1)+ geom_edge_link0(edge_colour = \"Gainsboro\")+ #geom_edge_link0(aes(width=value),edge_colour= \"Gainsboro\")+ ##直线边 #geom_edge_link2(aes(edge_colour = corr),edge_width = 0.5)+ #geom_edge_arc(aes(edge_colour = corr),edge_width = 0.5)+ ##曲线边 geom_node_point(aes(fill = clu,size=size),shape = 21)+ geom_node_text(aes(filter = (name == name1 ),size = size,label = gene_name))+ coord_fixed()+ theme_graph()+ theme(legend.position = \"none\") 采用ggraph 的 centrality 布局 画成分最大的网络图的子图，该布局只能画成分单一的网络 “同心圆”形式的布局：layout_with_centrality（）。可以指定任何中心性索引（或数值向量），并创建一个同心布局，其中最中心的节点放在图形中心，最外围的节点放在最大的圆中。用于布局的数值属性由cent参数指定。 p \u003c- ggraph(dg,layout = \"centrality\",cent = graph.strength(dg))+ ##对size最大的点为中心做图，可以改为具体某基因 geom_edge_link0(edge_colour = \"Gainsboro\")+ #geom_edge_link0(aes(width=value),edge_colour= \"Gainsboro\")+ ##直线边 #geom_edge_link2(aes(edge_colour = corr),edge_width = 0.5)+ #geom_edge_arc(aes(edge_colour = corr),edge_width = 0.5)+ ##曲线边 geom_node_point(aes(fill=clu,size=size),shape = 21)+ geom_node_text(aes(filter = size \u003e= size1,size = size,label = gene_name))+ coord_fixed()+ theme_graph()+ theme(legend.position = \"none\") 采用ggraph 的 kk 布局 画成分最大的网络图的子图，该布局只能画成分单一的网络图 力导向算法 Kamada Kawai p \u003c- ggraph(dg,layout = \"kk\")+ geom_edge_link0(edge_colour= \"Gainsboro\")+ geom_node_point(aes(fill=clu,size=size),shape = 21)+ geom_node_text(aes(filter = size \u003e= size1,label = gene_name),repel=F)+ theme_graph(title_size = 40)+ theme(legend.position = \"none\") 3d网络图 networkD3包基于D3.JS(最流行的可视化库之一)构建，还可以和R中常见的网络可视化包例如network、igraph等连用，支持管道操作符%\u003e%(dplyr中常用)和ggplot2语法，是一个非常灵活的网络可视化包。networkD3最大的亮点，在于clickAction = clickJS这一句，可以设置自己的鼠标点击事件，比如节点放大，弹出对话框，点击节点显示节点描述，加入搜索框等等。networkD3包生成的结果将是一个html文件，即网页文件。 3d网络图参数简介： 力导向网络图 这种图采用物理上的弹簧模型，将节点之间想象成是用弹簧连接的，然后把这些用弹簧连接的节点扔到桌面上，让这些弹簧自己弹啊弹，弹啊弹，最后总能停下来，达到一个平衡状态。这个状态下的节点连接图，能力最小，线和线之间的交叉最小。这种方法的学名叫spring-embedder 或者 force-directed。 拖动中间的图里的任意节点，整个网络就会被拖动，并达到新的平衡位置。从图里，我们可以大致看出不同的群体，群体里的关系紧密，而不同群体之间的关系比较松散。群体分析也是网络数据可视化的一个主要目的。 p \u003c- forceNetwork(Links = linkData,Nodes = Nodes_f,Source = \"source\",Target = \"target\",Value = \"value\",NodeID = \"gene_name\",Group = \"group\") 桑基图 桑基图（Sankey diagram），即桑基能量分流图，也叫桑基能量平衡图。它是一种特定类型的流程图，右图中延伸的分支的宽度对应数据流量的大小。因1898年Matthew Henry Phineas Riall Sankey绘制的“蒸汽机的能源效率图”而闻名，此后便以其名字命名为“桑基图”。 p \u003c- sankeyNetwork(Links = linkData,Nodes = Nodes_f,Source = \"source\",Target = \"target\",Value = \"value\",NodeID = \"gene_name\",Group = \"group\") ","date":"2021-11-22","objectID":"/posts/network-analysis-with-r/:0:6","tags":["NETWORK","RNAseq","表达量","可视化","网络图构建"],"title":"Network Analysis with R","uri":"/posts/network-analysis-with-r/"},{"categories":["RNAseq"],"content":"基于Dfam数据库转座元件分析","date":"2021-11-18","objectID":"/posts/repeatmasker-dfam/","tags":["RNAseq","转座元件","Dfam"],"title":"转座元件分析","uri":"/posts/repeatmasker-dfam/"},{"categories":["RNAseq"],"content":"Dfam数据库的使用 The Dfam database is a collection of Repetitive DNA element sequence alignments, hidden Markov models (HMMs) and matches lists for complete Eukaryote genomes. ","date":"2021-11-18","objectID":"/posts/repeatmasker-dfam/:0:0","tags":["RNAseq","转座元件","Dfam"],"title":"转座元件分析","uri":"/posts/repeatmasker-dfam/"},{"categories":["RNAseq"],"content":"1. 概述 转座元件是一类能改变其自身在基因组当中的位置的DNA重复序列，它能够使得突变产生，也能“逆转”已有突变，它能改变生物细胞的遗传属性和基因组稳定性。1951年，美国冷泉港著名女性细胞遗传学家Barbara McClintock发表文章“Induction of Instability at Selected Loci in Maize”，首次在玉米种发现这类“跳跃基因”，这一研究成果使其在1983年荣获诺贝尔生理学或医学奖。 简单来说，转座元件可以分成两类：Class I和Class II。 Class I又被称为Retrotransposon，逆转录转座子，指那些通过“复制-粘贴”机制来实现其在基因组中“跳跃”的转座元件，这种类型的转座元件能不断增加其自身在基因组中的拷贝数。这类转座元件在跳跃的过程中，依赖其中一类元件——LINE1，长散在元件所编码的ORF1p和ORF2p。ORF1p行使RBP的功能，携带转座元件的RNA中间体进入细胞核，在ORF2p（含有一个EN，核酸内切酶和一个RT，逆转录酶）的帮助下，完成基因组的重组。Class II，也叫做DNA转座子，这种类型的转座子主要是通过“剪切-粘贴”的机制进行“跳跃”。不像Class I,它们的转座反应仅依赖部分元件编码的转座酶。在此分类基础上，根据各种元件的结构特征，转座元件还可以被细分为不同的family和subfamily。 Dfam是真核生物TE-centric数据库，这个数据库更正式地定义了转座元件，并且将共有序列一样的转座元件形成一个“集合”，利用隐马尔可夫模型（hidden Markov models）来进行多序列比对（multiple sequence alignments）。 RepeatMasker是最常用的TE序列工具，是当前研究在进行TE注释时的金标准，它以RepBase和Dfam两大数据库为支持。 ","date":"2021-11-18","objectID":"/posts/repeatmasker-dfam/:1:0","tags":["RNAseq","转座元件","Dfam"],"title":"转座元件分析","uri":"/posts/repeatmasker-dfam/"},{"categories":["RNAseq"],"content":"2. RepeatMasker的使用 RepeatMasker is a program that screens DNA sequences for interspersed repeats and low complexity DNA sequences. The output of the program is a detailed annotation of the repeats that are present in the query sequence as well as a modified version of the query sequence in which all the annotated repeats have been masked (default: replaced by Ns). On average, almost 50% of a human genomic DNA sequence currently will be masked by the program. Sequence comparisons in RepeatMasker are performed by the program cross_match, an efficient implementation of the Smith-Waterman-Gotoh algorithm developed by Phil Green. ","date":"2021-11-18","objectID":"/posts/repeatmasker-dfam/:2:0","tags":["RNAseq","转座元件","Dfam"],"title":"转座元件分析","uri":"/posts/repeatmasker-dfam/"},{"categories":["RNAseq"],"content":"2.1 使用命令 RepeatMasker -pa 4 -species human -poly -html -gff -dir repeat1 gene_t.fa #gene_t.fa 需要提供作为输入的fa格式的序列文件 #需要注意的地方 #-dir 指定的输出结果文件夹 #一定要通过 -species 指定物种，否则默认比对的是人类重复序列数据库 #如果使用本地的参考库，通过 -lib 指定，替代 -species # -poly，-html -gff等参数输出结果另外的形式（不必须参数） #-s、-q、-qq 等参数可控制序列比对的灵敏度，如果你的目标物种和参考物种不是很近，可能需要提升灵敏度 ","date":"2021-11-18","objectID":"/posts/repeatmasker-dfam/:2:1","tags":["RNAseq","转座元件","Dfam"],"title":"转座元件分析","uri":"/posts/repeatmasker-dfam/"},{"categories":["RNAseq"],"content":"2.2 结果输出 图中红圈的三个文件分别是加了 -poly、-html 、-gff三个参数输出的结果，默认结果只有剩下四个。 *.tbl 本次RepeatMasker运行的结果报告，该文件默认生成，包含了基因组长度、GC含量、重复区长度以及重复区各类别基本统计信息等。其中，“bases masked”就是重复序列的总长度和在基因组中的占比，视物种而定。 *.cat 记录了输入的基因组序列和数据库中参考重复序列的比对详情，该文件默认生成。 会存在个别碱基的差异，其中“i”和“v”分别代表了碱基转换（transitions）和颠换（transversions），“-”表示该位点存在碱基插入/删除。 *.out和*.out.html 这两个文件中的信息是一致的，将基因组中预测得到的重复序列和参考序列相比的碱基替换频率、插入/删除率，以及重复序列的位置、结构、类型等信息展示出。其中，.out（默认生成）是纯文本样式，.out.html（-html参数生成）以网页列表展示。 *.out.gff 将*.out中的内容，整理为标准gff文件的结构类型（-gff参数生成）。主要包含重复序列的位置、结构等信息。 *.polyout 命令行中通过-poly参数，可额外将预测结果*.out中的微卫星注释识别出来，单独整理为一张表，文件结构同*.out。 *.masked 相较于原始输入fasta文件中的序列，..masked中将其中重复序列部分屏蔽为了N碱基，该文件默认生成。 注意区分，这里有的N碱基是屏蔽的重复序列，而有的N碱基则是原来这个基因组fasta文件中就有的（一般为gap）。 那么这个文件有什么作用呢？可以将该文件作为后续基因序列预测的输入文件。这样，基因预测时就不会再考虑这些重复序列区域（因为这些区域的碱基已经屏蔽为了N碱基，不会被识别），缩小了基因组范围，大大减少了资源消耗，提升准确度。 参考资料： Repeatmasker The Dfam community resource of transposable element families, sequence models, and genome annotations ","date":"2021-11-18","objectID":"/posts/repeatmasker-dfam/:2:2","tags":["RNAseq","转座元件","Dfam"],"title":"转座元件分析","uri":"/posts/repeatmasker-dfam/"},{"categories":["RNAseq"],"content":"RNAseq降维分析方法比较","date":"2021-10-26","objectID":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/","tags":["RNAseq","MDS","scRNA"],"title":"降维分析方法比较","uri":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/"},{"categories":["RNAseq"],"content":"转录组对定量结果降维分析比较 ","date":"2021-10-26","objectID":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/:0:0","tags":["RNAseq","MDS","scRNA"],"title":"降维分析方法比较","uri":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/"},{"categories":["RNAseq"],"content":"概述 ","date":"2021-10-26","objectID":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/:1:0","tags":["RNAseq","MDS","scRNA"],"title":"降维分析方法比较","uri":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/"},{"categories":["RNAseq"],"content":"MDS原理 MDS算法解决的问题是:当n个对象之间的相似性给定，确定这些对象在低维空间中的表示，并使其尽可能与原先的相似性大致匹配。高维空间中每一个点代表一个对象，因此点与点之间的距离和对象之间的相似度高度相关。可以这么理解，两个相似的对象在高维空间中由两个距离相近的点所表示，两个不相似的对象在高维空间中由两个距离比较远的点表示。 MDS与PCA非常相似，都是一种降维的方法。根据样本是否可以计量，MDS分为度量MDS（Metric Multidimensional scaling）和非度量MDS（Non-metric Multidimensional scaling）。）。对于Metric MDS，这个方法以样本间相似度作为实际输入，需要样本是等距（interval）比例（ratio）尺度，优点是精确，可以根据多个准则评估样本间差异，缺点是计算成本高，耗时。对于很多应用问题，样本不费可计量，需要使用NonMetric MDS，这种方法接受样本的顺序尺度作为输入，并以此自动计算相似值。样本尺度要求是顺序的（ordinal），较简便，直观，从非计量的样本导出计量的分析结果，应用范围更广，但没法知道评估准则，效果较差。 根据是否使用欧氏距离，其中MDS又分为classical MDS和no-classical MDS。 Classical MDS(经典多维尺度变换):经典多维尺度变换的距离标准采用欧式距离。 No-classical MDS(非经典多维度尺度变换):非经典多维度尺度变换的距离标准采用非欧式距离。 MDS即将高维坐标中的点投影到低维空间中，保持点彼此之间的相似性尽可能不变。MDS算法可以缓解在高维情况下出现的样本数据稀疏和距离计算困难等问题，与主成分分析法和线性降维分析法都不同的是，MDS的目标不是保留数据的最大可分性，而是更加关注与高维数据内部的特征。 ","date":"2021-10-26","objectID":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/:1:1","tags":["RNAseq","MDS","scRNA"],"title":"降维分析方法比较","uri":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/"},{"categories":["RNAseq"],"content":"MDS的优缺点 优点： (1) 不需要先验知识，计算简单 (2) 保留了数据在原始空间的相对关系，可视化效果比较好 缺点: (1) 如果用户对观测对象有一定的先验知识，掌握了数据的一些特征，却无法通过参数化等方法对处理过程进行干预，可能会得不到预期的效果 (2) 认为各个维度对目标的贡献相同，然而事实上有一些维度对目标的影响很小，有一些对目标是影响比较大。 ","date":"2021-10-26","objectID":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/:1:2","tags":["RNAseq","MDS","scRNA"],"title":"降维分析方法比较","uri":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/"},{"categories":["RNAseq"],"content":"MDS与PCA比较 PCA采用降维的思想，将组成复杂的数据信息（样本中包含大量物种信息，没有已知的坐标轴可以解释分布）进行降维排序，寻找能最大程度反应规律的坐标系。然而PCA分析存在着自身的局限性，PCA分析需基于线性模型（linear model）开展，所谓线性模型就是假设物种丰度伴随着环境变量的变化做出线性变化的响应，这种模型使用范围较为有限。 PCA通过对N个数据点本身进行特征分析来选择影响维度，而MDS通过对成对距离矩阵的数据点进行特征分析来选择影响维度。本质上，PCA 更侧重于维度本身，并尽可能地拟合方差，而 MDS 更侧重于缩放对象之间的关系。 PCA可能被称为最简单MDS的算法，如果使用欧几里得距离，则PCA产生与经典MDS完全相同的结果（如下图）。 对同一表达量数据进行MDS与PCA进行降维： ​ MDS（衡量距离使用欧氏距离） ​ PCA: 使用R函数：prcomp 开发的脚步及分析例子比较 /mnt/ilustre/users/meng.luo/Pipeline/Pipeline/script/MDS #程序执行： Rscript MDS.R -e gene_tpm.txt -g group.txt 参数说明： -e：基因表达矩阵 -g：分组文件 -m：距离算法模型选择；默认为欧几里得 -n：是否进行NMDS（非度量MDS）分析；默认为FALSE -k：维度数；默认为样本个数减1，可以自定义但必须小于等于样本数减1 -o：输出路径；默认为./ 三.结果展示： gene_MDS.pdf: 使用MDS方法时，样本在二维坐标的分布图。 gene_MDS.xls：使用MDS方法时，样本在不同维度中的信息。 gene_NMDS : 为使用NMDS方法得出的结果; 注意：在xls文件中NMDS会多一列stress的信息；Stress值是反映模型合适程度的指标，NMDS会多次打乱数据计算Stress值，直到找到最合适的模型，也就是最低的Stress值；理想状况下，Stress值为0，一般Stress值低于0.1较为合理。 参考资料： Multidimensional scaling MDS 多维尺度变换(multidimensional scaling, MDS) ","date":"2021-10-26","objectID":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/:1:3","tags":["RNAseq","MDS","scRNA"],"title":"降维分析方法比较","uri":"/posts/dimensionality-reduction-methods-for-rna-seq-analysis/"},{"categories":["RNAseq"],"content":"RNAseq定量软件的简介","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"一些RNAseq定量软件的简介 RNAseq定量软件的简介 kallisto,salmon,rsem,stringtie,featurecount,htseq软件的定量原理简介 kallisto,salmon,rsem,stringtie,featurecount,htseq定量结果的差异分析比较 ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:0:0","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"RNAseq定量软件的简介 基因水平(gene-level)：常见的软件包括HTSeq-count，featureCounts，BEDTools, Qualimap, Rsubread, GenomicRanges等(Anders, S.,2012) 这些软件在处理测序中得到的multimapping reads时方式不同，例如HTSeq-count就直接当它们不存在，而Qualimpa则是一人一份，平均分配,featureCounts是参数决定要不要multimapping reads 转录本水平(transcript-level)：常用工具为RSEM，Cufflinks，StringTie，eXpress，kallisto，silfish，salmon等(Tuimala, J. , 2014.) 这些软件要处理的难题是转录本亚型（isoforms）之间通常是有重叠的，当二代测序读长低于转录本长度时，如何进行区分？这些工具大多采用的都是expectation maximization（EM）算法 上述软件中RSEM，Cufflinks，StringTie，eXpress都是alignment-based，目前许多alignment-free软件，如kallisto, silfish, salmon，能够省去比对这一步，直接得到read count，在运行效率上更高。不过最近一篇文献(Sahraeian, S. M. E,2017)指出这类方法在估计丰度时存在样本特异性和读长偏差 [1] Sahraeian, S. M. E., Mohiyuddin, M., Sebra, R., Tilgner, H., Afshar, P. T., Au, K. F., … Lam, H. Y. K. (2017). Gaining comprehensive biological insight into the transcriptome by performing a broad-spectrum RNA-seq analysis. Nature Communications, 8(1). doi:10.1038/s41467-017-00050-4 [2] Anders, S., Reyes, A., \u0026 Huber, W. (2012). Detecting differential usage of exons from RNA-Seq data. Nature Precedings. doi:10.1038/npre.2012.6837.2 [3] Tuimala, J. . (2014). Rna-seq data analysis: a practical approach. Crc Press. ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:1:0","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"kallisto,salmon,rsem,stringtie,featurecount,htseq软件的定量原理简介 ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:2:0","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"kallisto定量软件简介 Kallisto官网 https://pachterlab.github.io/kallisto/starting kallisto 简介 kallisto 是2016年Nature Biotechnology 杂志发布的一款无须比对的转录本定量工具（Nicolas L Bray，2016） 采用了名为pseudo-alignment的算法，pseudo-alignment 算法不关系reads具体的比对位置，而是通过reads的kmer特征来判断其属于哪一条转录本 kallisto 软件的优势： 极大地降低了运行时间 算法上更新——绕过传统方法中序列比对（alignment）的步骤直接做量化分析，软件重于确定一个 read 属于哪一个基因，而不关心这个 read 在基因上的具体位置 [1] Nicolas L Bray, Harold Pimentel, Páll Melsted and Lior Pachter, Near-optimal probabilistic RNA-seq quantification, Nature Biotechnology 34, 525–527 (2016), doi:10.1038/nbt.3519 kallisto 比对原理 第一步：建立索引 k-mers默认是31，k-mers越小会越敏感。图上的每一个node都代表一个k-mer。 如上图有三条overlapping的 transcripts，红、蓝、绿各代表一条。 k-compatibility class：transcripts包含node的k-mers ，那么称transcripts为该node的一个k-comptibility class。如图上最左边的node有三个k-compatibility class，因为三条transcripts都包含该node代表的k-mer。三个最上面的node只有两个k-compatibility class，因为只有蓝和红两条transcripts包含node 代表的k-mer。 contig:连续的有相同k-compatibility class的node组成。如上图中最左边的三个node构成一个contig，最上面的node也构成一个contig。 index会建立一个hash table\u003cKmerEntry,KmerHash\u003e KmerEntry里包含k-mer映射到contig的信息，KmerHash kmer的hash值。 第二步：比对 上图黑色的代表一条read。比对的时候read也会被切成一个个的k-mer。黑色的node代表比对上的。 然后找出每个比对上的node的k-compatibility class，然后取这些k-compatibility class的交集，就得到read的k-compatibility class，如果是paired-end，那就沿着一条参考序列取k-compatibility class。 冗余信息。最左段的3个node有相同的k-compatibility class，文章中又把这些相同的node称为k-equivalence class。在比对的过程中我们可以跳过这些k-equivalence class。这些信息已经存储在contig里。同一个contig里的node都有相似的k-compatibility class。为了确保跳过的是k-equivalence class,kallisto会检查跳过的最后一个node是否符合预期。正因为省掉这些冗余的node，比对速度快。如上图只需要取三个node的k-compatibility class的交集就能确定read的k-compatibility。 确定好要比对的node后使用expectation_maximization (EM) 的算法来定量转录本 kallisto 比对和定量结果分析 kallisto比对分析的准确度： Kallisto与 Bowtie2比对分析中，66.22%reads比对到了相同转录本上 对于比对到不同转录本上的reads（ambiguous reads），Bowtie2的平均比对得分 8.94，Kallisto是4.86 由于Kallisto读取的碱基少总比对率 90.8%，而Bowtie2的比对率为86.5% Kallisto的比对运行时间短 kallisto定量分析的优势： Kallisto采用EM算法，Cufflinks没有使用EM算法导致其multi-map遍布整个基因组 Kallisto的伪对齐保留了reads的k-mers信息，Sailfish将reads切割成k-mers，导致信息丢失 Kallisto的定量运行时间短 median relative difference为不同定量软件的readcount值与GEUVADIS数据中心提供的20个模型的所有转录本的（RSEM）readcount之间的绝对差异值除以两者的平均值的均值 kallisto 的使用方法 对转录本序列建立索引 kallisto index -k 31 -i hg19.idx hg19.refMrna.fa -k参数指定kmer的长度 -i参数指定输出的索引的名字 定量 kallisto quant -i hg19.idx -o out_dir -t 20 \\ R1.fastq.gz R2.fastq.gz -i参数指定转录本的索引文件 -o参数指定输出结果的目录 -t参数指定线程数 对于单端数据而言，必须指定fragment长度的均值和方差，分别对应-l和-s参数 添加参数–genomebam –gtf ${gtf_file}定量完成后会在结果目录多生成一个bam文件，可以用igv查看 kallisto 的输出文件 在输出目录，会生成以下3个文件 run_info.json 文件为JSON格式，保存了运行的命令和参数。 前缀为abundance 的文件，保存了转录本的定量信息 后缀为h5为HDF5格式的文件，当转录本数量较多时，相比纯文本，这种格式的文件大小会小很多 对于HDF5的文件，可以采用如下命令转换为tsv格式的文件 kallisto h5dump -o out_dir abundance.h5 abundance.tsv中包含转录本名称，长度,count值和tpm,格式如下： kallisto 的总结 kallisto软件本身的特点就是对设备要求不高且速度快，但是其定量结果的准确性比较有争议 kallisto进行定量时，有专门的软件sleuth进行差异表达分析（Pimentel, H.2017） [1] Pimentel, H., Bray, N. L., Puente, S., Melsted, P., \u0026 Pachter, L. (2017). Differential analysis of RNA-seq incorporating quantification uncertainty. Nature Methods, 14(7), 687–690. doi:10.1038/nmeth.4324 ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:2:1","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"salmon定量软件简介 salmon官网 https://combine-lab.github.io/salmon/ salmon简介 Salmon 是2017年Nature Methods发表的一篇无需比对的定量软件（Patro, R 2017） 将新的双相并行推理算法和功能丰富的偏差模型与超快速读长映射过程结合在一起 它与Kallisto(熊神星)和Sailfish(旗鱼)类似，不基于比对而直接对基因进行定量的工具，适用于转录组、宏基因组等的分析 salmon优势是： 定量时考虑到不同样品中基因长度的改变（比如不同isoform的使用） 速度快、需要的计算资源和存储资源小 敏感性高，不会丢弃匹配到多个基因同源区域的reads 可以直接校正GC-bias 自动判断文库类型 [1] Patro, R., Duggal, G., Love, M. I., Irizarry, R. A., \u0026 Kingsford, C. (2017). Salmon provides fast and bias-aware quantification of transcript expression. Nature Methods. salmon原理 salmon quasi-mapping的比对原理是基于k-mers+Suffix Array 第一步：建立索引 如果有多个transcript，那将多个transcripts连起来用$分割 基于k-mer建立hash table 第二步：比对 Suffix Array(T) ：建立Transcriptome的后缀数组 SA interval ：就是该kmer所对应的后缀数组区间。 计算MMP（Maximum Mappable Prefix）最大映射前缀。就是图中蓝色虚线圈出来的部分。 通过LCP(longest common prefix)最长公共前缀。如图中红色圈出来的部分 可能会出现LCP(T[SA[b’] ] ,T[SA[e’−1] ] )) |\u003e|MMPi|的情况，就是LCP比MMP长。也就是说，在几条transcript里，都是ATTGACTA，而read是ATTGAGTA。则认为这不是虚假的匹配，而是测序过程中出现了错误。 NIP(next informative position)下一个信息位置，与kallisto相似跳过相同k-mer 最后会生成一个查询的集合，根据kallisto获得的灵感，对每一个命中的区间取交集。但这里与kallisto不同的是，这里取交集的时候分正向反向，kallisto是不区分的 Salmon的定量优势 准确度指标中所述的平均绝对相对差异（mean absolute relative differences，MARD）Salmon和Kallisto产生的MARD相似，尽管Salmon的MARD分布比Kallisto的小得多（Mann-Whitney U检验，p = 0.00017）。两种方法都优于eXpress（Mann-Whitney U检验，p = 3.39781×10-8）。 在典型的FDR值下，使用Salmon的估计找到真正的差异转录本的敏感性比使用Kallisto的估计要高53％–450％，比使用eXpress的Polyester模拟数据的估计要高210％-250％ Salmon的结果可以由R包转换后直接用edgeR/DESeq2等进行counts值的下游分析 Salmon的使用方法 构建索引 salmon index -t all_transcripts.fa -i all_transcripts_index 定量分析 salmon quant –gcBias -l A -1 RASshCON.R1.fastq.gz -2 RASshCON.R2.fastq.gz -i all_transcripts_index -g all_transcripts.gtf -o RASshCON.count -p 10 –gcBias: 校正测序片段GC含量 –seqBias：矫正测序偏差 -l: A自动判断文库类型 -g 提供转录本对应gene的信息，如果提供，则输出quant.sf and quant.genes.sf 两份结果 高级参数介绍 –writeMappings 将mapping结果以SAM格式输出 –validateMappings 启用选择性比对到转录本。能够提高比对的灵敏度和特异性从而提高了定量的准确度。 –mimicBT2 和 –mimicStrictBT2 让比对模仿一些 Bowtie2 行为。 –recoverOrphans 这个参数应与 –validateMappings 一起用。如果只有一端 reads 能比对或者两端 reads 比对不在同一个转录本，Salmon 会在比对上位置的上下游寻找另一端 reads 的比对。 –hardFilter 这个参数仅在 –validateMappings 模式使用，关闭软过滤(soft filter)。 –allowDovetail 默认丢弃“燕尾比对”(Dovetailing mapping)，开启这参数后不丢弃。“燕尾比对”见下面 Bowtie 的示意。 -p/–threads 线程数，默认会使用所有线程，想要用少些线程就设置。 –incompatPrior 与文库类型(library type)不兼容的比对先验概率。Salmon 默认设置了一个非常小但非0数值，如果一个插入片段(fragment)的唯一比对是这种非兼容比对，Salmon 会把这个比对计数。如果希望不计入，将这个参数设置数值 0.0 即可。 –minScoreFraction 最低比对得分限制，低于此比对被丢弃。 –rangeFactorizationBins 提高对“困难”转录本的定量准度。配合比对模式的 –useErrorModel 参数或者 fastq 模式的 –validateMappings 参数使用。 –seqBias 从输入数据学习然后矫正测序偏差。 –gcBias 进行 GC 偏差矫正。建议根据质控的 GC 偏差情况设置。 -g/–geneMap 提供基因注释文件 Salmon 就额外生成 quant.genes.sf 文件给出基因的定量 salmon输出结果 quant.sf文件，其记录了每个转录本的count数以及对应的TPM值 ambig_info.tsv文件可以看每个转录本对应的Unique and ambiguous count meta_info.json 参与计算的reads的信息如mapping上的总reads数 name:转录本id length:转录本长度 effectivelength:考虑了基因长度分布和序列特异性和 GC片段偏差 tpm:每千个碱基的转录每百万映射读取的Transcripts numreads: readcount值 salmon 的总结 salmon 和 kallisto 都是不基于比对而直接对基因进行定量的工具 salmon 相比 kallisto，具有丰富的偏差模型可以矫正测序GC-bias和低质量reads的影响，有丰富的参数控制，参数解释说明见网站（https://salmon.readthedocs.io/en/latest/salmon.html） kallisto官方推荐的适用基因组是小麦，建议小麦使用kallisto ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:2:2","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"RSEM(RNASeq by Expectation Maximization)定量软件简介 RSEM官网 http://deweylab.biostat.wisc.edu/rsem/ RSEM简介 2011年问世的老牌比对/定量/差异分析软件（Li, B 2011） trinity官方推荐的转录本定量软件 rsem的主要参数： prepare-reference 构建转录本索引 calculate-expression 比对定量（可以输入bam也可以输入reads） Differential Expression Analysis using EBSeq 差异分析 3.1 generate-data-matrix 构建数据矩阵 3.2 run-ebseq 调用EBseq进行检验 3.3 control_fdr 控制FDR(错误发现率)来挑选差异基因 特点 EM算法准确处理ambiguous reads 不依赖参考基因组文件 Li, B., \u0026 Dewey, C. N. (2011). RSEM: accurate transcript quantification from RNA-Seq data with or without a reference genome. BMC Bioinformatics, 12(1), 323. doi:10.1186/1471-2105-12-323 RSEM采用转录本水平的比对 1 QNAME 序列的名字（Reads id）2 flag 标记（81=1+16+64）3 RNAME 参考序列染色体的名字4 POS 在参考序列上的位置（染色体上的位置）5 MAPQ mapping qulity 越高则位点特异性越好 6 CIGAR 代表比对结果的CIGAR字符串7 RNEXT 双末端测序中另一个reads比对的参考序列的名称，如果没有则用 “ * ” 表示，如果和前一个reads比对到同一个参考序列则用“ = ”表示 8 PNEXT 双末端测序中另一个reads比对到参考序列上的位置，如果没有则用0表示 9 TLEN 估计出的query模板序列的长度，当mate序列位于本序列上游时该值为负值。Template的长度，最左边得为正，最右边的为负，中间的不用定义正负，不分区段（single-segment)的比对上，或者不可用时，此处为0；10 SEQ read的序列;序列片段的序列信息 11 QUAL ASCII码格式的序列质量;序列的质量信息 12 可选的字段（field） RSEM的比对定量优势 RSEM对于基因组水平的比对的优势： 可变剪接和多聚腺苷酸化（ polyA）干扰基因组水平的比对 对于没有基因组的物种，转录本水平的比对是一种方法 转录本水平的比对参与的碱基少，所以快 综合考虑了测序方式（PE/SE）,测序片段长度分布和reads质量值的影响 RSEM的定量优势： RSEM采用EM算法模型，相对于只计算比对到单一位置reads的Alexa-seq算法，似然函数更适合处理那些ambiguous reads 95%可信区间算法(CI)和后验均值算法(PME)以及最大似然法算法(ML)被开发应用于定量基因（转录本） RSEM调用bowtie根据reads的具体比对情况来定量reads,不是仅判断reads的比较率高低，比如rsem在默认情况下只允许reads起始25bp有2个错配 RSEM的结果可以通过probabilistically-weighted可视化reads的深度 RSEM原理 1.调用bowtie寻找每个read的所有比对情况 2.EM算法找到抽取样本中θ的最大可能性（Maximum likelihood） 3.根据θ的值计算所有reads的表达量情况 RSEM的EM算法： RSEM数学模型由n个随机变量控制 Gn/Fn/Sn/On分别代表转录本来源/长度/起始位置和方向 对于PE data,变量为L1n/L2n和Q1n/Q2n和R1n/R2n,分别代表read长度/质量分数/序列 对于SE数据，L2n,Q2n和R2n是不考虑的 这个模型的主要参数是由θ给出，它代表一个片段来自每个转录本的先验概率 先验概率：事情还没有发生，要求这件事情发生的可能性大小 最大似然法：当从模型总体随机抽取n组样本观测值后，最合理的参数估计量应该使得从中抽取该n组样品观测值的概率最大 RSEM结果评估 错误率：采用MPE/EF/FP得分来估计不同软件的定量结果和ensemble提供的定量结果之间的差异度 Cufflinks在处理短转录本序列（小于280bp）时表达量和ensemble结果比相比，异常高，不适易用于定量短转录本 RSEM和IsoEM都采用EM算法，结果相似，RSEM优化了poly(A) 的处理和CI/PME算法矫正，所以结果更准一些 AB双端测序 CD单端测序 AC转录本定量 BD基因定量 x轴：错误率阈值 y轴：大于错误阈值的转录本/gene的比例 上部 是reads的实际丰度分布 底部是比对到基因组唯一位置的reads的丰度分布 Rsem比对定量内存和时间占用情况 RSEM的使用方法 1.构建索引 rsem-prepare-reference –gtf genome.gtf genome.fa reference_name -p 8 –gtf genome.gtf：输入基因组GTF注释文件 genome.fa：基因组文件 reference_name：索引名称 -p：线程数 2.定量 STAR/bowtie—RSEM reads—RSEM rsem-calculate-expression RASshETV4_2.clean.1.fastq.gz RASshETV4_2.clean.2.fastq.gz all_transcripts RASshETV4_2 –paired-end –bowtie2 -p 8 –paired-end：表示输入的数据为双端测序数据 -no-bam-output：不输出BAM文件 –alignments：输入文件为BAM文件 -p：线程数 RSEM输出结果 转录本定量的bam 转录本/gene的定量结果 isoforms.results中包含了转录本ID，基因ID，转录本长度，有效长度，expected_count，TPM，FPKM和IsoPct（该转录本表达量占基因总表达量的百分比） genes.results中的内容与之类似，只是少了IsoPct 基因标准化常用方法 RPKM（Reads Per Kilobase Million）：每百万reads中来自于某基因每千碱基长度的reads数 FPKM（Fragments Per Kilobase Million）：每百万 fragments 中来自某一基因每千碱基长度的 fragments 数目 TPM（Transcripts Per Kilobase of exon model per Million mapped reads ）每千个碱基的转录每百万映射读取的Transcripts nr：mapping到目标基因上的read数（readcount值）； Lr：目标基因的外显子长度的总和（转录本长度） 特点：可以用于同一物种不同组织间的比较，因为Sum(TMPs)的值总是唯一的 RSEM总结 RSEM是准确转录本定量的首选 转录本比对定量和基因比对定量的突出优缺点： 优点：可变剪接和多聚腺苷酸化（ polyA）干扰基因组水平的比对 缺点：转录本相对于基因长度短，导致ambiguous reads多，干扰准确性（Charlotte，2015） [1] Charlotte, Soneson, Michael, I, Love, \u0026 Mark, et al. (2015). Differential analyses for rna-seq: transcript-level estimates improve gene-level inferences. F1000research. ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:2:3","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"StringTie定量软件简介 stringtie官网 https://ccb.jhu.edu/software/stringtie/index.shtml stringtie简介 Stringtie应用了起源于最优化理论的网络流算法与从头组装策略一起来将这些短读段组装成转录本（cufflinks的升级版）（Pertea, M. 2015） 作用： 转录本组装/定量 Pertea, M., Pertea, G. M., Antonescu, C. M., Chang, T.-C., Mendell, J. T., \u0026 Salzberg, S. L. (2015). StringTie enables improved reconstruction of a transcriptome from RNA-seq reads. Nature Biotechnology, 33(3), 290–295. doi:10.1038/nbt.3122 StringTie原理和优势 人类基因组中90%的多外显子蛋白编码基因和30%的ncRNA都具有可变剪切体 其他组装软件有专注于转录本确定的Trinity、专注于表达定量的RSEM以及二者兼顾的Cufflink等 cufflinks用的是overlap graph，该模型中nodes代表fragment，如果两个fragment存在overlap并存在兼容的剪切模式，则对应的node连接起来。他利用吝啬法利用read来产生最少的转录本，尽管效果还行，但是异构体过多时，效果会变差，还有就是它没有考虑到转录本的丰度并且对于某些isoform来说该方法没有办法组装 Stringtie通过使用genome指导的组装的方法与从头组装的概念结合（String+SR）的新方法来改善转录组组装，利用了read 和super read 两种数据 stringtie采用了组装转录本和估计表达量同步进行的方法，这不同于cufflinks的先组装后定量的策略 首先，stringtie将read聚成cluster，然后采用了splice graph，其中node代表外显子或外显子的一部分path，将graph中可能的剪切现象都连起来，最终对每个转录本通过创建一个网络流的方法，利用最大流算法（maximum flow algorithm）估计转录本的表达量 与其它组装软件相比，stringtie具有很高的准确性和新型isoform的发现能力，其优势在于使用了网络流算法，同时stringtie也支持将read从头组装成更长的片段，这进一步提高了其组装的正确性 其另一个优势在于它的最优化策略，它平衡了每次组装中每条转录本的覆盖度，这样可以对组装算法产生一定的限制，因为在组装基因组时，覆盖度是很重要的一个参数因为它需要被用来限制算法，否则组装器可能将重复的片段错误地堆叠到一起，相似地转录组装也是如此，在isoform中的每一个外显子需要有相似的覆盖度，如果忽略这个参数可能会产生一些保守但是错误的转录本，其中含有大量剪切位点的基因组装起来尤其困难 相对其他转绿本组装软件比如Cufflinks，IsoLasso，Scripture，Traph等，StringTie的敏感性和阳性检测率往往更准确，更加完整，同时对于基因表水平的评估也更为准确。 举例，对于人血液中90百万的read数据，它成功的组装出10990个正确的转录本，而cufflinks（排第二）只有区区7187个，相对而言有53%的提升。对于模拟数据，组装出7559相对cufflinks 6310 有20%的提升。另外在处理同一批数据的时候，StringTie相对其他软件要快的多 在表达定量方面，评估了真实表达值和各个软件估计表达值的情况，cufflinks 相似性最高，但是StringTie 效果也可以，可以说定量准确水平旗鼓相当 定量时间复杂度和空间复杂度上，StringTie处理模拟数据是耗时31分钟，而cufflinks 用时81分钟，在真实数据上，耗时在35-76分钟，速度大概是其他软件的3倍左右。在内存使用方面，处理真实数据时，大约利用了1.6~12g，cufflinks等软件利用了6.4~26.6g StingTie定量方法 stringtie -p 10 -G all_transcripts.gtf -o output.gtf -b RASshCON -e RASshCON.bam -G参数指定参考基因组的gtf文件 -o指定输出的文件，格式也为gtf -b指定ballgown的输出结果目录，这个参数是为了方便下游进行ballgown差异分析 -e参数要求软件只输出已知转录本的定量结果 StingTie输出文件 stringtie的定量结果输出在一个gtf格式的文件中，如下： seqname:该转录本所在的染色体号，contig或scaffold; source:GTF文件来源； feature:特征类型，例：外显子，转录本，mRNA和5’UTR； start:起始位置； end:终止位置； score: 组装转录本的可信度打分； strand:转录本所在的正负链信息； frame:CDS特征，StringTie不使用该信息，所以其结果用”.”表示； attributes:该特征的属性，包括基因id，转录本id，外显子个数，read coverage，FPKM和TPM等 官网提供了计算count值的脚本：prepDE.py StingTie总结 优点：genome组装准确性远超Cufflinks等常用软件 缺点：定量结果不直接提供count值 ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:2:4","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"HTSeq (high-throughput sequencing)定量软件简介 HTSeq官网 https://htseq.readthedocs.io/en/master/count.html HTSeq简介 特征：采用python语言开发的基因定量软件（Simon, A, 2015） HTSeq是转录组定量分析的软件，其输入文件必须有bam（sorted）和GTF文件。 一般情况下HTSeq得到的Counts结果会用于下一步不同样品间的基因表达量差异分析，而不是一个样品内部基因的表达量比较。因此，HTSeq设置了-a参数的默认值10，来忽略掉比对到多个位置的reads信息，其结果有利于后续的差异分析。 输入的GTF文件中不能包含可变剪接信息，否则HTSeq会认为每个可变剪接都是单独的基因，导致能比对到多个可变剪接转录本上的reads的计算结果是ambiguous，从而不能计算到基因的count中。即使设置-i参数的值为transcript_id，其结果一样是不准确的，只是得到transcripts的表达量。 [1] Simon, A. , Theodor, P. P. , \u0026 Wolfgang, H. . (2015). Htseq—a python framework to work with high-throughput sequencing data. Bioinformatics(2), 166-9. HTSeq原理 由于序列读长的限制和基因组的同源性，一条reads可能比对到多个基因上，而且基因之间也存在overlap, 在对这些特殊情况进行处理时，htseq-count内置了以下3种模式 union interp-strict interp-nonempty 在BAM文件，包含了比对上的reads和没有比对上的reads, 只有比对上的reads 会用来计数，htseq-count默认会根据mapping的质量值对BAM文件进行过滤，默认值为10, 意味着只有mapping quality \u003e 10的reads才会用来计数，当然可以通过-a参数来修改这个阈值。 能够明确reads属于一个featurer时，比如示意图种的第一种情况，reads完全是gene_A的一个片段，该feature的计数就加1；能明确reads不属于一个feature时，称之为no_feature, 比如示意图种的第二种情况，reads的一部分比对上了gene_A, 在interp_strict模式下，判定该reads不属于gene_A, 就是no_feature。 当不明确一条reads是否属于某个feature时，通常是由于reads在两个gene的overlap区，比如示意图中的第六和第七种情况，这样的reads被标记为ambigous。 当一条reads比对上了两个feature时，会被标记为alignment_not_unique。 在统计属于某个基因的reads数时，需要重点关注对 ambiguous 和 alignment_not_unique 的reads的处理， 通过–nonunique参数来指定，取值有以下两种 none all 默认值为none时，这两种reads被忽略掉，不进行任何的计数；取值为all时，对应的所有feature的计数都会加1。 除了–mode和–nonunique两个参数外，还需要关注–stranded参数，这个参数指定文库的类型，默认值为yes, 代表文库为链特异性文库，no代表为非链特异性文库。对于非链特异性文库文库，在判断一条reads是否属于一个基因时，只需要关注比对位置，而链特异性文库还需要关注比对的正负链和基因的正负链是否一致，只有一致时，才会计数。 HTSeq定量方法 HTSeq是对有参考基因组的转录组测序数据进行表达量分析的，其输入文件必须有SAM/bam和GTF文件 hisat2比对软件得到的bam文件，sort by pos, 所以需要重新sort，命令如下： samtools sort -n yourfile.bam \u003e yourfile_name.bam 定量命令： python3 -m HTSeq.scripts.count -f bam -s no -t exon -i transcript_id -m intersection-nonempty RASshCON.sort.bam all_transcripts.gtf \u003e RASshCON.count -f | –format default: sam 设置输入文件的格式，该参数的值可以是sam或bam。 -r | –order default: name 设置sam或bam文件的排序方式，该参数的值可以是name或pos。 -s | –stranded default: yes 设置是否是链特异性测序。该参数的值可以是yes,no或reverse。 -a | –a default: 10 忽略比对质量低于此值的比对结果。在0.5.4版本以前该参数默认值是0。 -t | –type default: exon 程序会对该指定的feature（gtf/gff文件第三列）进行表达量计算，而gtf/gff文件中其它的feature都会被忽略。 -i | –idattr default: gene_id 设置feature ID是由gtf/gff文件第9列那个标签决定的；若gtf/gff文件多行具有相同的feature ID，则它们来自同一个feature，程序会计算这些features的表达量之和赋给相应的feature ID。 -m | –mode default: union 设置表达量计算模式。该参数的值可以有union, intersection-strict and intersection-nonempty -o | –samout 输出一个sam文件，该sam文件的比对结果中多了一个XF标签，表示该read比对到了某个feature上。 -q | –quiet 不输出程序运行的状态信息和警告信息。 HTSeq输出结果 输出的count里就2列，第一列是geneid第二列是count -o 参数输出一个sam文件，该sam文件的比对结果中多了一个XF标签，表示该read比对到了某个feature上的具体特征，如下： HTSeq总结 是一个非常经典的gene-level定量软件 运行速度和内存占用情况不如featurecount ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:2:5","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"featurecounts（Subread package）定量软件简介 featurecounts官网 http://subread.sourceforge.net/ http://bioinf.wehi.edu.au/featureCounts/ featurecounts简介 一个C语言编写的基因定量软件（Y Liao 2013） 特点：应用了高效率的染色体哈希算法和feature区块技术 突出优点：快 featurecounts属于subread subread是一个能快速进行序列比对/定量/SNP分析的工具 [1] Y Liao, Smyth, G. K. , \u0026 Shi, W. . (2013). Featurecounts: an efficient general-purpose program for assigning sequence reads to genomic features. featurecounts原理 每条染色体分为128 kb 的bins，根据feature（染色体下的实线如exon）的起始位置，将其分配到各自对应的bin中, 然后这些feature后又被平均分为不同的block（灰色框),尽量保证一个block中的feature的数目与bin中的block的数目近似相等 Reads先与不同的基因组bin进行比对，定位到其bin中后，再与不同的特征block（虚线箭头）进行对比，最后与feature进行比较（实线箭头）.在maping过程中，featurecount只使用这一套bin和block, 在最后的统计过程中，featurecount会根据不同的参数要求来统计是否去除multimapping reads. 图中，该reads与bin I 的第一个特征块中的两个特征区域重叠。 featurecounts结果评估 htseq-count 把gff文件中的特征区域的终止位置的碱基不算在该特征区域内 featureCounts 和 summarizeOverlaps 软件则把终止位置的碱基统计在特征区域内 桑格研究所规定gff文件中特征区域的起始和终止碱基是包含在特征区域内的，所以featureCounts 比htseq的定量结果更准确一些 双端测序时，summorizeOverlops软件统计到的fragments数比其他两个软件少的原因主要是因为summarizeOverlaps要求双端测序的两个end reads 都成功的mapped 后才会进行分配到基因, 而 featureCounts and htseq-count 只要有一端reads 成功的mapped后，其就可以将它分配到基因上 如果某一fragment能够同时匹配上两个基因，但是其中一个基因（a)可以被这一fragment的两端reads匹配上，而另一个基因(b)只被一个end read 匹配上，那么featurecount就会认为该fragment来自a基因, 而htseq-count遇到这样的问题时，就会认为这个fragment发生了multmaped，从而舍弃此基因 featurecounts使用方法 /mnt/ilustre/users/wanyun.yang/script/quant/featurecount/subread-1.6.0-Linux-x86_64/bin/featureCounts -p -t exon -g gene_id -a all_transcripts.gtf -o RASshCON.count.txt RASshCON.bam 主要的参数： input file 输入的bam/sam文件，支持多个文件输入 -a \u003c string \u003e 参考gtf文件名，支持Gzipped文件格式 -F 参考文件的格式，一般为GTF/SAF，C语言版本默认的格式为GTF格式 -A 提供一个逗号分割为两列的文件，一列为gtf中的染色体名，另一列为read中对应的染色体名，用于将gtf和read中的名称进行统一匹配，注意该文件提交时不需要列名 -J 对可变剪切进行计数 -G \u003c string \u003e 当-J设置的时候，通过-G提供一个比对的时候使用的参考基因组文件，辅助寻找可变剪切 -M 如果设置-M，多重map的read将会被统计到 -o \u003c string \u003e 输出文件的名字，输出文件的内容为read 的统计数目 -O 允许多重比对，即当一个read比对到多个feature或多个metafeature的时候，这条read会被统计多次 -T 线程数目，1~32 下面是有关featrue/metafeature选择的参数 参数说明 -p 只能用在paired-end的情况中，会统计fragment而不统计read -B 在-p选择的条件下，只有两端read都比对上的fragment才会被统计 -C 如果-C被设置，那融合的fragment（比对到不同染色体上的fragment）就不会被计数，这个只有在-p被设置的条件下使用 -d \u003c int \u003e 最短的fragment，默认是50 -D \u003c int \u003e 最长的fragmen，默认是600 -f 如果-f被设置，那将会统计feature层面的数据，如exon-level，否则会统计meta-feature层面的数据，如gene-levels -g \u003c string \u003e 当参考的gtf提供的时候，我们需要提供一个id identifier 来将feature水平的统计汇总为meta-feature水平的统计，默认为gene_id，注意！选择gtf中提供的id identifier！！！ -t \u003c string \u003e 设置feature-type，-t指定的必须是gtf中有的feature，同时read只有落到这些feature上才会被统计到，默认是“exon” featurecounts输出结果 feature_count.txt 文件中包含基因ID，定量到该基因的所有外显子的染色体编号，和所有外显子的起始 ，终止位置，链的特征，外显子长度总和 和 各个样品中该基因的表达量 RASshCON.count.txt.summary 输出mapping的总体情况 featurecounts总结 featurecounts软件内部编程大多使用c语言编写而htseq使用python,所以featurecounts快，featurecounts对genome的bin和block区块化，更加速了定量速度 在对gtf的理解上和处理ambiguous reads时，featurecounts比htseq参数控制多 ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:2:6","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"kallisto,salmon,rsem,stringtie,featurecount,htseq定量结果的差异分析比较 ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:3:0","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"测试数据不同软件定量结果分析 从云平台上随机下载了一个项目的数据（MJ20200513073-FX2020061700029），针对该项目的2个样品分别使用kallisto,salmon,rsem,stringtie,featurecount,htseq进行了定量分析，并对定量结果的count值和tpm值进行了整理，tpm值整理结果如下: tpm值的相关性分析 tpm值的pca 相关性和pca总结： featurecount和htseq定量结果相似 salmon和rsem定量结果相似 featurecount和htseq和stringtie定量结果相似可能是由于他们输入文件都是相同的bam salmon和rsem和kallisto定量结果相似可能是由于他们都是基于转录本定量的结果并且他们都是基于EM算法模型 tpm值的大小情况 tpm值大小总结： stringtie的定量结果总体偏高 rsem的定量结果总体偏低 rsem和salmon对低表达水平gene比较敏感 ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:3:1","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"测试数据不同定量结果的差异分析 从云平台上随机下载了一个项目的数据（MJ20200513073-FX2020061700029），针对该项目的2个样品分别使用kallisto,salmon,rsem,stringtie,featurecount,htseq进行了定量分析，之后使用edgR进行差异分析，结果如下： compare all up down software padj fc featurecount_1vsfeaturecount_2 1336 640 696 edgeR 0.05 2 htseq_1vshtseq_2 1340 642 698 edgeR 0.05 2 kallisto_1vskallisto_2 1525 743 782 edgeR 0.05 2 rsem_1vsrsem_2 1463 728 735 edgeR 0.05 2 salmon_1vssalmon_2 1467 709 758 edgeR 0.05 2 stringtie_1vsstringtie_2 3640 1707 1933 edgeR 0.05 2 差异gene的Venn图 差异基因聚类分析 compare all up down software padj fc featurecount_1vsfeaturecount_2 103 26 77 edgeR 0.01 2 htseq_1vshtseq_2 100 27 73 edgeR 0.01 2 kallisto_1vskallisto_2 131 37 94 edgeR 0.01 2 rsem_1vsrsem_2 164 56 108 edgeR 0.01 2 salmon_1vssalmon_2 171 60 111 edgeR 0.01 2 stringtie_1vsstringtie_2 793 331 462 edgeR 0.01 2 差异分析总结 featurecount和htseq的差异分析结果比较相似 salmon和rsem的差异分析结果比较相似 kallisto的差异分析结果和其他定量软件相比差异较大 ","date":"2021-10-16","objectID":"/posts/rnaseq-quantification/:3:2","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"RNAseq定量软件比较","uri":"/posts/rnaseq-quantification/"},{"categories":["RNAseq"],"content":"circRNA差异表达分析软件比较","date":"2021-09-23","objectID":"/posts/differential-analysis-of-circrna-count-data-circrna/","tags":["RNAseq","EBSeq","DEBKS"],"title":"circRNA差异表达分析软件","uri":"/posts/differential-analysis-of-circrna-count-data-circrna/"},{"categories":["RNAseq"],"content":"circRNA差异分析 ​ 独特的环状结构使得二代测序较短的读长对其鉴定以及定量被限制，目前仅仅依靠其反向剪切序列；另外，环状RNA的表达总是与来源基因（host gene）线性RNA的表达纠缠不清，让人们很难区分差异是来源于反向剪切还是只是来源基因的副产物。 ​ 对此，许多软件在识别上下功夫，比如DCC、CIRCexplorer、CIRI等等，然后用DESeq2或edgeR进行差异分析；而另一些软件在定量上使劲，对环状 RNA 的定量不仅仅使用反向剪切序列（BSJ），而且考虑到来源基因线性分子表达的影响，使用BS ratio进行定量，例如DCC、CIRI2、CIRIquant以及CLEAR。当然这种定量就不适合用于DESeq2或edgeR，一般可以用DCC::CircTest或CIRIquant等软件进行差异分析。 ","date":"2021-09-23","objectID":"/posts/differential-analysis-of-circrna-count-data-circrna/:0:0","tags":["RNAseq","EBSeq","DEBKS"],"title":"circRNA差异表达分析软件","uri":"/posts/differential-analysis-of-circrna-count-data-circrna/"},{"categories":["RNAseq"],"content":"1. 使用EBSeq 进行差异表达分析 ","date":"2021-09-23","objectID":"/posts/differential-analysis-of-circrna-count-data-circrna/:1:0","tags":["RNAseq","EBSeq","DEBKS"],"title":"circRNA差异表达分析软件","uri":"/posts/differential-analysis-of-circrna-count-data-circrna/"},{"categories":["RNAseq"],"content":"1.1 原理： ​ EBSeq: an empirical Bayes model for identifying DE genes and isoforms. 一句话描述，贝叶斯方法就是利用先验知识，结合当前获得数据，来更新关于未知参数的信息，以此获得修订后的参数的可能性，也就是后验概率。 EBSeq requires gene counts or estimates of isoform expression, but it is not specific to any particular estimation method (e.g. RSEM, Rseq, Cufflinks or another method may be used). library size：total number of reads or obtained by TMM (Robinson and Oshlack, 2010), Median Normalization (Anders and Huber, 2010) or Upper Quartile Normalization (Bullard et al., 2010). Since the total number of reads may be adversely affected by outliers from PCR or other artifacts, the latter three methods are recommended. The EBSeq code defaults to Median Normalization, but Quantile Normalization is also available. mean:; variance:When RNA-seq reads in two biological conditions are available: p denote the prior probability of DE: ![image-20211122124512688.png) ","date":"2021-09-23","objectID":"/posts/differential-analysis-of-circrna-count-data-circrna/:1:1","tags":["RNAseq","EBSeq","DEBKS"],"title":"circRNA差异表达分析软件","uri":"/posts/differential-analysis-of-circrna-count-data-circrna/"},{"categories":["RNAseq"],"content":"1.2 使用示例： 路径: 脚本：/mnt/ilustre/users/jiawen.ma/script/RNA-seq/EBSeq 程序执行： Rscript EBSeq.R -f gene.count.matrix.annot.xls -g group.txt -c compare.txt 参数说明： -f：基因count文件 -g：分组文件 -c：对照文件 ","date":"2021-09-23","objectID":"/posts/differential-analysis-of-circrna-count-data-circrna/:1:2","tags":["RNAseq","EBSeq","DEBKS"],"title":"circRNA差异表达分析软件","uri":"/posts/differential-analysis-of-circrna-count-data-circrna/"},{"categories":["RNAseq"],"content":"1.3 结果展示： cat *_maxrount.txt 3个指标用于判断选择的迭代次数maxround是否合理，一般来说每个指标的最后两个值相差小于0.01就可以了 head *_DEG_FDR005.txt # FDR \u003c 0.05 时的差异基因 head *_EBSeq_summary.xls #每个基因的在不同组别中的平均表达量，差异倍数，FDR ","date":"2021-09-23","objectID":"/posts/differential-analysis-of-circrna-count-data-circrna/:1:3","tags":["RNAseq","EBSeq","DEBKS"],"title":"circRNA差异表达分析软件","uri":"/posts/differential-analysis-of-circrna-count-data-circrna/"},{"categories":["RNAseq"],"content":"2. 使用DEBKS进行差异表达分析 ","date":"2021-09-23","objectID":"/posts/differential-analysis-of-circrna-count-data-circrna/:2:0","tags":["RNAseq","EBSeq","DEBKS"],"title":"circRNA差异表达分析软件","uri":"/posts/differential-analysis-of-circrna-count-data-circrna/"},{"categories":["RNAseq"],"content":"2.1 原理： ​ 通过比较，DEBKS具有更优秀的性能并且更少受来源基因表达的影响。 ​ 由于需要包含线性剪切位点的表达（LJC），因此，DEBKS只能应用于既包含环状 RNA又包含线性RNA的测序，例如rRNA-depleted RNA-seq或exome capture RNA-seq。 ​ 另外，基因间区的环状RNA由于缺乏线性分子的表达，因此无法用DEBKS评估。 ","date":"2021-09-23","objectID":"/posts/differential-analysis-of-circrna-count-data-circrna/:2:1","tags":["RNAseq","EBSeq","DEBKS"],"title":"circRNA差异表达分析软件","uri":"/posts/differential-analysis-of-circrna-count-data-circrna/"},{"categories":["RNAseq"],"content":"2.2 使用示例： DEBKS设计了4个模块, count与anno两个模块为非必需步骤。 路径: 脚本：/mnt/ilustre/users/jiawen.ma/test/debks 程序执行： ls CIRI/*.txt \u003e samplelist.txt DEBKS merge -s ciri2 -f samplelist.txt DEBKS dec -c merge_circ.txt -l merge_linear.txt -t 20 -o dec_star.txt 文件与参数说明： samplelist.txt：circRNA预测结果的文件路径 -s：circRNA预测的软件名 2.3 结果展示： 结果文件每列的说明： 参考资料： EBSeq: an empirical Bayes hierarchical model for inference in RNA-seq experiments DEBKS: A Tool to Detect Differentially Expressed Circular RNA DEBKS_github ","date":"2021-09-23","objectID":"/posts/differential-analysis-of-circrna-count-data-circrna/:2:2","tags":["RNAseq","EBSeq","DEBKS"],"title":"circRNA差异表达分析软件","uri":"/posts/differential-analysis-of-circrna-count-data-circrna/"},{"categories":["RNAseq"],"content":"使用volcano3d做3个组别间的火山图","date":"2021-09-18","objectID":"/posts/interactive-three-way-differential-expression-analysis/","tags":["RNAseq","volcano3d","三个差异组比较"],"title":"RNAseq三个差异组比较分析","uri":"/posts/interactive-three-way-differential-expression-analysis/"},{"categories":["RNAseq"],"content":"使用volcano3D进行三个差异组间的可视化分析 概述 The volcano3D package enables exploration of probes differentially expressed between three groups. Its main purpose is for the visualisation of differentially expressed genes in a three-dimensional volcano plot. These plots can be converted to interactive visualisations using plotly. The methodology has been published in Lewis, Myles J., et al. Molecular portraits of early rheumatoid arthritis identify clinical and treatment response phenotypes. Cell reports 28.9 (2019): 2455-2470. (DOI: 10.1016/j.celrep.2019.07.091) with an interactive web tool available at https://peac.hpc.qmul.ac.uk. 分析方法 当前差异分析方法只用DESeq2 和limma 两个模型，其他差异软件也可以使用，建议只对有生物学重复的项目进行分析。当然无重复也是可以做的，可以使用DEGseq进行分析，但是综合组间并不能进行分析，所以总体无生物学重复的项目不考虑做。当前根据DESeq2和limma两个模型，我们整合到了一个脚步中，这个脚本使用如下分析参考： ","date":"2021-09-18","objectID":"/posts/interactive-three-way-differential-expression-analysis/:0:0","tags":["RNAseq","volcano3d","三个差异组比较"],"title":"RNAseq三个差异组比较分析","uri":"/posts/interactive-three-way-differential-expression-analysis/"},{"categories":["RNAseq"],"content":"脚本执行: Rscript /mnt/ilustre/users/meng.luo/Pipeline/Pipeline/script/3Dplot/volcano3d.R --count gene.count.txt --group group.txt --diff DESeq2 --p 0.05 参数说明： --count：基因定量结果readcount文件 --group：样品分组文件（至少有3个组别） --diff：差异分析方法，可选择DESeq2或者Limma，默认DESeq2 --p: 过滤不显著差异基因的padj值，默认0.05 注意事项： group.txt文件中的分组需要大于等于3组 结果可视化 生成的颜色是随机的，根据情况，可以再自行定义 ","date":"2021-09-18","objectID":"/posts/interactive-three-way-differential-expression-analysis/:1:0","tags":["RNAseq","volcano3d","三个差异组比较"],"title":"RNAseq三个差异组比较分析","uri":"/posts/interactive-three-way-differential-expression-analysis/"},{"categories":["RNAseq"],"content":"组间不同条件下的二维火山图 只显示显著与不显著的结果 根据结果，显示所有不同组间的差异结果 Alternatively using the polar significance levels 只显示组间，差异上调的基因结果 upregulated group within the standard volcano plot Radial Plots 以放射性图展示所有不同组间的差异情况 The differential expression can now be visualised on an interactive radar plot using radial_plotly Boxplots 根据最显著的五个基因，做箱图，比较其在不同组间是否显著差异 Three Dimensional Volcano Plots 最后根据以上的结果，做3D图呈现最终的结果图 The final thing we can look at is the 3D volcano plot which projects differential gene expression onto cylindrical coordinates. 可以呈现html的格式 多组差异比较 增对不同的项目，进行多组间差异比较，当前只使用的模型是DESeq2 和 Limma ","date":"2021-09-18","objectID":"/posts/interactive-three-way-differential-expression-analysis/:2:0","tags":["RNAseq","volcano3d","三个差异组比较"],"title":"RNAseq三个差异组比较分析","uri":"/posts/interactive-three-way-differential-expression-analysis/"},{"categories":["RNAseq"],"content":"执行脚本 Rscript /mnt/ilustre/users/meng.luo/Pipeline/Pipeline/script/multipleDGEs/test/multipleDGEs.R -c readcount.txt -g group.txt -m Limma 参数说明： -c：基因定量结果readcount文件 -g：样品分组文件（至少有3个组别） -m：差异分析方法，可选择DESeq2或者Limma 参考资料及文献： volcano3D包的使用方法 Molecular Portraits of Early Rheumatoid Arthritis Identify Clinical and Treatment Response Phenotypes ","date":"2021-09-18","objectID":"/posts/interactive-three-way-differential-expression-analysis/:3:0","tags":["RNAseq","volcano3d","三个差异组比较"],"title":"RNAseq三个差异组比较分析","uri":"/posts/interactive-three-way-differential-expression-analysis/"},{"categories":["RNAseq"],"content":"使用clusterProfiler 对差异基因进行富集分析","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"使用clusterProfiler对基因集进行富集分析 分析内容包括GO、KEGG、GSEA、DO Reactome ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:0:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"构建自己物种的数据库R包 如果分析的物种没有注释信息，需要将基因/转录本与六大数据库（NR、Swiss-Prot、Pfam、EggNOG、GO和KEGG）进行比对，全面获得基因/转录本的注释信息并对各数据库注释情况。但是如果只是做GO或者KEGG富集分析，只需要比对到GO及KEGG获得相应的注释结果即可。 # 如果你有以上的数据结构，可以使用以下脚本进行处理，获得构建数据库的基本数据。 perl /mnt/ilustre/users/meng.luo/Pipeline/Pipeline/biotools/clusterprofile/database/get.anno.pl -go gene.go.list -anno all_anno_detail.xls -out ./ -kegg gene.kegg.list -ko pathway_table.xls # 如果有结果是空的，需要再处理 less gene_info_discription.txt|perl -ne 'chomp;my $nn=376423;my @all=split/\\t/,$_;if($all[2] eq \"\"){print\"$all[0]\\t$all[1]\\t$nn\\t$all[3]\\n\";$nn++;}else{print \"$_\\n\"}' \u003e gene_info_entrze.txt # 再运行R脚本进行再运行R脚本数据库 Rscript /mnt/ilustre/users/meng.luo/Pipeline/Pipeline/biotools/clusterprofile/database/build_annotation.R -i gene_info_discription.txt -g gene_GO.txt -s asa -n 9666 -o ./ 参数说明： -i：基因ID与其描述信息的文件 -g：基因ID所对应的GOID的文件 -s：构建的物种名；例如：asa -n: 物种的num ID；例如：9666 (随机数，没有任何影响) -o：输出路径 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:1:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"gene_info.txt文件示例： ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:2:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"gene_GO.txt文件示例： ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:3:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"注意事项： gene_info.txt文件中的基因ID不能重复。 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:4:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"脚本最后一行有效命名为安装此orgdb。 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:5:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"构建的orgdb文件为：org.hsa.eg.db, hsa 为提供的物种ID 富集分析 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:6:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"路径: # 提供基因list表或者基因及其FC值（如果有FC值则进行富集分析），两列值，不用写表头。其中ko_gene.txt、ko_anno.txt、class.txt都是上面整理好的结果文件，执行脚本如下： Rscript /mnt/ilustre/users/meng.luo/Pipeline/Pipeline/ biotools/clusterprofile/clusterProfiler.V3.R -e circrna_host.gene.DE -i ko_gene.txt -m ko_anno.txt -c class.txt -s asa # 脚本帮助 Options: -e DEGFILE, --degfile=DEGFILE Input file of deg file -i KOGENEID, --kogeneID=KOGENEID Input file of koID mapping geneID or transcriptionID or entrezID.. -m KODESCRIPTION, --kodescription=KODESCRIPTION Input file of koID and its description -b GSEA, --gsea=GSEA Whether to conduct GSEA analysis; default:FALSE -c CLASS, --class=CLASS Input file of class file;default:class1_description.txt -f FOLDCHANGE, --foldchange=FOLDCHANGE Fold change;default:2 -l LAYOUTTYPE, --layouttype=LAYOUTTYPE Setting layout; default:circle -n NODELABEL, --nodelabel=NODELABEL Setting node_label; default:none,it is one of none, all,gene or category -s SPECIES, --species=SPECIES Species in this analysis;default:hsa -a ALL, --all=ALL default:deg gene; input all:genes -g GOENRICH, --GOenrich=GOENRICH Do you need GO analysis;default:TRUE -k KEGGENRICH, --KEGGenrich=KEGGENRICH Do you need KEGG analysis;default:TRUE -d DOENRICH, --DOenrich=DOENRICH Do you need DO analysis;default:FALSE -r REACTOMEENRICH, --Reactomeenrich=REACTOMEENRICH Do you need Reactome analysis;default:FALSE -h, --help Show this help message and exit 参数说明： -e：表达基因详细文件 -c：kegg pathway class1与descripti的对应表 -f：foldchange;默认为2 -s: 物种名；默认为人 -a：富集通路图是否包含所有背景基因；默认只为差异表达基因 -g：是否进行GO分析；默认为TRUE；如不需着传递参数FALSE -k：是否进行KEGG分析；默认为TRUE；如不需着传递参数FALSE -d：是否进行疾病分析；默认为TRUE；如不需着传递参数FALSE -r：是否进行反应组分析；默认为TRUE；如不需着传递参数FALSE 分析结果 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:6:1","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"以上是物种人的一个分析例子，输出的结果目录如下： |-- results/ |-- DO_result |-- GO_result |-- KEGG_result |-- Reactome_result 详细分析原来如下知识点 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:6:2","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"GO enrichment analysis GO comprises of three orthogonal ontologies, i.e. molecular function (MF), biological process (BP), and cellular component (CC). GO analyses (groupGO(), enrichGO() and gseGO()) support organisms that have an OrgDb object available (see also session 2.2). If user have GO annotation data (in data.frame format with first column of gene ID and second column of GO ID), they can use enricher() and gseGO() functions to perform over-representation test and gene set enrichment analysis. If genes are annotated by direction annotation, it should also annotated by its ancestor GO nodes (indirect annation). If user only has direct annotation, they can pass their annotation to buildGOmap function, which will infer indirection annotation and generate a data.frame that suitable for both enricher() and gseGO(). ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:7:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"GO over-representation analysis The clusterProfiler package implemented enrichGO() function for gene ontology over-representation test. ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:8:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"GO Gene Set Enrichment Analysis The clusterProfiler package provides gseGO() function for gene set enrichment analysis using gene ontology. ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:9:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"KEGG enrichment analysis The KEGG FTP service is not freely available for academic since 2012, and there are many software packages using out-dated KEGG annotation data. The clusterProfiler package supports downloading latest online version of KEGG data using the KEGG website, which is freely available for academic users. Both KEGG pathway and module are supported in clusterProfiler. The clusterProfiler package supports all organisms that have KEGG annotation data available in KEGG database. User should pass abbreviation of academic name to the organism parameter. The full list of KEGG supported organisms can be accessed via http://www.genome.jp/kegg/catalog/org_list.html. KEGG Orthology (KO) Database is also supported by specifying organism = \"ko\". The clusterProfiler package provides search_kegg_organism() function to help searching supported organisms. ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:10:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"KEGG pathway over-representation analysis ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:11:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"KEGG pathway gene set enrichment analysis ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:12:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"Reactome enrichment analysis ReactomePA is designed for reactome pathway based analysis (Yu and He 2016). Reactome is an open-source, open access, manually curated and peer-reviewed pathway database. Currently ReactomePA supports several model organisms, including ‘celegans,’ ‘fly,’ ‘human,’ ‘mouse,’ ‘rat,’ ‘yeast’ and ‘zebrafish.’ The input gene ID should be Entrez gene ID. We recommend using clusterProfiler::bitr() to convert biological IDs. ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:13:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"Reactome pathway over-representation analysis Enrichment analysis is a widely used approach to identify biological themes. ReactomePA implemented enrichPathway() that uses hypergeometric model to assess whether the number of selected genes associated with a reactome pathway is larger than expected. Pathway Visualization ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:14:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"Reactome pathway gene set enrichment analysis Pathway Visualization ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:15:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"Disease enrichment analysis We developed DOSE (Yu et al. 2015) package to promote the investigation of diseases. DOSE provides five methods for measuring semantic similarities among DO terms and gene products, hypergeometric model and gene set enrichment analysis (GSEA) for associating disease with gene list and extracting disease association insight from genome wide expression profiles. DOSE supports enrichment analysis of Disease Ontology (DO) (Schriml et al. 2011), Network of Cancer Gene (A. et al. 2016) and Disease Gene Network (DisGeNET) (Janet et al. 2015). In addition, several visualization methods were provided by enrichplot to help interpreting semantic and enrichment results. ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:16:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"Over-representation analysis for disease ontology Enrichment Map 选取padjust前30个pathway可视化 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:17:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"边的宽度代表两个富集的Term共有的基因数目，点大小代表条目内基因数目多少，颜色代表Padjust，值越小越红； Gene-Concept Network 选取padjust前5个Category可视化 基因与其被注释的条目连线，点的颜色代表表达变化，圈的大小代表对应注释内基因数目多少 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:17:1","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"Disease gene set enrichment analysis Enrichment Map Gene-Concept Network ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:18:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"可视化的结果，还加上了热图，聚类树及upset图 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:19:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"热图 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:20:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"聚类树 ","date":"2021-08-24","objectID":"/posts/clusterprofiler_pipeline/:21:0","tags":["RNAseq","富集分析","clusterProfiler"],"title":"使用clusterProfiler对基因集进行富集分析（任何物种）","uri":"/posts/clusterprofiler_pipeline/"},{"categories":["RNAseq"],"content":"对差异基因表达分析结果可视化","date":"2021-07-30","objectID":"/posts/degs-viz/","tags":["RNAseq","差异分析","可视化","scatter"],"title":"差异表达分析结果可视化","uri":"/posts/degs-viz/"},{"categories":["RNAseq"],"content":"一.目的： 使用Volcano_gene_annotation.R对基因表达量进行火山图绘制以及基因标注 二.使用示例： ","date":"2021-07-30","objectID":"/posts/degs-viz/:0:0","tags":["RNAseq","差异分析","可视化","scatter"],"title":"差异表达分析结果可视化","uri":"/posts/degs-viz/"},{"categories":["RNAseq"],"content":"脚本路径: /mnt/ilustre/users/jiawen.ma/script/R_script/Volcano_gene_annotation ","date":"2021-07-30","objectID":"/posts/degs-viz/:0:1","tags":["RNAseq","差异分析","可视化","scatter"],"title":"差异表达分析结果可视化","uri":"/posts/degs-viz/"},{"categories":["RNAseq"],"content":"程序执行： Rscript Volcano_gene_annotation.R -g FI_vs_FOI.deseq2.annot.xls -s gene_anno_need.list -f 1 -n FI_vs_FOI.deseq2 -o ./ 参数说明： -g：云平台下载的差异基因表达量 -s：需要标记的基因list -f：需要设定的log2fc的值（如：1；1.2；2） -n：输出的文件名 -o：输出路径 补充信息： -s：将需要标记的基因做成一列的list文件（如下图所示） **注意事项：**如果不需要对基因基因标记，输入的list为空文件即可。 三.结果展示： 一.目的： 使用scatter_gene_annotation.R对基因表达量进行散点图绘制以及基因标注 二.使用示例： ","date":"2021-07-30","objectID":"/posts/degs-viz/:0:2","tags":["RNAseq","差异分析","可视化","scatter"],"title":"差异表达分析结果可视化","uri":"/posts/degs-viz/"},{"categories":["RNAseq"],"content":"脚本路径: /mnt/ilustre/users/jiawen.ma/script/R_script/scatter_gene_annotation ","date":"2021-07-30","objectID":"/posts/degs-viz/:0:3","tags":["RNAseq","差异分析","可视化","scatter"],"title":"差异表达分析结果可视化","uri":"/posts/degs-viz/"},{"categories":["RNAseq"],"content":"程序执行： Rscript scatter_gene_annotation.R -g FI_vs_FOI.deseq2.annot.xls -s gene_anno_need.list -f 1 -n FI_vs_FOI.deseq2 -o ./ 参数说明： -g：云平台下载的差异基因表达量 -s：需要标记的基因list -f：需要设定的fc的值（如：1；1.2；2） -n：输出的文件名 -o：输出路径 补充信息： -s：将需要标记的基因做成一列的list文件（如下图所示） **注意事项：**如果不需要对基因基因标记，输入的list为空文件即可。 三.结果展示： 一.目的： 使用 cor_plot.R 绘制差异表达基因的FoldChange的相关性图 二.使用示例： ","date":"2021-07-30","objectID":"/posts/degs-viz/:0:4","tags":["RNAseq","差异分析","可视化","scatter"],"title":"差异表达分析结果可视化","uri":"/posts/degs-viz/"},{"categories":["RNAseq"],"content":"脚本路径: /mnt/ilustre/users/jiawen.ma/workspace/plot_data/cor_210707 ","date":"2021-07-30","objectID":"/posts/degs-viz/:0:5","tags":["RNAseq","差异分析","可视化","scatter"],"title":"差异表达分析结果可视化","uri":"/posts/degs-viz/"},{"categories":["RNAseq"],"content":"程序执行： Rscript cor_plot.R -c DPI05uM_vs_DPI1uM.deseq2.annot.xls -s TGFb2ng_vs_DPI05uM.deseq2.annot.xls -f 1 -o ./ 参数说明： -c：对照组文件 -s：处理组文件 -f：设定一个fc的值 -o：输出结果路径 -h：脚本使用的帮助信息 注意事项： 如果 -c 与 -s 输入的文件中log2fc为其他大小写（如：Log2FC、log2FC等）需要将列名改为log2fc。 三.结果展示： 输出文件为file1_name_VS_file2_name.pdf ","date":"2021-07-30","objectID":"/posts/degs-viz/:0:6","tags":["RNAseq","差异分析","可视化","scatter"],"title":"差异表达分析结果可视化","uri":"/posts/degs-viz/"},{"categories":["RNAseq"],"content":"对GO和KEGG富集结果进行可视化分析","date":"2021-07-28","objectID":"/posts/enrichment-plots/","tags":["RNAseq","富集分析","可视化","pie","barplot"],"title":"富集分析结果数据可视化","uri":"/posts/enrichment-plots/"},{"categories":["RNAseq"],"content":" 一.目的： 使用Go_pie.R绘制GO功能富集图 二.使用示例： ","date":"2021-07-28","objectID":"/posts/enrichment-plots/:0:0","tags":["RNAseq","富集分析","可视化","pie","barplot"],"title":"富集分析结果数据可视化","uri":"/posts/enrichment-plots/"},{"categories":["RNAseq"],"content":"脚本路径: /mnt/ilustre/users/jiawen.ma/script/R/GO/GO_pie/Go_pie.R ","date":"2021-07-28","objectID":"/posts/enrichment-plots/:0:1","tags":["RNAseq","富集分析","可视化","pie","barplot"],"title":"富集分析结果数据可视化","uri":"/posts/enrichment-plots/"},{"categories":["RNAseq"],"content":"程序执行： Rscript Go_pie.R -g GoEnrich_20210731_104746207.txt -n GoEnrich_20210731_104746207 -o ./ 参数说明： -g：云平台下载的GO功能富集文件 -n：输出的文件名（例如：GO） -o：输出结果路径 提示： GO file 来源于云平台交互结果中GO功能富集文件（如下图，为10列文件） 三.结果展示： 一.目的： 使用ggbarplot_modify.R绘制GO功能富集图 二.使用示例： ","date":"2021-07-28","objectID":"/posts/enrichment-plots/:0:2","tags":["RNAseq","富集分析","可视化","pie","barplot"],"title":"富集分析结果数据可视化","uri":"/posts/enrichment-plots/"},{"categories":["RNAseq"],"content":"脚本路径: /mnt/ilustre/users/jiawen.ma/script/R_script/GO_plot ","date":"2021-07-28","objectID":"/posts/enrichment-plots/:0:3","tags":["RNAseq","富集分析","可视化","pie","barplot"],"title":"富集分析结果数据可视化","uri":"/posts/enrichment-plots/"},{"categories":["RNAseq"],"content":"程序执行： Rscript ggbarplot_modify.R -g GO_20210411_235811629.xls -n GO -o ./ 参数说明： -g：云平台下载的GO功能富集文件 -n：输出的文件名（例如：GO） -o：输出结果路径 提示： GO file 来源于云平台GO功能富集文件（如下图，为6列文件） 三.结果展示： ","date":"2021-07-28","objectID":"/posts/enrichment-plots/:0:4","tags":["RNAseq","富集分析","可视化","pie","barplot"],"title":"富集分析结果数据可视化","uri":"/posts/enrichment-plots/"},{"categories":["RNAseq"],"content":"Learning Video \r","date":"2021-07-28","objectID":"/posts/enrichment-plots/:0:5","tags":["RNAseq","富集分析","可视化","pie","barplot"],"title":"富集分析结果数据可视化","uri":"/posts/enrichment-plots/"},{"categories":["RNAseq"],"content":"使用DEGseq.R 对无重复样本进行差异分析","date":"2021-07-23","objectID":"/posts/degseq-differential-analysis-of-count-data/","tags":["RNAseq","差异分析","count"],"title":"DEGseq 对无重复样本进行差异分析","uri":"/posts/degseq-differential-analysis-of-count-data/"},{"categories":["RNAseq"],"content":"DEGseq 对无重复样本进行差异分析 一.目的： 使用DEGseq.R 对无重复样本进行差异分析 二.使用示例： ","date":"2021-07-23","objectID":"/posts/degseq-differential-analysis-of-count-data/:0:0","tags":["RNAseq","差异分析","count"],"title":"DEGseq 对无重复样本进行差异分析","uri":"/posts/degseq-differential-analysis-of-count-data/"},{"categories":["RNAseq"],"content":"脚本路径: /mnt/ilustre/users/jiawen.ma/script/RNA-seq/DEGseq/DEGseq.R ","date":"2021-07-23","objectID":"/posts/degseq-differential-analysis-of-count-data/:0:1","tags":["RNAseq","差异分析","count"],"title":"DEGseq 对无重复样本进行差异分析","uri":"/posts/degseq-differential-analysis-of-count-data/"},{"categories":["RNAseq"],"content":"程序执行： Rscript DEGseq.R -g gene.count.matrix.annot.xls -t gene.TPM.matrix.annot.xls -s compare.txt -o ./ 参数说明： -g：样本的gene count -t: 样本gene的tpm表（如输入文件则添加基因的tpm，如未输入则不添加） -s：样本对照组文件 -f：fold change（默认为2倍） -p：pvalue（默认为0.05） -p：padjust（默认为null，如以padjust为条件则pvalue则自动无效） -o：输出结果路径 提示： -s：对照组文件样式： 三.结果展示： Con.VS.Ex.0.05.DE.list：差异表达基因list Con.VS.Ex.DEGseq.annot.xls ：基因的差异表达情况表 Con.VS.Ex.diffexp.scatter.pdf：基因差异表达的散点图 Con.VS.Ex.padj-0.05-fc-2.xls：以padjust(0.05)，fc(2)挑选的差异表达基因 Con.VS.Ex.volcano.pdf：基因差异表达的火山图 ","date":"2021-07-23","objectID":"/posts/degseq-differential-analysis-of-count-data/:0:2","tags":["RNAseq","差异分析","count"],"title":"DEGseq 对无重复样本进行差异分析","uri":"/posts/degseq-differential-analysis-of-count-data/"},{"categories":[""],"content":"Resource","date":"2020-12-19","objectID":"/ne/","tags":["",""],"title":"News/Events","uri":"/ne/"},{"categories":[""],"content":" TWEETS 2021 Tweets by czheMEL NEWS 2021 Dec03 Weekend Party Dinner 新石器烤肉 浦东新区沪南公路3493弄万达广场外围美食街19号1层19-21号 Learn More April052022 Single Cell Biology: Pushing New Frontiers in the Life Sciences Life has evolved profound heterogeneity of cells within a tissue, and the function of a tissue or organ can only be understood by understanding how these cells interact. Diseases often arise within a subset of cells within a tissue, or have different consequences in different cells. Learn More Nov29 ELIXIR Reproducible Research Workshop: Bioinformatics Workflow Management 2021 Streamed live on twitch: https://www.twitch.tv/elixir_workshops/ Learn More Jan18 Machine Learning for Single Cell Analysis The purpose of this workshop is to tear back the complexity behind single cell analysis. Participants will learn practical skills for analyzing single cell datasets and develop a conceptual understanding of the machine learning foundations behind each method. Participants will also receive an introduction to emerging trends in single cell analysis such as deep learning. Learn More Oct23 New Seminar on Newest Food Recipe from World’s Best Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More Oct23 Learn from small things to create something bigger. Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More EVENTS 2021 美吉生物     November 24 喜报!美吉生物合作伙伴2021年度已发表文章1578篇，影响因子突破10000分！ 美吉生物一站式组学无忧解决方案立足于组学科研全场景，为科研人提供组学技能培训、数据挖掘云分析工具、组学资料等科研人必备技能和工具服务，为科研项目提供实验方案制定、样品制备、数据挖掘、结果交付等项目执行及解读服务，一站服务实现了赋能科研人完美驾驭科研项目的资源和服务，加大加速了组学项目执行和成果产出。 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut odio temporibus voluptas error distinctio hic quae corrupti vero doloribus optio! Inventore ex quaerat modi blanditiis soluta maiores illum, ab velit. Learn More 美吉生物     November 3 10月文章集锦 | 美吉10月客户文章204篇，平均影响因子7分以上，1-10月累计1489篇！ 金秋10月，美吉客户文章成果继续丰收，盆钵满盈，通过搜索关键字“majorbio”，文章数量高达204篇，影响因子总计1427，平均文章影响因子达到7分；其中，10分以上的文章18篇，8分以上的文章57篇。文章中应用到的美吉组学技术有微生物多样性、宏基因组、转录组、代谢组学、蛋白组学、微生物基因组等等，其中包含有多篇多组学结合研究的高分优质文章。 Learn More MORE if ($(\"#myspan\").html().length 65) { short_text = $(\"#myspan\").html().substr(0, 65); $(\"#myspan\").html(short_text + \"......\"); } if ($(\"#myspan1\").html().length 65) { short_text = $(\"#myspan1\").html().substr(0, 65); $(\"#myspan1\").html(short_text + \"......\"); } if ($(\"#myspan2\").html().length 160) { short_text = $(\"#myspan2\").html().substr(0, 160); $(\"#myspan2\").html(short_text + \"......\"); } if ($(\"#myspan3\").html().length 160) { short_text = $(\"#myspan3\").html().substr(0, 160); $(\"#myspan3\").html(short_text + \"......\"); } MUSIC\u0026TWEETS 2021 Tweets by czheMEL Oct23 New Seminar on Newest Food Recipe from World’s Best Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More Oct23 Learn from small things to create something bigger. Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More Visits 2021 Oct23 New Seminar on Newest Food Recipe from World’s Best Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More Oct23 Learn from small things to create something bigger. Business Park, Opp. Corns Sam Restaurant, New Yoark, US Learn More ","date":"2020-12-19","objectID":"/ne/:0:0","tags":["",""],"title":"News/Events","uri":"/ne/"},{"categories":["RNAseq"],"content":"DEseq2对RNAseq 表达谱差异分析","date":"2020-12-16","objectID":"/posts/deseq2-differential-analysis-of-count-data/","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"DESeq2差异分析","uri":"/posts/deseq2-differential-analysis-of-count-data/"},{"categories":["RNAseq"],"content":"一. 目的： ","date":"2020-12-16","objectID":"/posts/deseq2-differential-analysis-of-count-data/:0:0","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"DESeq2差异分析","uri":"/posts/deseq2-differential-analysis-of-count-data/"},{"categories":["RNAseq"],"content":"使用DEseq2 对RNAseq的表达谱数据进行差异分析 二. 使用示例： ","date":"2020-12-16","objectID":"/posts/deseq2-differential-analysis-of-count-data/:0:1","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"DESeq2差异分析","uri":"/posts/deseq2-differential-analysis-of-count-data/"},{"categories":["RNAseq"],"content":"程序执行： Rscript /mnt/ilustre/centos7users/daokuan.zhang/workspace/develop/diffExp/run_DESeq2.R -r miRNA.counts.txt -g group.txt -c compare.txt -e miRNA_tpm.xls -a miRNA.target.anno.txt ","date":"2020-12-16","objectID":"/posts/deseq2-differential-analysis-of-count-data/:0:2","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"DESeq2差异分析","uri":"/posts/deseq2-differential-analysis-of-count-data/"},{"categories":["RNAseq"],"content":"例子路径 - 参数说明： 必须参数： -r 原始定量的 read counts文件 -g 样本分组文件，包含样本名，组名。根据样本的批次信息列可选填，以进行去批次矫正的差异分析。 -c 差异分组文件，第一列为比较组，第二列为实验组，多个比较组数会并行运算。 可选参数： -f 差异筛选的差异倍数阈值，默认为2 -p 原始pvalue阈值，进行差异筛选,默认使用该选项阈值为0.05 -q 矫正的padjust阈值，进行差异筛选 -e 序列表达谱文件，用于添加到差异分析结果 -a 序列描述信息文件，用于添加到差异分析结果 -o 结果文件输出目录，默认为当前路径。 三. 结果展示: 输出的目录结果包含以下三个文件： **vs_*.DESeq2.all.xls：所有序列的 差异分析结果详情 *_vs_.padjust-0.05-FC-2.xls： 按阈值筛选的差异表达的序列结果详情 ​ *vs.padjust-0.05-FC-2.scatter.pdf： 差异分析结果的散点图 ​ *vs.padjust-0.05-FC-2.volcano.pdf： 差异分析结果的火山图 参考文献 Love, M.I., Huber, W. \u0026 Anders, S. Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2. Genome Biol 15, 550 (2014). ","date":"2020-12-16","objectID":"/posts/deseq2-differential-analysis-of-count-data/:0:3","tags":["RNAseq","DESeq2","差异分析","count","表达量"],"title":"DESeq2差异分析","uri":"/posts/deseq2-differential-analysis-of-count-data/"},{"categories":["RNAseq"],"content":"对目标基因集进行功能数据库的富集分析","date":"2020-12-16","objectID":"/posts/enrichment-analysis/","tags":["RNAseq","enrich","GO","KEGG","富集"],"title":"富集分析","uri":"/posts/enrichment-analysis/"},{"categories":["RNAseq"],"content":"一. 目的： ","date":"2020-12-16","objectID":"/posts/enrichment-analysis/:0:0","tags":["RNAseq","enrich","GO","KEGG","富集"],"title":"富集分析","uri":"/posts/enrichment-analysis/"},{"categories":["RNAseq"],"content":"对目标基因集进行功能富集分析。采用软件 Goatools 进行GO富集分析； 用python脚本进行KEGG PATHWAY 或其他数据库的富集分析 ，原理为超几何分布检验。 二. 使用示例： ","date":"2020-12-16","objectID":"/posts/enrichment-analysis/:0:1","tags":["RNAseq","enrich","GO","KEGG","富集"],"title":"富集分析","uri":"/posts/enrichment-analysis/"},{"categories":["RNAseq"],"content":"程序执行： ` python /mnt/ilustre/centos7users/daokuan.zhang/workspace/develop/enrich/enrich.py *DE.list -g unigene_GO.list -k unigene_pathway.txt -s anl ","date":"2020-12-16","objectID":"/posts/enrichment-analysis/:0:2","tags":["RNAseq","enrich","GO","KEGG","富集"],"title":"富集分析","uri":"/posts/enrichment-analysis/"},{"categories":["RNAseq"],"content":"例子路径 - 参数说明： diff 位置参数，基因集文件，支持一次输入多个文件(空格分隔或者*通配符匹配) -g GO数据库的注释背景文件，第一列为序列名，第二列为GO ID;多个以;分隔 -k KEGG数据库背景文件。第一列为序列名，第二列包含kegg K ID。支持其他数据库的背景文件使用该参数富集分析，格 式同-g 参数要求 -s KEGG富集分析需要指定的通路（pathway)物种类别，可指定动物/植物/原核,默认使用所有物种。 -d 对除GO/KEGG 之外的其他数据库富集分析结果时，需要添加条目描述信息的文件，第一列为功能数据库条目，其他列为 条目的描述信息 -j 富集显著性pvalue值的矫正方法，默认方式使用FDR -p 选择富集结果绘图以原始pvalue值展示，还是经过矫正的padjust值展示 -gd GO富集结果存放目录，默认创建并存放GO目录下 -kd KEGG（或其他数据库），默认创建并存放KEGG目录下 -P 最大进程数，支持多个基因集文件同时运行的最大并行数，默认为6. 三. 结果展示: 输出的目录结果包含以下三个文件： *enrichment.xls: 富集结果详情文件。 *enrichment.pdf： 富集结果中显著性条目展示图 参考文献 Klopfenstein, D.V., Zhang, L., Pedersen, B.S. et al. GOATOOLS: A Python library for Gene Ontology analyses. Sci Rep 8, 10872 (2018). Kotlyar VV, Skidanov RV, Khonina SN, Soifer VA. Hypergeometric modes. Opt Lett. 2007 Apr 1;32(7):742-4. doi: 10.1364/ol.32.000742. PMID: 17339921. Reimand, J., Isserlin, R., Voisin, V. et al. Pathway enrichment analysis and visualization of omics data using g:Profiler, GSEA, Cytoscape and EnrichmentMap. Nat Protoc 14, 482–517 (2019). ","date":"2020-12-16","objectID":"/posts/enrichment-analysis/:0:3","tags":["RNAseq","enrich","GO","KEGG","富集"],"title":"富集分析","uri":"/posts/enrichment-analysis/"},{"categories":["RNAseq"],"content":"对存在批次的表达谱按样本，进行去批次矫正","date":"2020-12-14","objectID":"/posts/batch-correction/","tags":["RNAseq","Combat","correction","批次","batch"],"title":"Combat 进行批次矫正","uri":"/posts/batch-correction/"},{"categories":["RNAseq"],"content":"一. 目的： ","date":"2020-12-14","objectID":"/posts/batch-correction/:0:0","tags":["RNAseq","Combat","correction","批次","batch"],"title":"Combat 进行批次矫正","uri":"/posts/batch-correction/"},{"categories":["RNAseq"],"content":"对存在批次的批次的表达谱按样本进行去批次矫正 二. 使用示例： ","date":"2020-12-14","objectID":"/posts/batch-correction/:0:1","tags":["RNAseq","Combat","correction","批次","batch"],"title":"Combat 进行批次矫正","uri":"/posts/batch-correction/"},{"categories":["RNAseq"],"content":"程序执行： ` Rscript /mnt/ilustre/centos7users/daokuan.zhang/workspace/develop/batchEffect/Combat/Combat.R -e unigene.tpm.matrix.xls -p batch_info.txt -o ./ ","date":"2020-12-14","objectID":"/posts/batch-correction/:0:2","tags":["RNAseq","Combat","correction","批次","batch"],"title":"Combat 进行批次矫正","uri":"/posts/batch-correction/"},{"categories":["RNAseq"],"content":"例子路径 - 参数说明： -e 表达量矩阵文件 -p 样本分组文件，表头为sample \u003ctab \u003ebatch \u003ctab\u003egroup -o 结果输出路径，默认为当前路径下Result目录内 三. 结果展示: 输出的目录结果包含以下三个文件： removeBatch.matrix.txt: 去批次矫正后的表达矩阵结果 before.removeBatch.PCA.pdf: 原始表达矩阵PCA 批次信息展示图 after.removeBatch.PCA.pdf: 去批次后表达矩阵PCA 批次信息展示图 参考文献 W. Evan Johnson, Cheng Li, Ariel Rabinovic, Adjusting batch effects in microarray expression data using empirical Bayes methods, Biostatistics, Volume 8, Issue 1, January 2007, Pages 118–127. Yuqing Zhang, Giovanni Parmigiani, W Evan Johnson, ComBat-seq: batch effect adjustment for RNA-seq count data, NAR Genomics and Bioinformatics, Volume 2, Issue 3, September 2020, lqaa078. ","date":"2020-12-14","objectID":"/posts/batch-correction/:0:3","tags":["RNAseq","Combat","correction","批次","batch"],"title":"Combat 进行批次矫正","uri":"/posts/batch-correction/"},{"categories":["tools"],"content":"将PDF文件格式转成png图片格式","date":"2020-12-14","objectID":"/posts/pdf-to-png/","tags":["pdf2png","图片转换"],"title":"Linux环境下，将PDF图片格式转成png图片格式","uri":"/posts/pdf-to-png/"},{"categories":["tools"],"content":"pdf2png 脚本路径：/mnt/ilustre/centos7users/xiaolong.he/develop/tools/pdf2png.py 用法示例 $ python3 pdf2png.py -i ./ demo: 参考文献（参考工具连接） ","date":"2020-12-14","objectID":"/posts/pdf-to-png/:0:0","tags":["pdf2png","图片转换"],"title":"Linux环境下，将PDF图片格式转成png图片格式","uri":"/posts/pdf-to-png/"},{"categories":["RNAseq","tools"],"content":"根据基因的表达量进行时间序列分析","date":"2020-12-14","objectID":"/posts/stem-sop/","tags":["STEM","时间序列","RNAseq","表达量"],"title":"The Short Time-series Expression Miner","uri":"/posts/stem-sop/"},{"categories":["RNAseq","tools"],"content":"STEM: a tool for the analysis of short time series gene expression data STEM官方帮助文档 ","date":"2020-12-14","objectID":"/posts/stem-sop/:0:0","tags":["STEM","时间序列","RNAseq","表达量"],"title":"The Short Time-series Expression Miner","uri":"/posts/stem-sop/"},{"categories":["RNAseq","tools"],"content":"一. 数据准备 RNseq 表达矩阵文件:行为基因，列为样本 ","date":"2020-12-14","objectID":"/posts/stem-sop/:1:0","tags":["STEM","时间序列","RNAseq","表达量"],"title":"The Short Time-series Expression Miner","uri":"/posts/stem-sop/"},{"categories":["RNAseq","tools"],"content":"二. Pipeline 脚本位置： /mnt/ilustre/centos7users/daokuan.zhang/workspace/develop/STEM/STEM.py 用法示例： python /mnt/ilustre/centos7users/daokuan.zhang/workspace/develop/STEM/STEM.py matrix.txt ","date":"2020-12-14","objectID":"/posts/stem-sop/:2:0","tags":["STEM","时间序列","RNAseq","表达量"],"title":"The Short Time-series Expression Miner","uri":"/posts/stem-sop/"},{"categories":["RNAseq","tools"],"content":"三. 代码 #!/usr/bin/env python # -*- coding: utf-8 -*- #Author daokuan.zhang #Usage: python STEM.py express_matrix.txt import os,sys import seaborn as sns import pandas as pd import matplotlib.pyplot as plt import subprocess from shutil import copyfile def custom_plot(x, y, **kwargs): ax = plt.gca() data = kwargs.pop('data') profile = kwargs.pop('profile') colordict = kwargs.pop('colordict') pid = data['Profile ID'].tolist()[0] row = profile.loc[pid] cluster = row['Cluster (-1 non-significant)'] color = colordict.get(cluster) ax.patch.set_fc(color) pvalue = row['p-value'] ax.annotate(s='pvalue:%.2g' % pvalue, xy=(0.5, 0.95), xycoords='axes fraction') genes = row['# %ss Assigned' % term] ax.annotate(s='%ss: %d' % (term, genes), xy=(0.05, 0.05), xycoords='axes fraction') data.plot(x=x, y=y, ax=ax, grid=False, **kwargs) def plothline(x, y, **kwargs): plt.axhline(y=0, alpha=0.5, color='k', lw=0.1) def profileoutput(): creat = \"all\" sigprofile = profile[ profile['p-value'] \u003c= 0.05] if creat == 'significant' else profile sigprofile = sigprofile.sort_values('p-value') for i2, (profileid, prow) in enumerate(sigprofile.iterrows(), 1): name2 = '%d_Profile_%d' % (i2, profileid) try: gd = group.get_group(str(profileid)) except KeyError: try: gd = group.get_group(profileid) except KeyError: continue if gd.empty: continue gd = gd.ix[:, 2:] fig, ax = plt.subplots() plt.axhline(y=0, c='k', lw=1, alpha=0.5) gdt = gd.T gdt.plot(colormap='Set2', legend=False, lw=1, ax=ax, alpha=0.5, xticks=range(len(gdt))) model = [float(n) for n in prow['Profile Model'].split(',')] ax.plot(range(gdt.shape[0]), model, lw=2, c='g', alpha=0.8) ylabel = 'Expression Change(log2(v(i)/v(0))' plt.ylabel(ylabel) plt.xlabel('Times') plt.title('Profile Model:(%s)\\n%d%ss Assigned; %d%ss Expected; p-value=%.2g' % (prow['Profile Model'], prow['# %ss Assigned' % term], term, prow['# %sExpected' % term], term, prow['p-value'])) ax.spines['left'].set_position(('data', 0)) gd.columns += \".%s\" % ylabel pdfname= name2+\".pdf\" plt.savefig(pdfname) gd.to_csv(name2 + '.xls', index_label='id', sep='\\t') stembin=\"/mnt/ilustre/centos7users/daokuan.zhang/workspace/develop/softwareKits/STEM/stem.jar\" conf=\"/mnt/ilustre/centos7users/daokuan.zhang/workspace/develop/softwareKits/STEM/config.txt\" if not os.path.exists(\"stem_out\"): os.makedirs(\"stem_out\") copyfile(sys.argv[1],\"stem_matrix.xls\") copyfile(conf,\"stem.txt\") subprocess.check_call('java -mx1024M -jar \"%s\" -b stem.txt stem_out' % (stembin),shell=True) data = pd.read_csv(\"stem_out/stem_genetable.txt\",index_col=0,sep=\"\\t\") profile = pd.read_csv(\"stem_out/stem_profiletable.txt\",index_col=0,sep=\"\\t\") matrix = pd.read_csv(\"stem_matrix.xls\",index_col=0,header=0,sep=\"\\t\") os.chdir(\"stem_out\") gene_map = {str(n).upper(): n for n in matrix.index} data.index = [gene_map.get(n) for n in data.index] group = data.groupby(by='Profile') data = data.iloc[:, 2:].astype(float) profile.sort_values('p-value', inplace=True) model = profile['Profile Model'].str.split(',', expand=True) model.columns = data.columns model = model.astype(float).astype(int) model.columns.set_names('time', inplace=True) cluster = profile['Cluster (-1 non-significant)'].unique() ncolors = sns.color_palette('pastel', n_colors=len(cluster) - 1) ncolors.append('#BEBEBE') colordict = dict(zip(cluster, ncolors)) model_stack = model.stack().reset_index(name='model') term=\"Gene\" grid = sns.FacetGrid(data=model_stack, col_wrap=8, col='Profile ID',col_order=profile.index) grid.map_dataframe(custom_plot, 'time', 'model', lw=1, profile=profile, colordict=colordict) grid.map(plothline, 'time', 'model') grid.savefig('SummaryPlot.pdf') profileoutput() ","date":"2020-12-14","objectID":"/posts/stem-sop/:3:0","tags":["STEM","时间序列","RNAseq","表达量"],"title":"The Short Time-series Expression Miner","uri":"/posts/stem-sop/"},{"categories":["RNAseq","tools"],"content":"结果说明 - stem_profiletable.txt：各profile 在不同时间点变化趋势值文件 - stem_genetable.txt：各基因所属的profile以及cluster编号信息文件 - SummaryPlot.pdf: 所有profile的趋势图 - Profile_detail： 每个profile的基因变化趋势结果文件夹 ","date":"2020-12-14","objectID":"/posts/stem-sop/:4:0","tags":["STEM","时间序列","RNAseq","表达量"],"title":"The Short Time-series Expression Miner","uri":"/posts/stem-sop/"},{"categories":["RNAseq","tools"],"content":"注意 如有生物学重复，使用均值进行时序分析 参考文献 Ernst, J., Bar-Joseph, Z. STEM: a tool for the analysis of short time series gene expression data. BMC Bioinformatics 7, 191 (2006). ","date":"2020-12-14","objectID":"/posts/stem-sop/:5:0","tags":["STEM","时间序列","RNAseq","表达量"],"title":"The Short Time-series Expression Miner","uri":"/posts/stem-sop/"},{"categories":["RNAseq","Pipeline"],"content":"根据基因的表达量进行eQTL分析","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"eQTL ","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:0:0","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"数据准备 物种的gff文件 vcf文件（已做完基因型填充） $java -jar /mnt/ilustre/centos7users/xiaolong.he/bin/beagle/beagle.18May20.d20.jar gt=/mnt/ilustre/centos7users/xiaolong.he/others/GWAS_mengluo/KF/pop.uniq.vcf out=/mnt/ilustre/centos7users/xiaolong.he/others/GWAS_mengluo/KF/pop.phased\u003e 基因表达量矩阵（行为基因，列为样本） ","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:1:0","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"Pipeline 示例： python eQTL.Pipeline.py -e expression.xls -c covariates -g ref.gff -p test -r 50 -o ./\u003e 其中`-c`参数为可选参数 #!/usr/bin/env python # -*-coding:utf-8-*- import os import argparse import subprocess import time start = time.time() parser = argparse.ArgumentParser(description=\"GWAS.py\") parser.add_argument('-v', '--vcf', required=True, help='the vcf file') parser.add_argument('-e', '--expression', required=True, help='the gene expression metrix') parser.add_argument('-c', '--covariates', help='the covariates file', default = 'None') parser.add_argument('-g', '--gff', required=True, help='the gff file') parser.add_argument('-p', '--prefix', required=True,help='prefix out filename') parser.add_argument('-m', '--model', help='models, such as ANOVA/A, LINEAR/L, LINEAR_CROSS/C', default = 'L') parser.add_argument('-r', '--ram', help='RAM for running', default = 20) parser.add_argument('-o', '--outpath', required=True, help='the output path, which end with /') args = parser.parse_args() def data_prepare(): out = os.path.abspath(args.outpath) vcf = os.path.abspath(args.vcf) gff = os.path.abspath(args.gff) os.chdir(out) if os.path.exists('work_sh'): pass else: os.mkdir('work_sh') scpath = os.path.abspath(os.path.dirname(__file__)) f = open(\"work_sh/eqtl.sh\", \"w\") step1 = scpath+'/step01.vcf2num.R' f.writelines(\"cd \" + out + \" \u0026\u0026 \") f.writelines(\"Rscript \" + step1 + \" -v \" + vcf + \" -o \" + out + \" -p \" + args.prefix + \" \u0026 \") # f2 = open(\"work_sh/step02.gff2geneloc.sh\", \"w\") step2 = scpath+'/step02.gff2geneloc.py' f.writelines(\"python \" + step2 + \" -g \" + gff + \" -o \" + out + ' \u0026\u0026 ') # f3 = open(\"work_sh/step03.eqtl.sh\", \"w\") step3 = scpath+'/step03.eqtl.R' if args.covariates != \"None\": f.writelines(\"export R_LIBS=;export R_HOME=;export RHOME=;/mnt/ilustre/centos7users/dna/.env/R-3.6.1/bin/Rscript \"+ step3 \\ + \" -s \" + out + args.prefix + \".SNP.txt\" + \" -e \" + args.expression + \" -c \" + args.covariates + \" -l \" + out + \\ args.prefix + \".snpsloc.txt\" + \" -g \"+ \"geneloc.txt\" + \" -o \" + args.outpath) else: f.writelines(\"export R_LIBS=;export R_HOME=;export RHOME=;/mnt/ilustre/centos7users/dna/.env/R-3.6.1/bin/Rscript \" + step3 \\ + \" -s \" + out + args.prefix + \".SNP.txt\" + \" -e \" + args.expression + \" -l \" + out + args.prefix + \".snpsloc.txt\" \\ + \" -g \"+ \"geneloc.txt\" + \" -m \" + args.model + \" -o \" + out) f.close() os.chdir(\"work_sh\") subprocess.Popen([\"qsub-slurm.pl\", \"--Resource\", \"mem=\"+args.ram, \"--CPU\", \"2\", \"eqtl.sh\"]) if __name__ == '__main__': data_prepare() end = time.time() print('Running time: %sSeconds'%(end-start)) ","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:2:0","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"setp1 data prepare 从vcf文件提取snp位置信息，以及snp基因型矩阵 #/usr/bin/env Rscript .libPaths(c(\"/mnt/ilustre/centos7users/meng.luo/.env/lib/R/library/\",\"/mnt/ilustre/centos7users/xiaolong.he/lib/R3.5/\")) library('getopt') options(bitmapType='cairo') spec = matrix(c( 'vcf','v',1,'character', 'outdir','o',1,'character', 'prefix','p',1,'character', 'help','h',0,'logical' ),byrow=TRUE, ncol=4); opt = getopt(spec) print_usage \u003c- function(spec=NULL){ cat(getopt(spec, usage=TRUE)) cat(\"Usage example: \\n\") cat(\" Usage example: Rscript vcf2num.R Usage: --vcf vcf --outdir outdir --prefix prefix name for out --help usage\\n\") q(status=1) } if ( !is.null(opt$help)) { print_usage(spec) } if ( is.null(opt$vcf)) { print_usage(spec) } if ( is.null(opt$outdir)) { print_usage(spec) } if ( is.null(opt$prefix)) { print_usage(spec) } setwd(opt$outdir) library(rMVP) MVP.Data.VCF2MVP(opt$vcf, out=opt$prefix, threads=1) geno \u003c- attach.big.matrix(paste(opt$prefix,\"geno.desc\",sep='.')) map \u003c- read.table(paste(opt$prefix,\"geno.map\",sep='.'),header=T,stringsAsFactors=F) samples \u003c- read.table(paste(opt$prefix,\"geno.ind\",sep='.'),header=F,stringsAsFactors=F) dat \u003c- as.data.frame(geno[,]) # dat[is.na(dat)] \u003c- 0 # new_dat \u003c- cbind(map$SNP,dat) dat_imu \u003c- matrix(nrow=dim(dat)[1],ncol=dim(dat)[2]) for(i in 1:dim(dat)[1]){ line \u003c- as.numeric(dat[i,]) aver \u003c- mean(line,na.rm=TRUE) line[is.na(line)] \u003c- aver dat_imu[i,] \u003c- line } new_dat \u003c- cbind(map$SNP,dat_imu) colnames(new_dat) \u003c- c(\"snpid\",samples[,1]) write.table(new_dat,paste(opt$prefix,'SNP.txt',sep='.'),col.names=T,row.names=F,sep='\\t',quote=F) snpsloc \u003c- map[,1:3];names(snpsloc)\u003c-c(\"snpid\",\"chr\",\"pos\") write.table(snpsloc,paste(opt$prefix,'snpsloc.txt',sep='.'),col.names=T,row.names=F,sep='\\t',quote=F) save.image(paste(opt$prefix,\"RData\",sep=\".\")) print(\"This-work-has-been-completed!\") proc.time() ","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:3:0","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"结果展示： ","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:3:1","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"step2 data prepare 从gff文件提取gene位置信息 #!/usr/bin/env python # -*-coding:utf-8-*- import os import argparse import subprocess parser = argparse.ArgumentParser(description=\"GWAS.py\") parser.add_argument('-g', '--gff', required=True, help='the gff file') parser.add_argument('-o', '--outpath', required=True, help='the output path, which end with /') args = parser.parse_args() def gff2geneloc(): f = open(args.gff, 'r') fo = open(args.outpath + \"geneloc.txt\", \"w\") fo.writelines(\"geneid\\tchr\\tleft\\tright\\n\") geneloc = [] genes = [] for line in f: Chr = line.strip().split('\\t')[0] loc1 = line.strip().split('\\t')[3] loc2 = line.strip().split('\\t')[4] geneid = line.strip().split('\\t')[8].split(';')[1].split('=')[1] if int(loc1) \u003c int(loc2): left = loc1 right = loc2 else: left = loc2 right = loc1 if geneid not in genes: genes.append(geneid) geneloc.append(geneid + '\\t' + Chr + '\\t' + left + '\\t' + right + '\\n') fo.writelines(i for i in geneloc) f.close() fo.close() if __name__ == '__main__': gff2geneloc() ","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:4:0","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"结果展示： ","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:4:1","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"step3 calculate eQTL matrix 利用基因表达矩阵、基因位置文件、snp、snp位置文件、协变量矩阵（可选），计算cis、trans作用位点 #!/usr/bin/env Rscript3.6 .libPaths(\"/mnt/ilustre/centos7users/xiaolong.he/R/x86_64-pc-linux-gnu-library/3.6/\") library('getopt'); options(bitmapType='cairo') spec = matrix(c( 'snps','s',1,'character', 'expressions','e',1,'character', 'covariates','c',2,'character', 'snpspos','l', 2,'character', 'genespos','g',2,'character', 'outdir','o',1,'character', 'threshold','t',2,'numeric', 'distance','d',2,'numeric', 'model','m',2,'character', 'help','h',0,'logical' ), byrow=TRUE, ncol=4); opt = getopt(spec); print_usage \u003c- function(spec=NULL){ cat(getopt(spec, usage=TRUE)); cat(\"Usage example: \\n\"); cat(\" Usage example: Rscript eqtl.R Usage: --snps the snps file --expressions the expressions file --covariates the covariates file --snpspos snps position file --genespos genes position file --threshold threshold, defaule 1e-2 --distance distance, default 1e6 --model model, such as ANOVA/A, LINEAR/L, LINEAR_CROSS/C, default LINEAR --outdir outdir --help usage\\n\" ); q(status=1); } if ( !is.null(opt$help)) { print_usage(spec) } if ( is.null(opt$snps)) { print_usage(spec) } if ( is.null(opt$expressions)){ print_usage(spec) } if ( is.null(opt$threshold)){ opt$threshold = 1e-2 } if ( is.null(opt$distance)){ opt$distance = 1e6 } if ( is.null(opt$model)){ opt$model = 'A' } if ( is.null(opt$outdir)){ print_usage(spec) } # if ( is.null(opt$covariates)){ print_usage(spec) } suppressMessages(library(MatrixEQTL)) if(opt$model == 'L'){ useModel = modelLINEAR; }else if(opt$model == 'A'){ useModel = modelANOVA }else if(opt$model == 'C'){ useModel = modelLINEAR_CROSS } snps = SlicedData$new(); snps$fileDelimiter = \"\\t\"; # the TAB character snps$fileOmitCharacters = \"NA\"; # denote missing values; snps$fileSkipRows = 1; # one row of column labels snps$fileSkipColumns = 1; # one column of row labels snps$LoadFile(opt$snps); gene = SlicedData$new(); gene$fileDelimiter = \"\\t\"; # the TAB character gene$fileOmitCharacters = \"NA\"; # denote missing values; gene$fileSkipRows = 1; # one row of column labels gene$fileSkipColumns = 1; # one column of row labels gene$LoadFile(opt$expressions); # errorCovariance = numeric(); pvOutputThreshold = opt$threshold cvrt = SlicedData$new(); cvrt$fileDelimiter = \"\\t\"; # the TAB character cvrt$fileOmitCharacters = \"NA\"; # denote missing values; cvrt$fileSkipRows = 1; # one row of column labels cvrt$fileSkipColumns = 1; # one column of row labels if(length(opt$covariates)\u003e0) { cvrt$LoadFile(opt$covariates); } if (!is.null(opt$snpspos) \u0026 !is.null(opt$genespos)){ output_file_name_cis = tempfile(); output_file_name_tra = tempfile(); pvOutputThreshold_cis = opt$threshold; pvOutputThreshold_tra = opt$threshold; cisDist = opt$distance; snpspos = read.table(opt$snpspos, header = TRUE, stringsAsFactors = FALSE); genepos = read.table(opt$genespos, header = TRUE, stringsAsFactors = FALSE); meq = Matrix_eQTL_main( snps = snps, gene = gene, cvrt = cvrt, output_file_name = output_file_name_tra, pvOutputThreshold = pvOutputThreshold_tra, useModel = useModel, # errorCovariance = errorCovariance, verbose = TRUE, output_file_name.cis = output_file_name_cis, pvOutputThreshold.cis = pvOutputThreshold_cis, snpspos = snpspos, genepos = genepos, cisDist = cisDist, pvalue.hist = \"qqplot\", min.pv.by.genesnp = FALSE, noFDRsaveMemory = FALSE); unlink(output_file_name_tra); unlink(output_file_name_cis); write.csv(meq$cis$eqtl, paste(opt$outdir,'cis.eqtl.csv',sep=''),row.names=F,quote=F) write.csv(meq$trans$eqtl, paste(opt$outdir,'trans.eqtl.csv',sep=''),row.names=F,quote=F) save.image(\"meq.RData\") meh = Matrix_eQTL_main( snps = snps, gene = gene, cvrt = cvrt, output_file_name = output_file_name_tra, pvOutputThreshold = pvOutputThreshold_tra, useModel = useModel, # errorCovariance = numeric(), verbose = TRUE, output_file_name.cis = output_file_name_cis, pvOutputThreshold.cis = pvOutputThreshold_cis, snpspos = snpspos, genepos = genepos,cisDist = cisDist, pvalue.hist = 100, min","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:5:0","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"结果展示： ","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:5:1","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["RNAseq","Pipeline"],"content":"参考文献 Andrey A. Shabalin, Matrix eQTL: ultra fast eQTL analysis via large matrix operations, Bioinformatics, Volume 28, Issue 10, 15 May 2012, Pages 1353–1358. ","date":"2020-12-14","objectID":"/posts/matrix-eqtl-twas/:6:0","tags":["eQTL","TWAS","RNAseq","表达量","定位"],"title":"TWAS/eQTL analysis pipeline","uri":"/posts/matrix-eqtl-twas/"},{"categories":["pipeline"],"content":"计算PEER来做eQTL分析的协变量进行后续的分析，增加检测变异位点的功效","date":"2020-12-14","objectID":"/posts/probabilistic-estimation-of-expression-residuals/","tags":["Linear Model","PEER","R","RNAseq","expression","power"],"title":"Using probabilistic estimation of expression residuals (PEER) to obtain increased power and interpretability of gene expression analyses","uri":"/posts/probabilistic-estimation-of-expression-residuals/"},{"categories":["pipeline"],"content":"peer 官方帮助文档 一、数据准备 输入数据为表达量矩阵文件，其中行为基因，列为样本： 二、使用说明 脚本路径：/mnt/ilustre/centos7users/xiaolong.he/develop/eQTL/peer/peer.R 示例： export R_LIBS=;export R_HOME=;export RHOME=;/mnt/ilustre/centos7users/dna/.env/conda/envs/peer/lib/R/bin/Rscript /mnt/ilustre/centos7users/xiaolong.he/develop/eQTL/peer/peer.R -e SDKF.txt -n 40 -c 20 ","date":"2020-12-14","objectID":"/posts/probabilistic-estimation-of-expression-residuals/:0:0","tags":["Linear Model","PEER","R","RNAseq","expression","power"],"title":"Using probabilistic estimation of expression residuals (PEER) to obtain increased power and interpretability of gene expression analyses","uri":"/posts/probabilistic-estimation-of-expression-residuals/"},{"categories":["pipeline"],"content":"参数详情 --expression must matrix of counts 输入表达矩阵文件 --num selectable calculate the nume of factor, default 40 计算因子数，默认40 --covariate selectable the nume for covariates, default 20 提取协变量数，默认20 ","date":"2020-12-14","objectID":"/posts/probabilistic-estimation-of-expression-residuals/:0:1","tags":["Linear Model","PEER","R","RNAseq","expression","power"],"title":"Using probabilistic estimation of expression residuals (PEER) to obtain increased power and interpretability of gene expression analyses","uri":"/posts/probabilistic-estimation-of-expression-residuals/"},{"categories":["pipeline"],"content":"代码 1 #!/usr/bin/env Rscript 2 suppressMessages(library(\"getopt\")) 3 options(bitmapType='cairo') 4 spec = matrix(c( 5 'expression','e',1,'character', 6 'num','n',2,'numeric', 7 'covariate','c',2,'numeric', 8 'help','h',0,'logical' 9 ), byrow=TRUE, ncol=4); 10 opt = getopt(spec); 11 print_usage \u003c- function(spec=NULL){ 12 cat(getopt(spec, usage=TRUE)); 13 cat(\"Usage example: \\n\"); 14 cat(\"Usage example: 15 Rscript indel_len.r --i --o 16 Usage: 17 --expression must matrix of counts 18 --num selectable calculate the nume of factor,default 40 19 --covariate selectable the nume for covariates, default20 20 --help usage\\n\" 21 ); 22 q(status=1); 23 } 24 25 if ( !is.null(opt$help)) {print_usage(spec)} 26 if ( is.null(opt$expression)){print_usage(spec)} 27 if ( is.null(opt$num)){opt$num = 40} 28 if ( is.null(opt$covariate)){opt$covariate = 20} 29 30 suppressMessages(library(\"peer\")) 31 32 dat \u003c- read.table(opt$expression, header=T,row.names=1,sep='\\t'stringsAsFactors=F) 33 dat \u003c- t(dat) 34 model = PEER() 35 PEER_setPhenoMean(model,as.matrix(dat)) 36 PEER_setNk(model,opt$num) 37 PEER_getNk(model) 38 39 # 此步骤较为耗时 40 PEER_update(model) 41 42 factors = PEER_getX(model) 42 factors = PEER_getX(model) 43 44 colname \u003c- c(\"id\",rownames(dat)) 45 rowname \u003c- paste(\"cova\", 1:dim(factors)[2],sep=\"\") 46 covariates \u003c- data.frame(rowname, t(factors)) 47 colnames(covariates) \u003c- colname 48 49 write.table(covariates,\"covariates_all.xls\",sep=\"\\t\",col.names=Trow.names=F,quote=F) 50 write.table(covariates[1:opt$covariate,],\"covariates_20.xls\"sep=\"\\t\", col.names=T,row.names=F,quote=F) 51 save.image(\"peer.RData\") 52 proc.time() 三、结果展示 ","date":"2020-12-14","objectID":"/posts/probabilistic-estimation-of-expression-residuals/:0:2","tags":["Linear Model","PEER","R","RNAseq","expression","power"],"title":"Using probabilistic estimation of expression residuals (PEER) to obtain increased power and interpretability of gene expression analyses","uri":"/posts/probabilistic-estimation-of-expression-residuals/"},{"categories":["pipeline"],"content":"结果目录展示： ","date":"2020-12-14","objectID":"/posts/probabilistic-estimation-of-expression-residuals/:0:3","tags":["Linear Model","PEER","R","RNAseq","expression","power"],"title":"Using probabilistic estimation of expression residuals (PEER) to obtain increased power and interpretability of gene expression analyses","uri":"/posts/probabilistic-estimation-of-expression-residuals/"},{"categories":["pipeline"],"content":"covariates结果文件内容展示 注意: 脚本所用R为coda环境的版本，版本号为3.4，路径为/mnt/ilustre/centos7users/dna/.env/conda/envs/peer/lib/R/bin/R，使用时请参照示例。 参考文献 Stegle, O., Parts, L., Piipari, M. et al. Using probabilistic estimation of expression residuals (PEER) to obtain increased power and interpretability of gene expression analyses. Nat Protoc 7, 500–507 (2012). ","date":"2020-12-14","objectID":"/posts/probabilistic-estimation-of-expression-residuals/:0:4","tags":["Linear Model","PEER","R","RNAseq","expression","power"],"title":"Using probabilistic estimation of expression residuals (PEER) to obtain increased power and interpretability of gene expression analyses","uri":"/posts/probabilistic-estimation-of-expression-residuals/"},{"categories":["RNAseq","tools"],"content":"根据比对率生产假的原始序列数据","date":"2020-12-14","objectID":"/posts/mapping-make-fake-data/","tags":["比对率","数据","RNAseq","原始数据"],"title":"根据比对率生产假的原始序列数据","uri":"/posts/mapping-make-fake-data/"},{"categories":["RNAseq","tools"],"content":"Mapping ","date":"2020-12-14","objectID":"/posts/mapping-make-fake-data/:0:0","tags":["比对率","数据","RNAseq","原始数据"],"title":"根据比对率生产假的原始序列数据","uri":"/posts/mapping-make-fake-data/"},{"categories":["RNAseq","tools"],"content":"一. 数据准备 比对的到的bam文件：DMSO_1.bam ","date":"2020-12-14","objectID":"/posts/mapping-make-fake-data/:1:0","tags":["比对率","数据","RNAseq","原始数据"],"title":"根据比对率生产假的原始序列数据","uri":"/posts/mapping-make-fake-data/"},{"categories":["RNAseq","tools"],"content":"二. 使用说明 脚本路径： /mnt/ilustre/centos7users/xiaolong.he/develop/after_sales/mapping/scripts/pipeline.py 用法示例：nohup python ../scripts/pipeline.py -i data/ -o ./ -a 1 -e 7 -t 0.8 \u0026 示例路径： /mnt/ilustre/centos7users/xiaolong.he/develop/after_sales/mapping/demo ","date":"2020-12-14","objectID":"/posts/mapping-make-fake-data/:2:0","tags":["比对率","数据","RNAseq","原始数据"],"title":"根据比对率生产假的原始序列数据","uri":"/posts/mapping-make-fake-data/"},{"categories":["RNAseq","tools"],"content":"参数详情 usage: pipeline.py [-h] -i INPUTDIR [-r RAWDIR] -o OUTDIR [-t THRESHOLD] [-a START] [-e STOP] pipleline.py optional arguments: -h, --help show this help message and exit -i INPUTDIR, --inputdir INPUTDIR the bam file path # bam 文件路径 -r RAWDIR, --rawdir RAWDIR the raw data file path # 提取raw时，raw文件路径 -o OUTDIR, --outdir OUTDIR the out path # 输出结果储存路径 -t THRESHOLD, --threshold THRESHOLD attain mapping rates # 处理后要到达的比对率 -a START, --start START start step # 起始步骤，默认1 -e STOP, --stop STOP end step, when rawdir exist, stop is 5, else is 7 # 结束步骤，提起raw data 时默认5， clean data 默认7 ","date":"2020-12-14","objectID":"/posts/mapping-make-fake-data/:2:1","tags":["比对率","数据","RNAseq","原始数据"],"title":"根据比对率生产假的原始序列数据","uri":"/posts/mapping-make-fake-data/"},{"categories":["RNAseq","tools"],"content":"三. Pipeline代码 #!/usr/bin/env python # -*-coding:utf-8-*- #!/usr/bin/env python # -*-coding:utf-8-*- import os import argparse import subprocess parser = argparse.ArgumentParser(description=\"pipleline.py\") parser.add_argument('-i', '--inputdir', required=True, help='the bam file path') parser.add_argument('-r', '--rawdir', default=\"False\", help='the raw data file path') parser.add_argument('-o', '--outdir', required=True, help='the out path') parser.add_argument('-t', '--threshold', type=float, help='attain mapping rates', default = 0.8) parser.add_argument('-a', '--start', type=int, help='start step', default = 1) parser.add_argument('-e', '--stop', required=False, type=int, help='end step, when rawdir exist, stop is 5, else is 7') args = parser.parse_args() if __name__ == '__main__': inpath = os.path.abspath(args.inputdir) outpath = os.path.abspath(args.outdir) scpath = os.path.abspath(os.path.dirname(__file__)) if os.path.exists('work_sh'): pass else: os.mkdir('work_sh') pipe_sh = outpath+'/work_sh/pipe_test.sh' sh = [] sh.append(\"python3 %s-i %s-o %s\u0026\u0026 \"%(scpath+'/bin/'+'01.bam_map_unmap.py', inpath, outpath)) sh.append(\"python3 %s-i %s\u0026\u0026 \"%(scpath+'/bin/'+'02.bam2fq.py',outpath)) sh.append(\"python3 %s-i %s\u0026\u0026 \"%(scpath+'/bin/'+'03.get_ids.py',outpath)) # print(args.stop) if args.rawdir == \"False\": if args.stop == None: args.stop = 7 sh.append(\"python3 %s-i %s\u0026\u0026 \"%(scpath+'/bin/'+'04.both_no_map_name.py', outpath)) sh.append(\"python3 %s-i %s-t %s\u0026\u0026 \"%(scpath+'/bin/'+'05.sig_map_name.py', outpath, str(args.threshold))) sh.append(\"python3 %s-i %s\u0026\u0026 \"%(scpath+'/bin/'+'06.getseq.py', outpath)) sh.append(\"python3 %s-i %s\"%(scpath+'/bin/'+'07.combine.py', outpath)) else: if args.stop == None: args.stop = 5 sh.append(\"python3 %s-i %s\u0026\u0026 \"%(scpath+'/bin/'+'04.get_names.py', outpath)) rawpath = os.path.abspath(args.rawdir) sh.append(\"python3 %s-i %s-r %s\"%(scpath+'/bin/'+'05.get_raw_seq.py', outpath, rawpath)) f = open(pipe_sh, 'w') for i in range(args.start,args.stop+1): f.writelines(sh[i-1]) f.close() subprocess.Popen([\"qsub-slurm.pl\", \"--Resource\", \"mem=10G\", \"--CPU\", \"1\", pipe_sh]) ","date":"2020-12-14","objectID":"/posts/mapping-make-fake-data/:3:0","tags":["比对率","数据","RNAseq","原始数据"],"title":"根据比对率生产假的原始序列数据","uri":"/posts/mapping-make-fake-data/"},{"categories":["RNAseq","tools"],"content":"四. 结果展示 data：为提供的准备数据 Result：经处理后得到的数据 ","date":"2020-12-14","objectID":"/posts/mapping-make-fake-data/:4:0","tags":["比对率","数据","RNAseq","原始数据"],"title":"根据比对率生产假的原始序列数据","uri":"/posts/mapping-make-fake-data/"},{"categories":["tools"],"content":"各种热图制作","date":"2020-12-14","objectID":"/posts/heatmap-dataviz/","tags":["heatmap","热图"],"title":"热图制作","uri":"/posts/heatmap-dataviz/"},{"categories":["tools"],"content":"Heatmap 脚本所用软件包为：Complex Heatmap 一. 数据准备 数据矩阵： 分组文件： 二. 使用说明 脚本路径：/mnt/ilustre/centos7users/xiaolong.he/develop/plot/heatmap/heatmap.R 用法示例： export R_LIBS=;export R_HOME=;export RHOME=;/mnt/ilustre/centos7users/dna/.env/R-3.6.1/bin/Rscript heatmap.R -i /mnt/ilustre/centos7users/xiaolong.he/develop/plot/data/heatmap.data.txt -g /mnt/ilustre/centos7users/xiaolong.he/develop/plot/data/group.txt -a 5 -c both -n col -s log10 -l blue,white,red -m complete,complete -d euclidean,euclidean -o test ","date":"2020-12-14","objectID":"/posts/heatmap-dataviz/:0:0","tags":["heatmap","热图"],"title":"热图制作","uri":"/posts/heatmap-dataviz/"},{"categories":["tools"],"content":"参数详情 --input must expression matrix # 输入文件，表达量矩阵 --outpre must outfile prefix, default heatmap # 输出文件前缀 --cluster selectable row,col,both or None, default both # 是否行列聚类 --name selectable row,col,both or None, default col # 是否显示行列名 --scale selectable scale method,log2,log10,zscore or no scale # 是否进行数据标准化，默认不做处理 --color selectable heatmap color # 热图颜色 --annot selectable row annotation # 列注释，按所给数值进行划分聚类结果，进行行注释 --group selectable sample groups file # 分组文件，热图列注释按分组文件进行 # 聚类方式，默认complete --clustermethod selectable rows/col cluster method,average/centroid/median/complete/single/ward/density,default both complete # 聚类距离，默认euclidean --distancemethod selectable rows/col distance method, euclidean/maximum/manhattan/canberra/binary/minkowski/pearson/spearman/kendall,default both euclidean --help usage ","date":"2020-12-14","objectID":"/posts/heatmap-dataviz/:0:1","tags":["heatmap","热图"],"title":"热图制作","uri":"/posts/heatmap-dataviz/"},{"categories":["tools"],"content":"代码 1 #!/usr/bin/env Rscript3.6 2 3 suppressMessages(library(\"getopt\")) 4 options(bitmapType='cairo') 5 spec = matrix(c( 6 'input','i',1,'character', 7 'outpre','o',1,'character', 8 'cluster','c',2,'character', 9 'name','n',2,'character', 10 'clustermethod','m',2,'character', 11 'rot','r',2,'numeric', 12 'distancemethod','d',2,'character', 13 'scale','s',2,'character', 14 'annot','a',2,'numeric', 15 'group','g',2,'character', 16 'color','l',2,'character', 17 'help','h',0,'logical' 18 ), byrow=TRUE, ncol=4); 19 opt = getopt(spec); 20 print_usage \u003c- function(spec=NULL){ 21 cat(\"\\n************* R 3.6.1 *************\\n\\n\") 22 cat(getopt(spec, usage=TRUE)); 23 cat(\"Usage example: \\n\"); 24 cat(\" 25 Rscript heatmap.r 26 Usage: 27 --input must expression matrix 28 --outpre must outfile prefix, default heatmap 29 --cluster selectable row,col,both or None, default both 30 --name selectable row,col,both or None, default col 31 --scale selectable scale method,log2,log10,zscore orno scale 32 --color selectable heatmap color 33 --annot selectable row annotation 34 --group selectable sample groups file 35 --rot selectable rot of row labels 36 --clustermethod selectable rows/col cluster method, 37 average/centroid/median/completesingle/ward/density,default both complete 38 --distancemethod selectable rows/col distance method, 39 euclidean/maximum/manhattancanberra/binary/minkowski/pearson/spearman/kendall,default botheuclidean 40 --help usage\\n\" 41 ); 42 q(status=1); 43 } 44 45 46 if ( !is.null(opt$help)) {print_usage(spec)} 47 if ( is.null(opt$input)){print_usage(spec)} 48 if ( is.null(opt$outpre)){print_usage(spec)} 49 if ( is.null(opt$cluster)){opt$cluster = 'both'} 50 if ( is.null(opt$name)){opt$name = 'col'} 51 if ( is.null(opt$rot)){opt$rot = 90} 52 53 ## 1.scale 2.cluster 3. annot 4.color 54 55 # load packages 56 .libPaths(\"/mnt/ilustre/centos7users/xiaolong.he/Rx86_64-pc-linux-gnu-library/3.6/\") 57 suppressMessages(c(library(circlize),library(ComplexHeatmap))) 58 59 # load expression matrix 60 dat \u003c- as.matrix(read.table(opt$input,header=T,row.names=1sep='\\t',stringsAsFactors=F)) 61 62 # scale 63 if(!is.null(opt$scale)){ 64 if(opt$scale == 'log2'){ 65 dat \u003c- log2(dat+1) 66 }else if(opt$scale == 'log10'){ 67 dat \u003c- log10(dat+1) 68 }else if(opt$scale == 'zscore'){ 69 dat \u003c- scale(dat) 70 } 71 } 72 73 # cluster 74 if(opt$cluster == 'both'){ 75 cluster_rows = TRUE; cluster_columns = TRUE 76 }else if(opt$cluster == 'col'){ 77 cluster_rows = FALSE;cluster_columns = TRUE 78 }else if(opt$cluster == 'row'){ 79 cluster_rows = TRUE; cluster_columns = FALSE 80 }else if(opt$cluster == 'None'){ 81 cluster_rows = FALSE; cluster_columns = FALSE 82 } 83 84 # row/col names 85 if(opt$name == 'both'){ 86 row_names = TRUE;columns_names = TRUE; 87 }else if(opt$name == 'col'){ 88 row_names = FALSE;columns_names = TRUE; 89 }else if(opt$name == 'row'){ 90 row_names = TRUE;columns_names = FALSE; 91 }else if(opt$name == 'None'){ 92 row_names = FALSE;columns_names = FALSE; 93 } 94 95 # cluster method 96 if(is.null(opt$clustermethod)){ 97 Clustering \u003c- c('complete','complete') 98 }else{ 99 Clustering = strsplit(opt$clustermethod, ',')[[1]] 100 } 101 102 # distance method 103 if(is.null(opt$distancemethod)){ 104 distance = c('euclidean', 'euclidean') 105 }else{ 106 distance = strsplit(opt$distancemethod, ',')[[1]] 107 } 108 109 # color 110 if(is.null(opt$color)){ 111 color \u003c- colorRampPalette(c(\"navy\", \"white\", \"firebrick3\"))(50) 112 }else{ 113 #a \u003c- as.character(strsplit(opt$color, ','));print(a):prin(typeof(a)) 114 color \u003c- colorRampPalette(as.vector(strsplit(opt$color, ','))[1]])(50) 115 } 116 117 # annot: unused argument( left_annotation), unsolved 118 if(!is.null(opt$annot)){ 119 row_anno \u003c- rowAnnotation(foo = anno_block(gp = gpar(fill = 2(opt$annot+1)), 120 labels_gp = gpar(col = \"white\", fontsize = 10))) 121 } 122 123 if(!is.null(opt$group)){ 124 group \u003c- read.table(opt$group,header=T,row.names=1,sep='\\t'stringsAsFactors=F) 125 # print(group) 126 cols_anno ","date":"2020-12-14","objectID":"/posts/heatmap-dataviz/:1:0","tags":["heatmap","热图"],"title":"热图制作","uri":"/posts/heatmap-dataviz/"},{"categories":["tools"],"content":"结果展示 注意： 由于ComplexHeatmap版本问题，此脚本运行需在R3.6及以上版本运行，集群默认版本运行会报错。 参考文献 Gu Z, Eils R, Schlesner M (2016). Complex heatmaps reveal patterns and correlations in multidimensional genomic data. Bioinformatics. ","date":"2020-12-14","objectID":"/posts/heatmap-dataviz/:2:0","tags":["heatmap","热图"],"title":"热图制作","uri":"/posts/heatmap-dataviz/"},{"categories":["Markdown"],"content":"这篇文章展示了基本的 Markdown 语法和格式.","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"这篇文章提供了可以在 Hugo 的文章中使用的基本 Markdown 语法示例. 注意 这篇文章借鉴了一篇很棒的来自 Grav 的文章. 如果你想了解 Loveit 主题的扩展 Markdown 语法, 请阅读扩展 Markdown 语法页面. 事实上, 编写 Web 内容很麻烦. WYSIWYG所见即所得 编辑器帮助减轻了这一任务. 但通常会导致代码太糟, 或更糟糕的是, 网页也会很丑. 没有通常伴随的所有复杂和丑陋的问题, Markdown 是一种更好的生成 HTML 内容的方式. 一些主要好处是: Markdown 简单易学, 几乎没有多余的字符, 因此编写内容也更快. 用 Markdown 书写时出错的机会更少. 可以产生有效的 XHTML 输出. 将内容和视觉显示保持分开, 这样就不会打乱网站的外观. 可以在你喜欢的任何文本编辑器或 Markdown 应用程序中编写内容. Markdown 使用起来很有趣! John Gruber, Markdown 的作者如是说: Markdown 格式的首要设计目标是更具可读性. 最初的想法是 Markdown 格式的文档应当以纯文本形式发布, 而不会看起来像被标签或格式说明所标记. 虽然 Markdown 的语法受到几种现有的文本到 HTML 转换工具的影响, 但 Markdown 语法的最大灵感来源是纯文本电子邮件的格式. – John Gruber 话不多说, 我们来回顾一下 Markdown 的主要语法以及生成的 HTML 样式! 技巧  将此页保存为书签，以备将来参考! ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:0:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"1 标题 从 h2 到 h6 的标题在每个级别上都加上一个 ＃: ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 输出的 HTML 看起来像这样: \u003ch2\u003eh2 标题\u003c/h2\u003e \u003ch3\u003eh3 标题\u003c/h3\u003e \u003ch4\u003eh4 标题\u003c/h4\u003e \u003ch5\u003eh5 标题\u003c/h5\u003e \u003ch6\u003eh6 标题\u003c/h6\u003e 标题 ID 要添加自定义标题 ID, 请在与标题相同的行中将自定义 ID 放在花括号中: ### 一个很棒的标题 {#custom-id} 输出的 HTML 看起来像这样: \u003ch3 id=\"custom-id\"\u003e一个很棒的标题\u003c/h3\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:1:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"2 注释 注释是和 HTML 兼容的： \u003c!-- 这是一段注释 --\u003e 不能看到以下的注释: ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:2:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"3 水平线 HTML 中的 \u003chr\u003e 标签是用来在段落元素之间创建一个 “专题间隔” 的. 使用 Markdown, 你可以用以下方式创建一个 \u003chr\u003e 标签: ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号 呈现的输出效果如下: ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:3:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"4 段落 按照纯文本的方式书写段落, 纯文本在呈现的 HTML 中将用 \u003cp\u003e/\u003c/p\u003e 标签包裹. 如下段落: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e 可以使用一个空白行进行换行. ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:4:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"5 内联 HTML 元素 如果你需要某个 HTML 标签 (带有一个类), 则可以简单地像这样使用: Markdown 格式的段落. \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 格式的段落. ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:5:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"6 强调 ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:6:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"加粗 用于强调带有较粗字体的文本片段. 以下文本片段会被 渲染为粗体. **渲染为粗体** __渲染为粗体__ 输出的 HTML 看起来像这样: \u003cstrong\u003e渲染为粗体\u003c/strong\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:6:1","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"斜体 用于强调带有斜体的文本片段. 以下文本片段被 渲染为斜体. *渲染为斜体* _渲染为斜体_ 输出的 HTML 看起来像这样: \u003cem\u003e渲染为斜体\u003c/em\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:6:2","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"删除线 按照 GFMGitHub flavored Markdown 你可以使用删除线. ~~这段文本带有删除线.~~ 呈现的输出效果如下: 这段文本带有删除线. 输出的 HTML 看起来像这样: \u003cdel\u003e这段文本带有删除线.\u003c/del\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:6:3","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"组合 加粗, 斜体, 和删除线可以 组合使用. ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 呈现的输出效果如下: 加粗和斜体 删除线和加粗 删除线和斜体 加粗, 斜体和删除线 输出的 HTML 看起来像这样: \u003cem\u003e\u003cstrong\u003e加粗和斜体\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003e删除线和加粗\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e删除线和斜体\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003e加粗, 斜体和删除线\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:6:4","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"7 引用 用于在文档中引用其他来源的内容块. 在要引用的任何文本之前添加 \u003e: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 呈现的输出效果如下: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 输出的 HTML 看起来像这样: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e 引用也可以嵌套: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. 呈现的输出效果如下: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:7:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"8 列表 ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:8:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"无序列表 一系列项的列表, 其中项的顺序没有明显关系. 你可以使用以下任何符号来表示无序列表中的项: * 一项内容 - 一项内容 + 一项内容 例如: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:8:1","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"有序列表 一系列项的列表, 其中项的顺序确实很重要. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e 技巧 如果你对每一项使用 1., Markdown 将自动为每一项编号. 例如: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:8:2","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"任务列表 任务列表使你可以创建带有复选框的列表. 要创建任务列表, 请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ]). 要选择一个复选框，请在方括号之间添加 x ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media 呈现的输出效果如下: Write the press release Update the website Contact the media ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:8:3","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"9 代码 ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:9:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"行内代码 用 ` 包装行内代码段. 在这个例子中, `\u003csection\u003e\u003c/section\u003e` 会被包裹成 **代码**. 呈现的输出效果如下: 在这个例子中, \u003csection\u003e\u003c/section\u003e 会被包裹成 代码. 输出的 HTML 看起来像这样: \u003cp\u003e 在这个例子中, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e 会被包裹成 \u003cstrong\u003e代码\u003c/strong\u003e. \u003c/p\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:9:1","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"缩进代码 将几行代码缩进至少四个空格，例如: // Some comments line 1 of code line 2 of code line 3 of code 呈现的输出效果如下: // Some comments line 1 of code line 2 of code line 3 of code 输出的 HTML 看起来像这样: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:9:2","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"围栏代码块 使用 “围栏” ``` 来生成一段带有语言属性的代码块. ```markdown Sample text here... ``` 输出的 HTML 看起来像这样: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:9:3","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"语法高亮 GFMGitHub Flavored Markdown 也支持语法高亮. 要激活它，只需在第一个代码 “围栏” 之后直接添加你要使用的语言的文件扩展名, ```js, 语法高亮显示将自动应用于渲染的 HTML 中. 例如, 在以下 JavaScript 代码中应用语法高亮: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` 呈现的输出效果如下: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; 注意 Hugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息, 包括语法高亮的 shortcode. ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:9:4","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"10 表格 通过在每个单元格之间添加竖线作为分隔线, 并在标题下添加一行破折号 (也由竖线分隔) 来创建表格. 注意, 竖线不需要垂直对齐. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. 输出的 HTML 看起来像这样: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e 文本右对齐或居中对齐 在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐. 在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:10:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"11 链接 ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:11:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"基本链接 \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) 呈现的输出效果如下 (将鼠标悬停在链接上，没有提示): https://assemble.io contact@revolunet.com Assemble 输出的 HTML 看起来像这样: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:11:1","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"添加一个标题 [Upstage](https://github.com/upstage/ \"Visit Upstage!\") 呈现的输出效果如下 (将鼠标悬停在链接上，会有一行提示): Upstage 输出的 HTML 看起来像这样: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:11:2","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"定位标记 定位标记使你可以跳至同一页面上的指定锚点. 例如, 每个章节: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. 注意 定位标记的位置几乎是任意的. 因为它们并不引人注目, 所以它们通常被放在同一行了. ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:11:3","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"12 脚注 脚注使你可以添加注释和参考, 而不会使文档正文混乱. 当你创建脚注时, 会在添加脚注引用的位置出现带有链接的上标编号. 读者可以单击链接以跳至页面底部的脚注内容. 要创建脚注引用, 请在方括号中添加插入符号和标识符 ([^1]). 标识符可以是数字或单词, 但不能包含空格或制表符. 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中, 脚注按顺序编号. 在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注). 你不一定要在文档末尾添加脚注. 可以将它们放在除列表, 引用和表格等元素之外的任何位置. 这是一个数字脚注[^1]. 这是一个带标签的脚注[^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 这是一个数字脚注1. 这是一个带标签的脚注2 ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:12:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"13 图片 图片的语法与链接相似, 但包含一个在前面的感叹号. ![Minion](https://octodex.github.com/images/minion.png) 或者: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The StormtroopocatAlt text \" The Stormtroopocat 像链接一样, 图片也具有脚注样式的语法: ![Alt text][id] The DojocatAlt text \" The Dojocat 稍后在文档中提供参考内容, 用来定义 URL 的位置: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" 技巧 LoveIt 主题提供了一个包含更多功能的 图片的 shortcode. 这是一个数字脚注 ↩︎ 这是一个带标签的脚注 ↩︎ ","date":"2019-12-01","objectID":"/posts/basic-markdown-syntax/:13:0","tags":["Markdown","HTML"],"title":"Markdown 基本语法","uri":"/posts/basic-markdown-syntax/"},{"categories":["Markdown"],"content":"Hugo 和 LoveIt 中的 Emoji 的用法指南.","date":"2019-10-01","objectID":"/posts/emoji-support/","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"Emoji 可以通过多种方式在 Hugo 项目中启用. emojify 方法可以直接在模板中调用, 或者使用行内 Shortcodes. 要全局使用 emoji, 需要在你的网站配置中设置 enableEmoji 为 true, 然后你就可以直接在文章中输入 emoji 的代码. 它们以冒号开头和结尾，并且包含 emoji 的 代码: 去露营啦! :tent: 很快就回来. 真开心! :joy: 呈现的输出效果如下: 去露营啦! ⛺ 很快就回来. 真开心! 😂 以下符号清单是 emoji 代码的非常有用的参考. ","date":"2019-10-01","objectID":"/posts/emoji-support/:0:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"表情与情感 ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"笑脸表情 图标 代码 图标 代码 😀 grinning 😃 smiley 😄 smile 😁 grin 😆 laughing satisfied 😅 sweat_smile 🤣 rofl 😂 joy 🙂 slightly_smiling_face 🙃 upside_down_face 😉 wink 😊 blush 😇 innocent ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:1","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"爱意表情 图标 代码 图标 代码 😍 heart_eyes 😘 kissing_heart 😗 kissing ☺️ relaxed 😚 kissing_closed_eyes 😙 kissing_smiling_eyes ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:2","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"吐舌头表情 图标 代码 图标 代码 😋 yum 😛 stuck_out_tongue 😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes 🤑 money_mouth_face ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:3","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"带手的表情 图标 代码 图标 代码 🤗 hugs 🤔 thinking ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:4","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"中性表情 图标 代码 图标 代码 🤐 zipper_mouth_face 😐 neutral_face 😑 expressionless 😶 no_mouth 😏 smirk 😒 unamused 🙄 roll_eyes 😬 grimacing 🤥 lying_face ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:5","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"困倦的表情 图标 代码 图标 代码 😌 relieved 😔 pensive 😪 sleepy 🤤 drooling_face 😴 sleeping ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:6","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"不适的表情 图标 代码 图标 代码 😷 mask 🤒 face_with_thermometer 🤕 face_with_head_bandage 🤢 nauseated_face 🤧 sneezing_face 😵 dizzy_face ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:7","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"戴帽子的表情 图标 代码 图标 代码 🤠 cowboy_hat_face ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:8","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"戴眼镜的表情 图标 代码 图标 代码 😎 sunglasses 🤓 nerd_face ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:9","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"担心的表情 图标 代码 图标 代码 😕 confused 😟 worried 🙁 slightly_frowning_face ☹ frowning_face 😮 open_mouth 😯 hushed 😲 astonished 😳 flushed 😦 frowning 😧 anguished 😨 fearful 😰 cold_sweat 😥 disappointed_relieved 😢 cry 😭 sob 😱 scream 😖 confounded 😣 persevere 😞 disappointed 😓 sweat 😩 weary 😫 tired_face ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:10","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"否定的表情 图标 代码 图标 代码 😤 triumph 😡 pout rage 😠 angry 😈 smiling_imp 👿 imp 💀 skull ☠️ skull_and_crossbones ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:11","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"特殊打扮的表情 图标 代码 图标 代码 💩 hankey poop shit 🤡 clown_face 👹 japanese_ogre 👺 japanese_goblin 👻 ghost 👽 alien 👾 space_invader 🤖 robot ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:12","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"猫脸表情 图标 代码 图标 代码 😺 smiley_cat 😸 smile_cat 😹 joy_cat 😻 heart_eyes_cat 😼 smirk_cat 😽 kissing_cat 🙀 scream_cat 😿 crying_cat_face 😾 pouting_cat ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:13","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"猴脸表情 图标 代码 图标 代码 🙈 see_no_evil 🙉 hear_no_evil 🙊 speak_no_evil ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:14","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"情感 图标 代码 图标 代码 💋 kiss 💌 love_letter 💘 cupid 💝 gift_heart 💖 sparkling_heart 💗 heartpulse 💓 heartbeat 💞 revolving_hearts 💕 two_hearts 💟 heart_decoration ❣️ heavy_heart_exclamation 💔 broken_heart ❤️ heart 💛 yellow_heart 💚 green_heart 💙 blue_heart 💜 purple_heart 🖤 black_heart 💯 100 💢 anger 💥 boom collision 💫 dizzy 💦 sweat_drops 💨 dash 🕳️ hole 💣 bomb 💬 speech_balloon 👁️‍🗨️ eye_speech_bubble 🗯️ right_anger_bubble 💭 thought_balloon 💤 zzz ","date":"2019-10-01","objectID":"/posts/emoji-support/:1:15","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"人与身体 ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"张开手掌的手势 图标 代码 图标 代码 👋 wave 🤚 raised_back_of_hand 🖐️ raised_hand_with_fingers_splayed ✋ hand raised_hand 🖖 vulcan_salute ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:1","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"部分手指的手势 图标 代码 图标 代码 👌 ok_hand ✌️ v 🤞 crossed_fingers 🤘 metal 🤙 call_me_hand ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:2","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"一根手指的手势 图标 代码 图标 代码 👈 point_left 👉 point_right 👆 point_up_2 🖕 fu middle_finger 👇 point_down ☝️ point_up ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:3","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"握紧的手势 图标 代码 图标 代码 👍 +1 thumbsup 👎 -1 thumbsdown ✊ fist fist_raised 👊 facepunch fist_oncoming punch 🤛 fist_left 🤜 fist_right ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:4","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"两只手 图标 代码 图标 代码 👏 clap 🙌 raised_hands 👐 open_hands 🤝 handshake 🙏 pray ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:5","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"握住东西的手势 图标 代码 图标 代码 ✍️ writing_hand 💅 nail_care 🤳 selfie ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:6","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"身体部位 图标 代码 图标 代码 💪 muscle 👂 ear 👃 nose 👀 eyes 👁️ eye 👅 tongue 👄 lips ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:7","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"人 图标 代码 图标 代码 👶 baby 👦 boy 👧 girl :blonde_man: blonde_man person_with_blond_hair 👨 man 👩 woman 👱‍♀️ blonde_woman 👴 older_man 👵 older_woman ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:8","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"身体动作 图标 代码 图标 代码 🙍‍♀️ frowning_woman person_frowning 🙍‍♂️ frowning_man 🙎‍♀️ person_with_pouting_face pouting_woman 🙎‍♂️ pouting_man 🙅‍♀️ ng_woman no_good no_good_woman 🙅‍♂️ ng_man no_good_man 🙆‍♀️ ok_woman 🙆‍♂️ ok_man 💁‍♀️ information_desk_person sassy_woman tipping_hand_woman 💁‍♂️ sassy_man tipping_hand_man 🙋‍♀️ raising_hand raising_hand_woman 🙋‍♂️ raising_hand_man 🙇‍♂️ bow bowing_man 🙇‍♀️ bowing_woman 🤦‍♂️ man_facepalming 🤦‍♀️ woman_facepalming 🤷‍♂️ man_shrugging 🤷‍♀️ woman_shrugging ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:9","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"人物角色 图标 代码 图标 代码 👨‍⚕️ man_health_worker 👩‍⚕️ woman_health_worker 👨‍🎓 man_student 👩‍🎓 woman_student 👨‍🏫 man_teacher 👩‍🏫 woman_teacher 👨‍⚖️ man_judge 👩‍⚖️ woman_judge 👨‍🌾 man_farmer 👩‍🌾 woman_farmer 👨‍🍳 man_cook 👩‍🍳 woman_cook 👨‍🔧 man_mechanic 👩‍🔧 woman_mechanic 👨‍🏭 man_factory_worker 👩‍🏭 woman_factory_worker 👨‍💼 man_office_worker 👩‍💼 woman_office_worker 👨‍🔬 man_scientist 👩‍🔬 woman_scientist 👨‍💻 man_technologist 👩‍💻 woman_technologist 👨‍🎤 man_singer 👩‍🎤 woman_singer 👨‍🎨 man_artist 👩‍🎨 woman_artist 👨‍✈️ man_pilot 👩‍✈️ woman_pilot 👨‍🚀 man_astronaut 👩‍🚀 woman_astronaut 👨‍🚒 man_firefighter 👩‍🚒 woman_firefighter 👮‍♂️ cop policeman 👮‍♀️ policewoman 🕵 detective male_detective 🕵️‍♀️ female_detective 💂‍♂️ guardsman 💂‍♀️ guardswoman 👷‍♂️ construction_worker construction_worker_man 👷‍♀️ construction_worker_woman 🤴 prince 👸 princess 👳‍♂️ man_with_turban 👳‍♀️ woman_with_turban 👲 man_with_gua_pi_mao 🤵 man_in_tuxedo 👰 bride_with_veil 🤰 pregnant_woman ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:10","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"幻想的人物 图标 代码 图标 代码 👼 angel 🎅 santa 🤶 mrs_claus ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:11","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"人物活动 图标 代码 图标 代码 💆‍♀️ massage massage_woman 💆‍♂️ massage_man 💇‍♀️ haircut haircut_woman 💇‍♂️ haircut_man 🚶‍♂️ walking walking_man 🚶‍♀️ walking_woman 🏃‍♂️ runner running running_man 🏃‍♀️ running_woman 💃 dancer 🕺 man_dancing 🕴️ business_suit_levitating 👯‍♀️ dancers dancing_women 👯‍♂️ dancing_men ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:12","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"体育 图标 代码 图标 代码 🤺 person_fencing 🏇 horse_racing ⛷️ skier 🏂 snowboarder 🏌️‍♂️ golfing_man 🏌️‍♀️ golfing_woman 🏄‍♂️ surfer surfing_man 🏄‍♀️ surfing_woman 🚣‍♂️ rowboat rowing_man 🚣‍♀️ rowing_woman 🏊‍♂️ swimmer swimming_man 🏊‍♀️ swimming_woman ⛹️‍♂️ basketball_man ⛹️‍♀️ basketball_woman 🏋️‍♂️ weight_lifting_man 🏋️‍♀️ weight_lifting_woman 🚴‍♂️ bicyclist biking_man 🚴‍♀️ biking_woman 🚵‍♂️ mountain_bicyclist mountain_biking_man 🚵‍♀️ mountain_biking_woman 🤸‍♂️ man_cartwheeling 🤸‍♀️ woman_cartwheeling 🤼‍♂️ men_wrestling 🤼‍♀️ women_wrestling 🤽‍♂️ man_playing_water_polo 🤽‍♀️ woman_playing_water_polo 🤾‍♂️ man_playing_handball 🤾‍♀️ woman_playing_handball 🤹‍♂️ man_juggling 🤹‍♀️ woman_juggling ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:13","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"休息 图标 代码 图标 代码 🛀 bath 🛌 sleeping_bed ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:14","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"家庭 图标 代码 图标 代码 👭 two_women_holding_hands 👫 couple 👬 two_men_holding_hands 👩‍❤️‍💋‍👨 couplekiss_man_woman 👨‍❤️‍💋‍👨 couplekiss_man_man 👩‍❤️‍💋‍👩 couplekiss_woman_woman 👩‍❤️‍👨 couple_with_heart couple_with_heart_woman_man 👨‍❤️‍👨 couple_with_heart_man_man 👩‍❤️‍👩 couple_with_heart_woman_woman 👨‍👩‍👦 family family_man_woman_boy 👨‍👩‍👧 family_man_woman_girl 👨‍👩‍👧‍👦 family_man_woman_girl_boy 👨‍👩‍👦‍👦 family_man_woman_boy_boy 👨‍👩‍👧‍👧 family_man_woman_girl_girl 👨‍👨‍👦 family_man_man_boy 👨‍👨‍👧 family_man_man_girl 👨‍👨‍👧‍👦 family_man_man_girl_boy 👨‍👨‍👦‍👦 family_man_man_boy_boy 👨‍👨‍👧‍👧 family_man_man_girl_girl 👩‍👩‍👦 family_woman_woman_boy 👩‍👩‍👧 family_woman_woman_girl 👩‍👩‍👧‍👦 family_woman_woman_girl_boy 👩‍👩‍👦‍👦 family_woman_woman_boy_boy 👩‍👩‍👧‍👧 family_woman_woman_girl_girl 👨‍👦 family_man_boy 👨‍👦‍👦 family_man_boy_boy 👨‍👧 family_man_girl 👨‍👧‍👦 family_man_girl_boy 👨‍👧‍👧 family_man_girl_girl 👩‍👦 family_woman_boy 👩‍👦‍👦 family_woman_boy_boy 👩‍👧 family_woman_girl 👩‍👧‍👦 family_woman_girl_boy 👩‍👧‍👧 family_woman_girl_girl ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:15","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"人物符号 图标 代码 图标 代码 🗣 speaking_head 👤 bust_in_silhouette 👥 busts_in_silhouette 👣 footprints ","date":"2019-10-01","objectID":"/posts/emoji-support/:2:16","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"动物与自然 ","date":"2019-10-01","objectID":"/posts/emoji-support/:3:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"哺乳动物 图标 代码 图标 代码 🐵 monkey_face 🐒 monkey 🦍 gorilla 🐶 dog 🐕 dog2 🐩 poodle 🐺 wolf 🦊 fox_face 🐱 cat 🐈 cat2 🦁 lion 🐯 tiger 🐅 tiger2 🐆 leopard 🐴 horse 🐎 racehorse 🦄 unicorn 🦌 deer 🐮 cow 🐂 ox 🐃 water_buffalo 🐄 cow2 🐷 pig 🐖 pig2 🐗 boar 🐽 pig_nose 🐏 ram 🐑 sheep 🐐 goat 🐪 dromedary_camel 🐫 camel 🐘 elephant 🦏 rhinoceros 🐭 mouse 🐁 mouse2 🐀 rat 🐹 hamster 🐰 rabbit 🐇 rabbit2 🐿️ chipmunk 🦇 bat 🐻 bear 🐨 koala 🐼 panda_face 🐾 feet paw_prints ","date":"2019-10-01","objectID":"/posts/emoji-support/:3:1","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"鸟类 图标 代码 图标 代码 🦃 turkey 🐔 chicken 🐓 rooster 🐣 hatching_chick 🐤 baby_chick 🐥 hatched_chick 🐦 bird 🐧 penguin 🕊 dove 🦅 eagle 🦆 duck 🦉 owl ","date":"2019-10-01","objectID":"/posts/emoji-support/:3:2","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"两栖动物 icon code icon code 🐸 frog ","date":"2019-10-01","objectID":"/posts/emoji-support/:3:3","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"爬虫类 图标 代码 图标 代码 🐊 crocodile 🐢 turtle 🦎 lizard 🐍 snake 🐲 dragon_face 🐉 dragon ","date":"2019-10-01","objectID":"/posts/emoji-support/:3:4","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"海洋动物 图标 代码 图标 代码 🐳 whale 🐋 whale2 🐬 dolphin flipper 🐟 fish 🐠 tropical_fish 🐡 blowfish 🦈 shark 🐙 octopus 🐚 shell ","date":"2019-10-01","objectID":"/posts/emoji-support/:3:5","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"虫类 图标 代码 图标 代码 🐌 snail 🦋 butterfly 🐛 bug 🐜 ant 🐝 bee honeybee 🐞 beetle 🕷️ spider 🕸️ spider_web 🦂 scorpion ","date":"2019-10-01","objectID":"/posts/emoji-support/:3:6","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"花类植物 图标 代码 图标 代码 💐 bouquet 🌸 cherry_blossom 💮 white_flower 🏵️ rosette 🌹 rose 🥀 wilted_flower 🌺 hibiscus 🌻 sunflower 🌼 blossom 🌷 tulip ","date":"2019-10-01","objectID":"/posts/emoji-support/:3:7","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"其它植物 图标 代码 图标 代码 🌱 seedling 🌲 evergreen_tree 🌳 deciduous_tree 🌴 palm_tree 🌵 cactus 🌾 ear_of_rice 🌿 herb ☘️ shamrock 🍀 four_leaf_clover 🍁 maple_leaf 🍂 fallen_leaf 🍃 leaves ","date":"2019-10-01","objectID":"/posts/emoji-support/:3:8","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"食物与饮料 ","date":"2019-10-01","objectID":"/posts/emoji-support/:4:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"水果 图标 代码 图标 代码 🍇 grapes 🍈 melon 🍉 watermelon 🍊 mandarin orange tangerine 🍋 lemon 🍌 banana 🍍 pineapple 🍎 apple 🍏 green_apple 🍐 pear 🍑 peach 🍒 cherries 🍓 strawberry 🥝 kiwi_fruit 🍅 tomato ","date":"2019-10-01","objectID":"/posts/emoji-support/:4:1","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"蔬菜 图标 代码 图标 代码 🥑 avocado 🍆 eggplant 🥔 potato 🥕 carrot 🌽 corn 🌶️ hot_pepper 🥒 cucumber 🍄 mushroom 🥜 peanuts 🌰 chestnut ","date":"2019-10-01","objectID":"/posts/emoji-support/:4:2","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"快餐 图标 代码 图标 代码 🍞 bread 🥐 croissant 🥖 baguette_bread 🥞 pancakes 🧀 cheese 🍖 meat_on_bone 🍗 poultry_leg 🥓 bacon 🍔 hamburger 🍟 fries 🍕 pizza 🌭 hotdog 🌮 taco 🌯 burrito 🥙 stuffed_flatbread 🥚 egg 🍳 fried_egg 🥘 shallow_pan_of_food 🍲 stew 🥗 green_salad 🍿 popcorn ","date":"2019-10-01","objectID":"/posts/emoji-support/:4:3","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"亚洲食物 图标 代码 图标 代码 🍱 bento 🍘 rice_cracker 🍙 rice_ball 🍚 rice 🍛 curry 🍜 ramen 🍝 spaghetti 🍠 sweet_potato 🍢 oden 🍣 sushi 🍤 fried_shrimp 🍥 fish_cake 🍡 dango ","date":"2019-10-01","objectID":"/posts/emoji-support/:4:4","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"海鲜 图标 代码 图标 代码 🦀 crab 🦐 shrimp 🦑 squid ","date":"2019-10-01","objectID":"/posts/emoji-support/:4:5","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"甜点 图标 代码 图标 代码 🍦 icecream 🍧 shaved_ice 🍨 ice_cream 🍩 doughnut 🍪 cookie 🎂 birthday 🍰 cake 🍫 chocolate_bar 🍬 candy 🍭 lollipop 🍮 custard 🍯 honey_pot ","date":"2019-10-01","objectID":"/posts/emoji-support/:4:6","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"饮料 图标 代码 图标 代码 🍼 baby_bottle 🥛 milk_glass ☕ coffee 🍵 tea 🍶 sake 🍾 champagne 🍷 wine_glass 🍸 cocktail 🍹 tropical_drink 🍺 beer 🍻 beers 🥂 clinking_glasses 🥃 tumbler_glass ","date":"2019-10-01","objectID":"/posts/emoji-support/:4:7","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"餐具 图标 代码 图标 代码 🍽️ plate_with_cutlery 🍴 fork_and_knife 🥄 spoon 🔪 hocho knife 🏺 amphora ","date":"2019-10-01","objectID":"/posts/emoji-support/:4:8","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"旅游与地理 ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"地图 图标 代码 图标 代码 🌍 earth_africa 🌎 earth_americas 🌏 earth_asia 🌐 globe_with_meridians 🗺️ world_map 🗾 japan ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:1","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"地理现象 图标 代码 图标 代码 🏔 mountain_snow ⛰️ mountain 🌋 volcano 🗻 mount_fuji 🏕️ camping ⛱ beach_umbrella 🏜️ desert 🏝️ desert_island 🏞️ national_park ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:2","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"建筑物 图标 代码 图标 代码 🏟️ stadium 🏛️ classical_building 🏗️ building_construction 🏘 houses 🏚 derelict_house 🏠 house 🏡 house_with_garden 🏢 office 🏣 post_office 🏤 european_post_office 🏥 hospital 🏦 bank 🏨 hotel 🏩 love_hotel 🏪 convenience_store 🏫 school 🏬 department_store 🏭 factory 🏯 japanese_castle 🏰 european_castle 💒 wedding 🗼 tokyo_tower 🗽 statue_of_liberty ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:3","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"宗教建筑 图标 代码 图标 代码 ⛪ church 🕌 mosque 🕍 synagogue ⛩️ shinto_shrine 🕋 kaaba ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:4","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"其它地点 图标 代码 图标 代码 ⛲ fountain ⛺ tent 🌁 foggy 🌃 night_with_stars 🏙️ cityscape 🌄 sunrise_over_mountains 🌅 sunrise 🌆 city_sunset 🌇 city_sunrise 🌉 bridge_at_night ♨️ hotsprings 🎠 carousel_horse 🎡 ferris_wheel 🎢 roller_coaster 💈 barber 🎪 circus_tent ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:5","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"陆路运输 图标 代码 图标 代码 🚂 steam_locomotive 🚃 railway_car 🚄 bullettrain_side 🚅 bullettrain_front 🚆 train2 🚇 metro 🚈 light_rail 🚉 station 🚊 tram 🚝 monorail 🚞 mountain_railway 🚋 train 🚌 bus 🚍 oncoming_bus 🚎 trolleybus 🚐 minibus 🚑 ambulance 🚒 fire_engine 🚓 police_car 🚔 oncoming_police_car 🚕 taxi 🚖 oncoming_taxi 🚗 car red_car 🚘 oncoming_automobile 🚙 blue_car 🚚 truck 🚛 articulated_lorry 🚜 tractor 🏎️ racing_car 🏍 motorcycle 🛵 motor_scooter 🚲 bike 🛴 kick_scooter 🚏 busstop 🛣️ motorway 🛤️ railway_track 🛢️ oil_drum ⛽ fuelpump 🚨 rotating_light 🚥 traffic_light 🚦 vertical_traffic_light 🛑 stop_sign 🚧 construction ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:6","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"水路运输 图标 代码 图标 代码 ⚓ anchor ⛵ boat sailboat 🛶 canoe 🚤 speedboat 🛳️ passenger_ship ⛴️ ferry 🛥️ motor_boat 🚢 ship ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:7","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"空中运输 图标 代码 图标 代码 ✈️ airplane 🛩️ small_airplane 🛫 flight_departure 🛬 flight_arrival 💺 seat 🚁 helicopter 🚟 suspension_railway 🚠 mountain_cableway 🚡 aerial_tramway 🛰️ artificial_satellite 🚀 rocket ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:8","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"旅馆 icon code icon code 🛎️ bellhop_bell ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:9","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"时间 图标 代码 图标 代码 ⌛ hourglass ⏳ hourglass_flowing_sand ⌚ watch ⏰ alarm_clock ⏱️ stopwatch ⏲️ timer_clock 🕰️ mantelpiece_clock 🕛 clock12 🕧 clock1230 🕐 clock1 🕜 clock130 🕑 clock2 🕝 clock230 🕒 clock3 🕞 clock330 🕓 clock4 🕟 clock430 🕔 clock5 🕠 clock530 🕕 clock6 🕡 clock630 🕖 clock7 🕢 clock730 🕗 clock8 🕣 clock830 🕘 clock9 🕤 clock930 🕙 clock10 🕥 clock1030 🕚 clock11 🕦 clock1130 ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:10","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"天空与天气 图标 代码 图标 代码 🌑 new_moon 🌒 waxing_crescent_moon 🌓 first_quarter_moon 🌔 moon waxing_gibbous_moon 🌕 full_moon 🌖 waning_gibbous_moon 🌗 last_quarter_moon 🌘 waning_crescent_moon 🌙 crescent_moon 🌚 new_moon_with_face 🌛 first_quarter_moon_with_face 🌜 last_quarter_moon_with_face 🌡️ thermometer ☀️ sunny 🌝 full_moon_with_face 🌞 sun_with_face ⭐ star 🌟 star2 🌠 stars 🌌 milky_way ☁️ cloud ⛅ partly_sunny ⛈ cloud_with_lightning_and_rain 🌤 sun_behind_small_cloud 🌥 sun_behind_large_cloud 🌦 sun_behind_rain_cloud 🌧 cloud_with_rain 🌨 cloud_with_snow 🌩 cloud_with_lightning 🌪️ tornado 🌫️ fog 🌬 wind_face 🌀 cyclone 🌈 rainbow 🌂 closed_umbrella ☂️ open_umbrella ☂️ umbrella ⛱️ parasol_on_ground ⚡ zap ❄️ snowflake ☃️ snowman_with_snow ☃️ snowman ☄️ comet 🔥 fire 💧 droplet 🌊 ocean ","date":"2019-10-01","objectID":"/posts/emoji-support/:5:11","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"活动 ","date":"2019-10-01","objectID":"/posts/emoji-support/:6:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"事件 图标 代码 图标 代码 🎃 jack_o_lantern 🎄 christmas_tree 🎆 fireworks 🎇 sparkler ✨ sparkles 🎈 balloon 🎉 tada 🎊 confetti_ball 🎋 tanabata_tree 🎍 bamboo 🎎 dolls 🎏 flags 🎐 wind_chime 🎑 rice_scene 🎀 ribbon 🎁 gift 🎗️ reminder_ribbon 🎟 tickets 🎫 ticket ","date":"2019-10-01","objectID":"/posts/emoji-support/:6:1","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"奖杯与奖牌 图标 代码 图标 代码 🎖️ medal_military 🏆 trophy 🏅 medal_sports 🥇 1st_place_medal 🥈 2nd_place_medal 🥉 3rd_place_medal ","date":"2019-10-01","objectID":"/posts/emoji-support/:6:2","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"体育运动 图标 代码 图标 代码 ⚽ soccer ⚾ baseball 🏀 basketball 🏐 volleyball 🏈 football 🏉 rugby_football 🎾 tennis 🎳 bowling 🦗 cricket 🏑 field_hockey 🏒 ice_hockey 🏓 ping_pong 🏸 badminton 🥊 boxing_glove 🥋 martial_arts_uniform 🥅 goal_net ⛳ golf ⛸️ ice_skate 🎣 fishing_pole_and_fish 🎽 running_shirt_with_sash 🎿 ski ","date":"2019-10-01","objectID":"/posts/emoji-support/:6:3","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"游戏 图标 代码 图标 代码 🎯 dart 🎱 8ball 🔮 crystal_ball 🎮 video_game 🕹️ joystick 🎰 slot_machine 🎲 game_die ♠️ spades ♥️ hearts ♦️ diamonds ♣️ clubs 🃏 black_joker 🀄 mahjong 🎴 flower_playing_cards ","date":"2019-10-01","objectID":"/posts/emoji-support/:6:4","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"艺术与工艺 图标 代码 图标 代码 🎭 performing_arts 🖼 framed_picture 🎨 art ","date":"2019-10-01","objectID":"/posts/emoji-support/:6:5","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"物品 ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"服装 图标 代码 图标 代码 👓 eyeglasses 🕶️ dark_sunglasses 👔 necktie 👕 shirt tshirt 👖 jeans 👗 dress 👘 kimono 👙 bikini 👚 womans_clothes 👛 purse 👜 handbag 👝 pouch 🛍️ shopping 🎒 school_satchel 👞 mans_shoe shoe 👟 athletic_shoe 👠 high_heel 👡 sandal 👢 boot 👑 crown 👒 womans_hat 🎩 tophat 🎓 mortar_board ⛑️ rescue_worker_helmet 📿 prayer_beads 💄 lipstick 💍 ring 💎 gem ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:1","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"声音 图标 代码 图标 代码 🔇 mute 🔈 speaker 🔉 sound 🔊 loud_sound 📢 loudspeaker 📣 mega 📯 postal_horn 🔔 bell 🔕 no_bell ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:2","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"音乐 图标 代码 图标 代码 🎼 musical_score 🎵 musical_note 🎶 notes 🎙️ studio_microphone 🎚️ level_slider 🎛️ control_knobs 🎤 microphone 🎧 headphones 📻 radio ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:3","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"乐器 图标 代码 图标 代码 🎷 saxophone 🎸 guitar 🎹 musical_keyboard 🎺 trumpet 🎻 violin 🥁 drum ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:4","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"电话 图标 代码 图标 代码 📱 iphone 📲 calling ☎️ phone telephone 📞 telephone_receiver 📟 pager 📠 fax ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:5","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"电脑 图标 代码 图标 代码 🔋 battery 🔌 electric_plug 💻 computer 🖥️ desktop_computer 🖨️ printer ⌨️ keyboard 🖱 computer_mouse 🖲️ trackball 💽 minidisc 💾 floppy_disk 💿 cd 📀 dvd ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:6","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"灯光与影像 图标 代码 图标 代码 🎥 movie_camera 🎞️ film_strip 📽️ film_projector 🎬 clapper 📺 tv 📷 camera 📸 camera_flash 📹 video_camera 📼 vhs 🔍 mag 🔎 mag_right 🕯️ candle 💡 bulb 🔦 flashlight 🏮 izakaya_lantern lantern ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:7","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"书与纸张 图标 代码 图标 代码 📔 notebook_with_decorative_cover 📕 closed_book 📖 book open_book 📗 green_book 📘 blue_book 📙 orange_book 📚 books 📓 notebook 📒 ledger 📃 page_with_curl 📜 scroll 📄 page_facing_up 📰 newspaper 🗞️ newspaper_roll 📑 bookmark_tabs 🔖 bookmark 🏷️ label ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:8","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"钱 图标 代码 图标 代码 💰 moneybag 💴 yen 💵 dollar 💶 euro 💷 pound 💸 money_with_wings 💳 credit_card 💹 chart ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:9","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"邮件 图标 代码 图标 代码 ✉️ email envelope 📧 📧 📨 incoming_envelope 📩 envelope_with_arrow 📤 outbox_tray 📥 inbox_tray 📦 package 📫 mailbox 📪 mailbox_closed 📬 mailbox_with_mail 📭 mailbox_with_no_mail 📮 postbox 🗳 ballot_box ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:10","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"书写 图标 代码 图标 代码 ✏️ pencil2 ✒️ black_nib 🖋 fountain_pen 🖊 pen 🖌 paintbrush 🖍 crayon 📝 memo pencil ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:11","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"办公 图标 代码 图标 代码 💼 briefcase 📁 file_folder 📂 open_file_folder 🗂️ card_index_dividers 📅 date 📆 calendar 🗒 spiral_notepad 🗓 spiral_calendar 📇 card_index 📈 chart_with_upwards_trend 📉 chart_with_downwards_trend 📊 bar_chart 📋 clipboard 📌 pushpin 📍 round_pushpin 📎 paperclip 🖇 paperclips 📏 straight_ruler 📐 triangular_ruler ✂️ scissors 🗃️ card_file_box 🗄️ file_cabinet 🗑️ wastebasket ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:12","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"锁 图标 代码 图标 代码 🔒 lock 🔓 unlock 🔏 lock_with_ink_pen 🔐 closed_lock_with_key 🔑 key 🗝️ old_key ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:13","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"工具 图标 代码 图标 代码 🔨 hammer ⛏️ pick ⚒️ hammer_and_pick 🛠️ hammer_and_wrench 🗡 dagger ⚔️ crossed_swords 🔫 gun 🏹 bow_and_arrow 🛡️ shield 🔧 wrench 🔩 nut_and_bolt ⚙️ gear 🗜 clamp ⚖ balance_scale 🔗 link ⛓️ chains ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:14","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"科学 图标 代码 图标 代码 ⚗️ alembic 🔬 microscope 🔭 telescope 🛰️ satellite ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:15","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"医疗 图标 代码 图标 代码 💉 syringe 💊 pill ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:16","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"生活用品 图标 代码 图标 代码 🚪 door 🛏️ bed 🛋️ couch_and_lamp 🚽 toilet 🚿 shower 🛁 bathtub 🛒 shopping_cart ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:17","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"其它物品 图标 代码 图标 代码 🚬 smoking ⚰️ coffin ⚱️ funeral_urn 🗿 moyai ","date":"2019-10-01","objectID":"/posts/emoji-support/:7:18","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"符号 ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"交通标识 图标 代码 图标 代码 🏧 atm 🚮 put_litter_in_its_place 🚰 potable_water ♿ wheelchair 🚹 mens 🚺 womens 🚻 restroom 🚼 baby_symbol 🚾 wc 🛂 passport_control 🛃 customs 🛄 baggage_claim 🛅 left_luggage ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:1","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"警告 图标 代码 图标 代码 ⚠️ warning 🚸 children_crossing ⛔ no_entry 🚫 no_entry_sign 🚳 no_bicycles 🚭 no_smoking 🚯 do_not_litter 🚱 🚱 🚷 no_pedestrians 📵 no_mobile_phones 🔞 underage ☢ radioactive ☣ biohazard ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:2","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"箭头 图标 代码 图标 代码 ⬆️ arrow_up ↗️ arrow_upper_right ➡️ arrow_right ↘️ arrow_lower_right ⬇️ arrow_down ↙️ arrow_lower_left ⬅️ arrow_left ↖️ arrow_upper_left ↕️ arrow_up_down ↔️ left_right_arrow ↩️ leftwards_arrow_with_hook ↪️ arrow_right_hook ⤴️ arrow_heading_up ⤵️ arrow_heading_down 🔃 arrows_clockwise 🔄 arrows_counterclockwise 🔙 back 🔚 end 🔛 on 🔜 soon 🔝 top ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:3","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"宗教 图标 代码 图标 代码 🛐 place_of_worship ⚛️ atom_symbol 🕉 om ✡️ star_of_david ☸️ wheel_of_dharma ☯️ yin_yang ✝️ latin_cross ☦️ orthodox_cross ☪️ star_and_crescent ☮️ peace_symbol 🕎 menorah 🔯 six_pointed_star ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:4","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"生肖 图标 代码 图标 代码 ♈ aries ♉ taurus ♊ gemini ♋ cancer ♌ leo ♍ virgo ♎ libra ♏ scorpius ♐ sagittarius ♑ capricorn ♒ aquarius ♓ pisces ⛎ ophiuchus ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:5","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"影像符号 图标 代码 图标 代码 🔀 twisted_rightwards_arrows 🔁 repeat 🔂 repeat_one ▶️ arrow_forward ⏩ fast_forward ⏭ next_track_button ⏯ play_or_pause_button ◀️ arrow_backward ⏪ rewind ⏮️ previous_track_button 🔼 arrow_up_small ⏫ arrow_double_up 🔽 arrow_down_small ⏬ arrow_double_down ⏸ pause_button ⏹ stop_button ⏺ record_button 🎦 cinema 🔅 low_brightness 🔆 high_brightness 📶 signal_strength 📳 vibration_mode 📴 mobile_phone_off ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:6","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"数学 图标 代码 图标 代码 ✖️ heavy_multiplication_x ➕ heavy_plus_sign ➖ heavy_minus_sign ➗ heavy_division_sign ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:7","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"标点符号 图标 代码 图标 代码 ‼️ bangbang ⁉️ interrobang ❓ question ❔ grey_question ❕ grey_exclamation ❗ exclamation heavy_exclamation_mark 〰️ wavy_dash ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:8","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"货币 图标 代码 图标 代码 💱 currency_exchange 💲 heavy_dollar_sign ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:9","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"按键符号 图标 代码 图标 代码 #️⃣ hash *️⃣ asterisk 0️⃣ zero 1️⃣ one 2️⃣ two 3️⃣ three 4️⃣ four 5️⃣ five 6️⃣ six 7️⃣ seven 8️⃣ eight 9️⃣ nine 🔟 keycap_ten ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:10","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"字母符号 图标 代码 图标 代码 🔠 capital_abcd 🔡 abcd 🔢 1234 🔣 symbols 🔤 abc 🅰️ a 🆎 ab 🅱️ b 🆑 cl 🆒 cool 🆓 free ℹ️ information_source 🆔 id ⓜ️ m 🆕 new 🆖 ng 🅾️ o2 🆗 ok 🅿️ parking 🆘 sos 🆙 up 🆚 vs 🈁 koko 🈂️ sa 🈷️ u6708 🈶 u6709 🈯 u6307 🉐 ideograph_advantage 🈹 u5272 🈚 u7121 🈲 u7981 🉑 accept 🈸 u7533 🈴 u5408 🈳 u7a7a ㊗️ congratulations ㊙️ secret 🈺 u55b6 🈵 u6e80 ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:11","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"几何符号 图标 代码 图标 代码 🔴 red_circle 🔵 large_blue_circle ⚫ black_circle ⚪ white_circle ⬛ black_large_square ⬜ white_large_square ◼️ black_medium_square ◻️ white_medium_square ◾ black_medium_small_square ◽ white_medium_small_square ▪️ black_small_square ▫️ white_small_square 🔶 large_orange_diamond 🔷 large_blue_diamond 🔸 small_orange_diamond 🔹 small_blue_diamond 🔺 small_red_triangle 🔻 small_red_triangle_down 💠 diamond_shape_with_a_dot_inside 🔘 radio_button 🔳 white_square_button 🔲 black_square_button ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:12","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"其它符合 图标 代码 图标 代码 ♻️ recycle ⚜️ fleur_de_lis 🔱 trident 📛 name_badge 🔰 beginner ⭕ o ✅ white_check_mark ☑️ ballot_box_with_check ✔️ heavy_check_mark ❌ x ❎ negative_squared_cross_mark ➰ curly_loop ➿ loop 〽️ part_alternation_mark ✳️ eight_spoked_asterisk ✴️ eight_pointed_black_star ❇️ sparkle ©️ copyright ®️ registered ™️ tm ","date":"2019-10-01","objectID":"/posts/emoji-support/:8:13","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"旗帜 ","date":"2019-10-01","objectID":"/posts/emoji-support/:9:0","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"常用旗帜 图标 代码 图标 代码 🏁 checkered_flag 🚩 triangular_flag_on_post 🎌 crossed_flags 🏴 black_flag 🏳 white_flag 🏳️‍🌈 rainbow_flag ","date":"2019-10-01","objectID":"/posts/emoji-support/:9:1","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":["Markdown"],"content":"国家和地区旗帜 图标 代码 图标 代码 🇦🇩 andorra 🇦🇪 united_arab_emirates 🇦🇫 afghanistan 🇦🇬 antigua_barbuda 🇦🇮 anguilla 🇦🇱 albania 🇦🇲 armenia 🇦🇴 angola 🇦🇶 antarctica 🇦🇷 argentina 🇦🇸 american_samoa 🇦🇹 austria 🇦🇺 australia 🇦🇼 aruba 🇦🇽 aland_islands 🇦🇿 azerbaijan 🇧🇦 bosnia_herzegovina 🇧🇧 barbados 🇧🇩 bangladesh 🇧🇪 belgium 🇧🇫 burkina_faso 🇧🇬 bulgaria 🇧🇭 bahrain 🇧🇮 burundi 🇧🇯 benin 🇧🇱 st_barthelemy 🇧🇲 bermuda 🇧🇳 brunei 🇧🇴 bolivia 🇧🇶 caribbean_netherlands 🇧🇷 brazil 🇧🇸 bahamas 🇧🇹 bhutan 🇧🇼 botswana 🇧🇾 belarus 🇧🇿 belize 🇨🇦 canada 🇨🇨 cocos_islands 🇨🇩 congo_kinshasa 🇨🇫 central_african_republic 🇨🇬 congo_brazzaville 🇨🇭 switzerland 🇨🇮 cote_divoire 🇨🇰 cook_islands 🇨🇱 chile 🇨🇲 cameroon 🇨🇳 cn 🇨🇴 colombia 🇨🇷 costa_rica 🇨🇺 cuba 🇨🇻 cape_verde 🇨🇼 curacao 🇨🇽 christmas_island 🇨🇾 cyprus 🇨🇿 czech_republic 🇩🇪 de 🇩🇯 djibouti 🇩🇰 denmark 🇩🇲 dominica 🇩🇴 dominican_republic 🇩🇿 algeria 🇪🇨 ecuador 🇪🇪 estonia 🇪🇬 egypt 🇪🇭 western_sahara 🇪🇷 eritrea 🇪🇸 es 🇪🇹 ethiopia 🇪🇺 eu european_union 🇫🇮 finland 🇫🇯 fiji 🇫🇰 falkland_islands 🇫🇲 micronesia 🇫🇴 faroe_islands 🇫🇷 fr 🇬🇦 gabon 🇬🇧 gb uk 🇬🇩 grenada 🇬🇪 georgia 🇬🇫 french_guiana 🇬🇬 guernsey 🇬🇭 ghana 🇬🇮 gibraltar 🇬🇱 greenland 🇬🇲 gambia 🇬🇳 guinea 🇬🇵 guadeloupe 🇬🇶 equatorial_guinea 🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands 🇬🇹 guatemala 🇬🇺 guam 🇬🇼 guinea_bissau 🇬🇾 guyana 🇭🇰 hong_kong 🇭🇳 honduras 🇭🇷 croatia 🇭🇹 haiti 🇭🇺 hungary 🇮🇨 canary_islands 🇮🇩 indonesia 🇮🇪 ireland 🇮🇱 israel 🇮🇲 isle_of_man 🇮🇳 india 🇮🇴 british_indian_ocean_territory 🇮🇶 iraq 🇮🇷 iran 🇮🇸 iceland 🇮🇹 it 🇯🇪 jersey 🇯🇲 jamaica 🇯🇴 jordan 🇯🇵 jp 🇰🇪 kenya 🇰🇬 kyrgyzstan 🇰🇭 cambodia 🇰🇮 kiribati 🇰🇲 comoros 🇰🇳 st_kitts_nevis 🇰🇵 north_korea 🇰🇷 kr 🇰🇼 kuwait 🇰🇾 cayman_islands 🇰🇿 kazakhstan 🇱🇦 laos 🇱🇧 lebanon 🇱🇨 st_lucia 🇱🇮 liechtenstein 🇱🇰 sri_lanka 🇱🇷 liberia 🇱🇸 lesotho 🇱🇹 lithuania 🇱🇺 luxembourg 🇱🇻 latvia 🇱🇾 libya 🇲🇦 morocco 🇲🇨 monaco 🇲🇩 moldova 🇲🇪 montenegro 🇲🇬 madagascar 🇲🇭 marshall_islands 🇲🇰 macedonia 🇲🇱 mali 🇲🇲 myanmar 🇲🇳 mongolia 🇲🇴 macau 🇲🇵 northern_mariana_islands 🇲🇶 martinique 🇲🇷 mauritania 🇲🇸 montserrat 🇲🇹 malta 🇲🇺 mauritius 🇲🇻 maldives 🇲🇼 malawi 🇲🇽 mexico 🇲🇾 malaysia 🇲🇿 mozambique 🇳🇦 namibia 🇳🇨 new_caledonia 🇳🇪 niger 🇳🇫 norfolk_island 🇳🇬 nigeria 🇳🇮 nicaragua 🇳🇱 netherlands 🇳🇴 norway 🇳🇵 nepal 🇳🇷 nauru 🇳🇺 niue 🇳🇿 new_zealand 🇴🇲 oman 🇵🇦 panama 🇵🇪 peru 🇵🇫 french_polynesia 🇵🇬 papua_new_guinea 🇵🇭 philippines 🇵🇰 pakistan 🇵🇱 poland 🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands 🇵🇷 puerto_rico 🇵🇸 palestinian_territories 🇵🇹 portugal 🇵🇼 palau 🇵🇾 paraguay 🇶🇦 qatar 🇷🇪 reunion 🇷🇴 romania 🇷🇸 serbia 🇷🇺 ru 🇷🇼 rwanda 🇸🇦 saudi_arabia 🇸🇧 solomon_islands 🇸🇨 seychelles 🇸🇩 sudan 🇸🇪 sweden 🇸🇬 singapore 🇸🇭 st_helena 🇸🇮 slovenia 🇸🇰 slovakia 🇸🇱 sierra_leone 🇸🇲 san_marino 🇸🇳 senegal 🇸🇴 somalia 🇸🇷 suriname 🇸🇸 south_sudan 🇸🇹 sao_tome_principe 🇸🇻 el_salvador 🇸🇽 sint_maarten 🇸🇾 syria 🇸🇿 swaziland 🇹🇨 turks_caicos_islands 🇹🇩 chad 🇹🇫 french_southern_territories 🇹🇬 togo 🇹🇭 thailand 🇹🇯 tajikistan 🇹🇰 tokelau 🇹🇱 timor_leste 🇹🇲 turkmenistan 🇹🇳 tunisia 🇹🇴 tonga 🇹🇷 tr 🇹🇹 trinidad_tobago 🇹🇻 tuvalu 🇹🇼 taiwan 🇹🇿 tanzania 🇺🇦 ukraine 🇺🇬 uganda 🇺🇸 us 🇺🇾 uruguay 🇺🇿 uzbekistan 🇻🇦 vatican_city 🇻🇨 st_vincent_grenadines 🇻🇪 venezuela 🇻🇬 british_virgin_islands 🇻🇮 us_virgin_islands 🇻🇳 vietnam 🇻🇺 vanuatu 🇼🇫 wallis_futuna 🇼🇸 samoa 🇽🇰 kosovo 🇾🇪 yemen 🇾🇹 mayotte 🇿🇦 south_africa 🇿🇲 zambia 🇿🇼 zimbabwe ","date":"2019-10-01","objectID":"/posts/emoji-support/:9:2","tags":["emoji"],"title":"Emoji 支持","uri":"/posts/emoji-support/"},{"categories":null,"content":"  LoveIt 是一个由 Dillon 开发的简洁、优雅且高效的 Hugo 博客主题。 它的原型基于 LeaveIt 主题 和 KeepIt 主题。 Hugo 主题 LoveItHugo 主题 LoveIt \" Hugo 主题 LoveIt ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"特性 性能和 SEO  性能优化：在 Google PageSpeed Insights 中， 99/100 的移动设备得分和 100/100 的桌面设备得分  使用基于 JSON-LD 格式 的 SEO SCHEMA 文件进行 SEO 优化  支持 Google Analytics  支持 Fathom Analytics  支持搜索引擎的网站验证 (Google, Bind, Yandex and Baidu)  支持所有第三方库的 CDN  基于 lazysizes 自动转换图片为懒加载 外观和布局 / 响应式布局 / 浅色/深色 主题模式  全局一致的设计语言  支持分页  易用和自动展开的文章目录  支持多语言和国际化  美观的 CSS 动画 社交和评论系统  支持 Gravatar 头像  支持本地头像  支持多达 64 种社交链接  支持多达 28 种网站分享  支持 Disqus 评论系统  支持 Gitalk 评论系统  支持 Valine 评论系统  支持 Facebook 评论系统  支持 Telegram comments 评论系统  支持 Commento 评论系统  支持 Utterances 评论系统 扩展功能  支持基于 Lunr.js 或 algolia 的搜索  支持 Twemoji  支持代码高亮  一键复制代码到剪贴板  支持基于 lightgallery.js 的图片画廊  支持 Font Awesome 图标的扩展 Markdown 语法  支持上标注释的扩展 Markdown 语法  支持分数的扩展 Markdown 语法  支持基于 $ \\KaTeX $ 的数学公式  支持基于 mermaid 的图表 shortcode  支持基于 ECharts 的交互式数据可视化 shortcode  支持基于 Mapbox GL JS 的 Mapbox shortcode  支持基于 APlayer 和 MetingJS 的音乐播放器 shortcode  支持 Bilibili 视频 shortcode  支持多种注释的 shortcode  支持自定义样式的 shortcode  支持自定义脚本的 shortcode  支持基于 TypeIt 的打字动画 shortcode  支持基于 Smooth Scroll 的滚动动画  支持基于 cookieconsent 的 Cookie 许可横幅 … ","date":"2019-08-02","objectID":"/about/:0:1","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"许可协议 LoveIt 根据 MIT 许可协议授权。 更多信息请查看 LICENSE 文件。 LoveIt 主题中用到了以下项目，感谢它们的作者： normalize.css Font Awesome Simple Icons Animate.css Smooth Scroll autocomplete.js Lunr.js algoliasearch lazysizes object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt $ \\KaTeX $ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2019-08-02","objectID":"/about/:0:2","tags":null,"title":"关于 LoveIt","uri":"/about/"}]